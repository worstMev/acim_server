{"version":3,"sources":["userTypes.js","components/login/loginData.js","components/login/index.js","components/layout/index.js","socket_io/socket_io.js","components/intervention/index.js","components/foldableDiv/index.js","components/toDoList/index.js","urgent.js","components/notif/index.js","components/notifsList/index.js","utils/dropDown.js","components/createIntervention/index.js","components/dashboard/index.js","components/notifHistoryTech/index.js","components/notifsHistory/index.js","components/utils/dropDown/index.js","components/problemeTechConstate/index.js","components/interventionLog/index.js","components/materielSelector/index.js","components/multiMaterielSelector/index.js","components/interventionDecharge/index.js","components/interventionPage/index.js","functions/index.js","components/interventionHistoryControl/index.js","components/interventionHistoryAffichage/index.js","components/interventionHistory/index.js","components/main/index.js","components/notifyHeader/index.js","components/ask/index.js","components/notifHistory/index.js","components/history/index.js","components/interventionNotification/index.js","components/notify/index.js","components/protectedRoute/index.js","App.js","reportWebVitals.js","index.js"],"names":["User","text","code","computeHmac","key","a","cryptojs","HmacMD5","computedHash","hexaComputedHash","SERVER_BASE_URL","postRequest","url","data","axiosInstance","axios","create","baseURL","post","response","console","log","authenticateUsername","username","usernameIsValid","authenticate","password","found","isAuthenticated","row","num_user","type_user","Login","props","changeSubmittedUsername","event","setState","submittedUsername","target","value","changeSubmittedPassword","submittedPassword","checkCredentials","preventDefault","state","setCredentials","logged","computedHash_USER","computedHash_TECH_MAIN","history","push","className","src","alt","id","onSubmit","this","type","placeholder","onChange","autoFocus","onClick","React","Component","Layout","children","to","socket","io","autoConnect","onAny","args","mySocket","connect","auth","disconnect","offAny","Intervention","showDetails","detailsAreShown","goToIntervention","num_intervention","showSub","sumStyle","interventionStyle","intervention","date_programme","lieu_libelle","motif","intervention_type","tech_main_username","numero","done","probleme_resolu","libelle_probleme_tech_type","code_intervention_type","detailStyle","display","height","selected","background","borderLeft","borderTop","borderBottom","borderRight","borderRadius","style","Date","toLocaleString","FoldableDiv","flipFold","newFolded","folded","foldableStyle","title","titleStyle","maxHeight","minHeight","ToDoList","componentDidMount","emit","num_tech_main","on","listUndoneIntervention","newList","map","item","index","libelle","libelle_intervention_type","setNbInterventionUndone","length","newListLate","filter","getTime","newListToday","interventionDate","startOfDay","setHours","endOfDay","interventionListUndone","interventionListUndoneLate","interventionListUndoneToday","clickOnToDoList","componentWillUnmount","off","displayToDo","list","retardTitle","todayTitle","allTitle","topText","color","Urgent","ToDo","commandAreShown","showCommand","do","delai","num_notification","notif","num_app_user_tech_main","statutStyle","statut_code","fontWeight","probleme_type","statut_libelle","lieu","date_envoie","remarque","sender_username","NotifsList","displayNotif","session","onClickOnNotifsList","nbNewNotificationToZero","notifsList","newUnansweredNotifsList","user_sender_username","probleme_code","statut","setNbNewNotif","unansweredNotifsList","createdNotif","setTimeout","DropDown","optionArray","array","objArray","defaultValue","selectedValue","e","CreateIntervention","updateTypeIntervention","newNumInterventionType","selectedNumInterventionType","updateDateProgramme","newDateProgramme","dateProgramme","dateProgrammeDisplay","updateLieu","newNumLieu","selectedNumLieu","updateMaterielType","materiels","selectedMaterielType","materielList","updateMateriel","selectedNumMateriel","updateMotif","updateProbleme","numLieu","problemeTechTypes","newMotif","lieus","selectedNumProblemeTechType","createDecharge","alert","createIntervention","message","interventionTypeList","toISOString","replace","lieuList","materielTypes","problemeList","intervention_types","newInterventionList","num_intervention_type","num_lieu","newLieuList","materielsList","libelle_materiel_type","num_materiel_type","num_materiel","libelle_materiel","probleme_tech_types","probleme_tech_type","num_probleme_tech_type","newProblemeList","blem","Dashboard","nbInterventionUndonePlus","nb","newNb","parseInt","nbInterventionUndone","nbNewNotificationPlus","nbNewNotification","match","path","mainDashboardStyle","activeClassName","exact","from","render","routeProps","NotifHistoryTech","date_reponse","NotifsHistory","notifsTab","newNotifsTab","usersList","componentDidUpdate","updateSelectedUser","selectedUser","showNotifs","usersOption","user","ProblemeConstate","problemeTechTypeArray","lieuArray","unshift","numProblemeTechType","onChangeProblemeTechType","onChangeLieu","onChangeRemarque","InterventionLog","etapes","split","changeEtapesLength","newLength","i","dE","updateLog","join","logElements","etape","newEtape","newEtapes","slice","changeEtape","MaterielSelector","objMateriel","num","config","changeList","updateConfig","MultiMaterielSelector","listMateriel","maxLength","maxListMaterielLength","changeListMaterielLength","dLength","setListMateriel","materielElements","materiel","obj","objValue","changeListMateriel","InterventionDecharge","control","disabled","tomorrowDate","setDate","getDate","useState","setMateriels","dateDebut","setDateDebut","dateFin","setDateFin","num_decharge","downloadDecharge","materielsValide","date","debut","fin","formatDate","day","month","getMonth","year","getFullYear","InterventionPage","newMateriels","updateProblemeTechType","newNumProblemeTechType","updateRemarque","newRemarque","newLog","updatePwd","newPwd","pwd","startIntervention","techMainIsAuth","endIntervention","resolu","date_debut","updateIntervention","probleme_constate","getDecharge","s_URL","URL","document","location","href","m_path","port","pathname","window","open","newDecharge","newIntervention","log_info_tab","log_info_elements","libelle_lieu","date_fin","log_info","lieu_probleme_tech","num_decharge_info","closeSub","info","InterventionHistoryControl","updateTechMain","techMains","setTechMain","updateDateDebut","newDebut","updateDateFin","newFin","updateStatut","newStatut","statuts","setStatut","tech_mainList","statutList","0","1","2","3","newTech_mainList","tech","nd","tech_main","statutValue","InterventionHistoryAffichage","displayInterventions","interventions","statut_text","date_text","tech_main_username_text","InterventionHistory","st","setFullYear","interventionList","prevProps","prevState","minDate","toLocaleDateString","Main","newShowSub","numSelectedIntervention","showPopUp","popUp","current","top","onClickNotif","logOut","newNewNotifs","newNotifs","pop","newNotif","now_2","date_notif","newNbNewNotification","showNewNotifs","probleme_statut_code","toLocaleTimeString","probleme_statut","createRef","displayStyle","subStyle","subDisplayChildrenStyle","width","ref","Notify_header","showNotif","Ask","updateProblem","problem","updateProblemType","num_probleme_type","updateProblemStatut","num_probleme_statut","listProblem","newListProblem","listProblemStatut","newListProblemStatut","listLieu","newListLieu","nbNewNotifsPlus","indication","componentDidupdate","sendNotifs","selectedProblemTypeCode","find","newProblem","num_app_user_user","indicationStyle","opacity","right","Notif_history","showInfoOf","History","nbNewNotifsToZero","Intervention_notification","notifList","new_interventionTab","interventionTab","displayListInterevention","Notify","nbNewNotifs","notify_notif_pop","hideNotif","showSubWithInfo","formatNotifsList","date_envoie_formatted","newNotifsList","now_10","TabDisplay","ProtectedRoute","determineRender","conditionIn","redirectRender","App","cred","localStorage","getItem","t_u","t_t","nextProps","nextState","setItem","redirectTo","determineRootRedirect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5677cee8.chunk.js","sourcesContent":["import cryptojs from 'crypto-js';\r\nexport const User = {\r\n    TECH_MAIN : { \r\n        text :'technicien de maintenance',\r\n        code : 'TECH_MAIN',\r\n    },\r\n    USER : {\r\n        text : 'utilisateur',\r\n        code : 'USER',\r\n    },\r\n    DASH : { \r\n        text : 'tableau de bord',\r\n        code : 'DASH',\r\n    },\r\n}\r\n\r\nexport async function computeHmac( text , key ) {\r\n    let computedHash = await cryptojs.HmacMD5(text, key);\r\n    const hexaComputedHash ='\\\\x'+computedHash;\r\n    return hexaComputedHash;\r\n}\r\n","import axios from 'axios';\r\n\r\nconst SERVER_BASE_URL = 'http://localhost:3500/ajax/acim';\r\n\r\nasync function postRequest(url,data) {\r\n    const axiosInstance = axios.create({\r\n        baseURL : SERVER_BASE_URL,\r\n    });\r\n    let response;\r\n    try{\r\n        response = await axiosInstance.post(url,data);\r\n        return response;\r\n    }catch(err){\r\n        console.log(`error to fetch data from ${SERVER_BASE_URL}${url}`);\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport async function authenticateUsername (username) {\r\n    const url = '/authenticate/username';\r\n    const data = { username };\r\n    let response;\r\n    try{\r\n        response = await postRequest(url,data);\r\n        console.log(' username  :'+username+' is valid '+response.data.usernameIsValid);\r\n        return {\r\n            usernameIsValid : response.data.usernameIsValid,\r\n        };\r\n    }catch(err){\r\n        console.log(`error in authenticateUsername`);\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport async function authenticate( username , password ) {\r\n    const url   = '/authenticate';\r\n    const data  = { username , password };\r\n    let response ;\r\n    try{\r\n        response = await postRequest(url,data);\r\n        console.log( ' authentication success for '+username+' ' + response.data.found );\r\n        return {\r\n            isAuthenticated : response.data.found,\r\n            username : response.data.row.username,\r\n            num_user : response.data.row.num_user,\r\n            type_user : response.data.row.type_user,\r\n        }\r\n    }catch(err){\r\n        console.log('error in authenticate');\r\n        console.log(err);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './index.css';\r\nimport { User, computeHmac } from './../../userTypes.js';\r\nimport { authenticateUsername, authenticate } from './loginData';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            usernameIsValid : false,\r\n            submittedUsername : '',\r\n            submittedPassword : '',\r\n        }\r\n    }\r\n\r\n    changeSubmittedUsername = (event) => {\r\n       this.setState({\r\n           submittedUsername : event.target.value,\r\n       });\r\n    }\r\n\r\n    changeSubmittedPassword = (event) => {\r\n       this.setState({\r\n           submittedPassword : event.target.value,\r\n       });\r\n    }\r\n    checkCredentials = async (event) => {\r\n        event.preventDefault();\r\n        if( !this.state.usernameIsValid) {\r\n            const response = await authenticateUsername(this.state.submittedUsername);\r\n            console.log(response);\r\n            this.setState({\r\n                usernameIsValid : response.usernameIsValid,\r\n            });\r\n        }else{\r\n            console.log('authenticate username/password');\r\n            try{\r\n                const response = await authenticate(this.state.submittedUsername , this.state.submittedPassword);\r\n                console.log(response);\r\n                if( response.isAuthenticated ){\r\n                    this.props.setCredentials({\r\n                        logged : true,\r\n                        num_user : response.num_user,\r\n                        username : response.username,\r\n                        type_user   : response.type_user,\r\n                    });\r\n                    //console.log(' type_user from server '+ response.type_user);\r\n                    let computedHash_USER = await computeHmac(User.USER.code, response.username);\r\n                    let computedHash_TECH_MAIN = await computeHmac(User.TECH_MAIN.code, response.username);\r\n                    if ( response.type_user === computedHash_USER ) this.props.history.push('/notify');\r\n                    if( response.type_user === computedHash_TECH_MAIN ) this.props.history.push('/acim');\r\n                }\r\n            }catch(err){\r\n                console.log('error in checkCrendentials' , err);\r\n            }\r\n        }\r\n        //check for username , if valid > usernameIsValid = true , submittedUsername = username . done\r\n        //if usernameIsValid , check for submittedUsername&&password , if valid : hitsory.push('/dashboard');\r\n    }\r\n    render (){\r\n        return (\r\n            <div className=\"login\">\r\n                <div>\r\n                    <img src=\"./base_logo_sans_texte.png\" alt=\"mptdn|acim\" id=\"logo\"/>\r\n                </div>\r\n                <form className = \"login_form\" onSubmit={this.checkCredentials}>\r\n                    { (this.state.usernameIsValid) ? \r\n                        <input type=\"password\" placeholder=\"mot de passe\" value={this.state.submittedPassword} onChange={this.changeSubmittedPassword} autoFocus={true}/>\r\n                        :\r\n                        <input type=\"text\" placeholder=\"utilisateur\" value={this.state.submittedUsername} onChange={this.changeSubmittedUsername} autoFocus={true}/>\r\n                    }\r\n                    <button className=\"my-button login-button\" onClick={this.checkCredentials}> {\">\"} </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './index.css';\r\n\r\nexport default class Layout extends React.Component {\r\n    render(){\r\n      return (  \r\n        <div id=\"layout\">\r\n            <main>\r\n                {this.props.children}\r\n            </main>\r\n            <footer>\r\n              <Link to=\"/\">home</Link>\r\n              <Link to=\"/info\">info</Link>\r\n              <Link to=\"/acim\">acim</Link>\r\n              <Link to=\"/notify\">notify</Link>\r\n            </footer>\r\n        </div>\r\n     );\r\n    }\r\n}\r\n","import { io } from 'socket.io-client';\n\nconst socket = io('http://localhost:3500', {\n\tautoConnect : false ,\n});\n\nsocket.onAny((event , ...args) => {\n    console.log(`-- ${event} `, args);\n});\n\nexport const mySocket = {\n    socket ,\n    connect : (username , type_user , num_user) => {\n        console.log( username , type_user , num_user );\n        //connect socket\n        console.log(socket);\n        socket.auth = {\n            username,\n            type_user,\n            num_user,\n        };\n        socket.connect();\n    },\n    disconnect : () => {\n        console.log('my socket disconnect ');\n        socket.offAny();\n        socket.disconnect();\n    }\n}\n","import './index.css';\nimport React from 'react';\n\nexport default class Intervention extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            detailsAreShown : false ,\n        }\n    }\n    showDetails = () => {\n        this.setState({\n            detailsAreShown : !(this.state.detailsAreShown),\n        });\n    }\n    goToIntervention = (num_intervention) => {\n        //alert('open /intervention/'+num_intervention);\n        //this.props.history.push(`/intervention/${num_intervention}`);\n        this.props.showSub(num_intervention);\n    }\n    render () {\n        let { date_programme ,\n            num_intervention,\n            lieu_libelle, \n            motif,\n            intervention_type,\n            tech_main_username,\n            numero,\n            done,\n            probleme_resolu,\n            libelle_probleme_tech_type,\n            code_intervention_type} = this.props.intervention;\n        let sumStyle ;\n        let interventionStyle ;\n        let detailStyle = {\n            display : \"none\",\n        };\n        if(this.state.detailsAreShown){\n            detailStyle = {\n                height : \"80%\",\n            };\n            sumStyle = {\n                height : \"15%\",\n            };\n            interventionStyle = {\n                height : \"300px\",\n            }\n\n        }\n        if( this.props.selected ) {\n            interventionStyle = {\n                ...interventionStyle,\n                background : 'rgb(169, 200, 247)',\n            }\n        }\n        if( done ){\n            interventionStyle = {\n                ...interventionStyle,\n                borderLeft : '5px solid green',\n                borderTop : '1px solid green',\n                borderBottom : '1px solid green',\n                borderRight : '1px solid green',\n\n            }\n        }else{\n            interventionStyle = {\n                ...interventionStyle,\n                borderLeft : '5px solid red',\n            }\n        }\n        interventionStyle = {\n            ...interventionStyle,\n            borderRadius : '0 5px 5px 0',\n        }\n\n       \n        return (\n            <div className=\"toDo\" style={interventionStyle} >\n                <div className=\"toDo-sum\" style={sumStyle} >\n                    <p> #{numero} <br/> {code_intervention_type}</p>\n                    <p> {new Date(date_programme).toLocaleString('fr-FR')} </p>\n                    <p> {lieu_libelle} </p>\n                    <p id=\"tache_description\"> {intervention_type} </p>\n                    <p id=\"tech_main_username\"> {tech_main_username} </p>\n                    <p> Effectue : { (done) ? 'OUI' : 'NON' } et {(probleme_resolu) ? 'RESOLU' : 'NON-RESOLU' } </p>\n                    <button onClick={this.showDetails}> Details </button>\n                </div>\n                <div className=\"toDo-details\" style={detailStyle} >\n                    <p> Type : {intervention_type}  </p>\n                    <p> Motif : {motif} </p>\n                    <p> Lieu : {lieu_libelle} </p>\n                    <p> Crèèe par : {tech_main_username} </p>\n                    <p> ID intervention : {num_intervention} </p>\n                    <p> Probleme constaté : { libelle_probleme_tech_type} </p>\n                    <button onClick={() => this.goToIntervention(num_intervention)}  >\n                        { (this.props.selected) ? 'Fermer' : 'Ouvrir' }\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css'\nimport React , { Component } from 'react';\n\nexport default class FoldableDiv extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            folded : this.props.folded,\n        }\n    }\n\n    flipFold = () => {\n        let newFolded = !(this.state.folded);\n        this.setState({\n            folded : newFolded,\n        });\n    }\n    render () {\n        let {\n            children,\n            title,\n            titleStyle,\n        } = this.props;\n        let {\n            folded\n        } = this.state;\n        let foldableStyle ;\n        if( folded ){\n            foldableStyle = {\n                ...foldableStyle,\n                maxHeight : '50px',\n                minHeight : '50px',\n            };\n        }else{\n            foldableStyle = {\n                ...foldableStyle,\n                maxHeight : '500px',\n            }\n\n        }\n        return (\n            <div className = \"foldableDiv\" style={foldableStyle} >\n                <div className = \"foldableDiv-title\" style={titleStyle} onClick={this.flipFold}>\n                    <p> {title} </p>\n                    <button onClick={this.flipFold}>{(folded) ? 'v':'^'} </button>\n                </div>\n                <div className = \"foldableDiv-children\">\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css';\r\nimport React from 'react';\r\n//import ToDo from './../toDo';\r\nimport Intervention from './../intervention';\r\nimport FoldableDiv from './../foldableDiv';\r\n\r\n/*\r\n * prop : num_tech_main to define by who the intervetions have been created if none then all intervention are shown\r\n *         - showSub to show the display for intervention\r\n *         - setNbInterventionUndone\r\n * */\r\n\r\nexport default class ToDoList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            interventionListUndone : [],\r\n            interventionListUndoneLate : [],\r\n            interventionListUndoneToday : [],\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        console.log('ToDoList did mount');\r\n        this.props.socket.emit('get undone intervention' , this.props.num_tech_main);\r\n        this.props.socket.on('list undone intervention' , (listUndoneIntervention) => {\r\n            console.log('list undone intervention' , listUndoneIntervention);\r\n            let newList = listUndoneIntervention.map( (item,index) => ({\r\n                num_intervention : item.num_intervention,\r\n                date_programme : item.date_programme,\r\n                lieu_libelle : item.libelle,\r\n                intervention_type : item.libelle_intervention_type,\r\n                tech_main_username : item.username,\r\n                motif : item.motif,\r\n                numero : index + 1,\r\n                done : item.done,\r\n                libelle_probleme_tech_type : item.libelle_probleme_tech_type,\r\n                code_intervention_type : item.code_intervention_type,\r\n            }));\r\n            console.log('new list intervention undone' , newList);\r\n            if(this.props.setNbInterventionUndone){\r\n                this.props.setNbInterventionUndone(newList.length);\r\n            }\r\n            let newListLate = newList.filter( item => new Date(item.date_programme).getTime() <= new Date().getTime() ); \r\n            let newListToday = newList.filter( item => {\r\n                let interventionDate = new Date(item.date_programme).getTime() ;\r\n                let startOfDay  = new Date(new Date().setHours(0,0,0)).getTime();\r\n                let endOfDay = new Date(new Date().setHours(23,59,59)).getTime();\r\n               \r\n                return ( interventionDate > startOfDay && interventionDate <= endOfDay );\r\n            });\r\n            console.log('newListToday' , newListToday);\r\n            this.setState({\r\n                interventionListUndone : newList,\r\n                interventionListUndoneLate : newListLate,\r\n                interventionListUndoneToday : newListToday,\r\n            });\r\n        });\r\n        this.props.socket.on('new intervention' , ()=> {\r\n            console.log('new intervention todolist');\r\n            this.props.socket.emit('get undone intervention');\r\n        });\r\n\r\n        this.props.socket.on('ended intervention' , () => {\r\n            console.log('ended intervention todolist');\r\n            this.props.socket.emit('get undone intervention');\r\n        });\r\n    }\r\n    \r\n    componentDidUpdate () {\r\n        console.log('update toDoList');\r\n    }\r\n\r\n    clickOnToDoList = () => {\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        console.log('ToDoList will unmount');\r\n        this.props.socket.off('list undone intervention');\r\n        \r\n    }\r\n    displayToDo  = (list) => {\r\n        //return list.map( intervention => <ToDo intervention={intervention} key={intervention.num_intervention}/> );\r\n        return list.map( intervention => <Intervention showSub={this.props.showSub} intervention={intervention} key={intervention.num_intervention}/> );\r\n    }\r\n\r\n    render(){\r\n        \r\n        let{\r\n            interventionListUndoneLate,\r\n            interventionListUndoneToday,\r\n            interventionListUndone,\r\n        } = this.state;\r\n        let retardTitle = `En retard : ${interventionListUndoneLate.length}`;\r\n        let todayTitle = `Aujourd'hui : ${interventionListUndoneToday.length}`;\r\n        let allTitle = `Toutes : ${interventionListUndone.length}`;\r\n        return (\r\n            <div id=\"toDoList\" onClick={this.clickOnToDoList}>\r\n                <p> {this.props.topText || 'Liste des taches a faire :'} </p>\r\n                    <div className=\"scroll_list\">\r\n                        <FoldableDiv title={retardTitle} titleStyle={{color : 'red'}} folded={true}>\r\n                            <div className=\"scroll_list\">\r\n                                    {this.displayToDo(this.state.interventionListUndoneLate)}\r\n                            </div>\r\n                        </FoldableDiv>\r\n                        <FoldableDiv title={todayTitle} >\r\n                            <div className=\"scroll_list\">\r\n                                    {this.displayToDo(this.state.interventionListUndoneToday)}\r\n                            </div>\r\n                        </FoldableDiv>\r\n                        <FoldableDiv title={allTitle} folded={true}>\r\n                            <div className=\"scroll_list\">\r\n                                    {this.displayToDo(this.state.interventionListUndone)}\r\n                            </div>\r\n                        </FoldableDiv>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const Urgent = {\r\n    MAX : {\r\n        code : 'MAX',\r\n        libelle : 'tres urgent',\r\n    },\r\n    MID : {\r\n        code : 'MID',\r\n        libelle : 'moyennement urgent',\r\n    },\r\n    MIN : {\r\n        code : 'MIN',\r\n        libelle : 'pas urgent',\r\n    },\r\n}\r\n","import './index.css';\nimport React from 'react';\nimport {Urgent} from './../../urgent.js';\n\nexport default class ToDo extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            detailsAreShown : false ,\n            commandAreShown : false,\n        }\n    }\n    showDetails = () => {\n        if(this.state.commandAreShown) return ;\n        this.setState({\n            detailsAreShown : !(this.state.detailsAreShown),\n        });\n    }\n\n    showCommand = () => {\n        \n        this.setState({\n            commandAreShown : !(this.state.commandAreShown) ,\n            detailsAreShown : !(this.state.commandAreShown),\n        });\n    }\n\n    do = (delai=0) => {\n        let num_notification = this.props.notif.num_notification;\n        let num_app_user_tech_main = this.props.num_user;\n        console.log(`do the notif #${num_notification} ${delai} by ${num_app_user_tech_main}`);\n        this.props.socket.emit('tech_main do' , { num_notification , num_app_user_tech_main , delai });\n\n    }\n    render () {\n        let style;\n        let sumStyle ;\n        let statutStyle ;\n        let detailStyle ;\n        switch(this.props.notif.statut_code){\n            case Urgent.MAX.code :\n                style = {\n                    borderLeft : '3px solid red',\n                    //borderRight : '3px solid red',\n                };\n                statutStyle = {\n                    color : 'red',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MID.code :\n                style = {\n                    borderLeft : '3px solid yellow',\n                    //borderRight : '3px solid yellow',\n                };\n                statutStyle = {\n                    color : 'yellow',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MIN.code :\n                style = {\n                    borderLeft : '3px solid blue',\n                    //borderRight : '2px solid blue',\n                };\n                statutStyle = {\n                    color : 'blue',\n                //    fontWeight : 'bold',\n                }\n                break;\n             default :\n                break;\n        }\n        if(this.state.detailsAreShown || this.state.commandAreShown){\n            detailStyle = {\n                height : \"80%\",\n            };\n            sumStyle = {\n                height : \"15%\",\n            };\n            style = {\n                ...style,\n                height : \"300px\",\n            }\n\n        }\n        return (\n            <div className=\"notif\" style={style} >\n                <div className=\"notif-sum\" style={sumStyle}>\n                    <div className=\"probleme_type\" >\n                        <p> {this.props.notif.probleme_type} </p>\n                        <p> {this.props.notif.code} </p>\n                    </div>\n                    <div className=\"probleme_statut\" style={statutStyle} >\n                        <p> {this.props.notif.statut_libelle} </p>\n                        <p> {this.props.notif.lieu} </p>\n                    </div>\n                    <div className=\"date_envoie\">\n                        <p> Date d'envoie : </p>\n                        <p> {this.props.notif.date_envoie} </p>\n                    </div>\n                    <button onClick={this.showDetails}> Details </button>\n                    <button onClick={this.showCommand}> repondre </button>\n                </div>\n                { this.state.detailsAreShown &&\n                    <div className=\"notif-details\" style={detailStyle}>\n                        <p> Remarque : {this.props.notif.remarque || '-'} </p>\n                        <p> Envoyee par : {this.props.notif.sender_username || '-'} </p>\n                        <p> Details 1 </p>\n                    </div>\n                }\n                {\n                    this.state.commandAreShown &&\n                        <div className=\"notif-command\" >\n                            <button onClick={()=> this.do()}>prendre en charge</button>\n                            <button>faire patienter</button>\n                            <button>ouvrir message</button>\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\n","import './index.css';\r\nimport React from 'react';\r\nimport Notif from './../notif';\r\nimport {Urgent} from './urgent';\r\n\r\n\r\n//affiche notification recues \r\n//historique des notification repondues ??\r\n/*\r\n * props:\r\n *  - setNbNewNotif \r\n */\r\n\r\nexport default class NotifsList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            unansweredNotifsList : [],\r\n        }\r\n    }\r\n    displayNotif  = (list) => {\r\n        return list.map( notif => <Notif notif={notif} key={notif.num_notification} num_user={this.props.session.num_user} socket={this.props.socket}/> );\r\n    }\r\n\r\n    onClickOnNotifsList = () => {\r\n        this.props.nbNewNotificationToZero();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //no more new notif\r\n        this.props.nbNewNotificationToZero();\r\n        //notifs that has num_app_user_tech_main at null\r\n        this.props.socket.emit('get notifs list unanswered');\r\n        this.props.socket.on('unanswered notifs list' , (notifsList) => {\r\n            //\r\n            let newUnansweredNotifsList = notifsList.map( notif => ({\r\n                num_notification : notif.num_notification,\r\n                sender_username : notif.user_sender_username,\r\n                probleme_type : notif.probleme_type,\r\n                probleme_code : notif.code,\r\n                statut_code : notif.statut,\r\n                statut_libelle : notif.statut_libelle,\r\n                lieu : notif.lieu,\r\n                remarque : notif.remarque,\r\n                date_envoie : new Date(notif.date_envoie).toLocaleString('fr-FR'),\r\n                \r\n            }));\r\n            if(this.props.setNbNewNotif) {\r\n                this.props.setNbNewNotif(newUnansweredNotifsList.length);\r\n            }\r\n            this.setState({\r\n                unansweredNotifsList : newUnansweredNotifsList,\r\n            });\r\n        });\r\n\r\n        this.props.socket.on('new notif' , (createdNotif) => {\r\n            //created notif doesn't have the attributes to just do a push :( \r\n            this.props.socket.emit('get notifs list unanswered');\r\n        });\r\n        \r\n        this.props.socket.on('update notifs list unanswered' , () => {\r\n            console.log('update notifs list unanswerd');\r\n            setTimeout( () => {\r\n                this.props.socket.emit('get notifs list unanswered');\r\n            },2000);\r\n        });\r\n    }\r\n    componentWillUnmount = () => {\r\n        console.log('UNMOUNT notifsList');\r\n        this.props.socket.off('unanswered notifs list');\r\n        this.props.socket.off('update notifs list unanswered');\r\n    }\r\n    render(){\r\n        \r\n        return (\r\n            <div id=\"notifsList\" onClick={this.onClickOnNotifsList}>\r\n                <p> Notifications recues {this.props.session.username} </p>\r\n                <div id=\"scroll_list-notifsList\">\r\n                    {this.displayNotif(this.state.unansweredNotifsList)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './dropDown.css';\r\n//for a DropDown\r\n//expect : defaultValue , value and onChange for controlling the component , array for the data in options\r\nclass DropDown extends React.Component {\r\n    render(){\r\n        let array = this.props.array || [] ;\r\n//        console.log( typeof array);\r\n//        console.log('DropDown '+array);\r\n        let optionArray = array.map( item => \r\n            <option\r\n                key= {item}\r\n                value={item} >\r\n            {item}\r\n            </option>\r\n        );\r\n        if( this.props.objArray ){\r\n            optionArray = this.props.objArray.map( item =>\r\n                <option\r\n                    key = { item.key }\r\n                    value = { item.value } >\r\n                { item.libelle }\r\n                </option>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"dropDown\">\r\n                <select defaultValue= {this.props.selectedValue} value={this.props.value} onChange ={(e)=> this.props.onChange(e)} >\r\n                    {optionArray}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropDown;\r\n","import './index.css';\nimport React , {Component} from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport Dropdown from './../../utils/dropDown';\n\nexport default class CreateIntervention extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            interventionTypeList : [],\n            selectedNumInterventionType : '',\n            dateProgramme : new Date() ,\n            dateProgrammeDisplay : new Date(new Date().setHours(11,0,0,0)).toISOString().replace('Z',''),\n            lieuList : [],\n            selectedNumLieu : '',\n            materielList : [],\n            selectedNumMateriel : '',\n            materielTypes : [],\n            selectedMaterielType : '',\n            motif : 'ND',\n            problemeList : [] ,\n            selectedNumProblemeTechType : '',\n            message : '',\n        }\n        this.materiels = null;\n        this.lieus = null;\n        this.problemeTechTypes= null ;\n    }\n    updateTypeIntervention = (e) => {\n        console.log('update type intervention', e.target.value);\n        let newNumInterventionType = e.target.value;\n        this.setState({\n            selectedNumInterventionType : newNumInterventionType,\n        });\n    }\n    updateDateProgramme = (e) =>{\n        console.log('updateDateProgramme ' ,new Date(e.target.value));\n        let newDateProgramme = new Date(e.target.value);\n        this.setState({\n            dateProgramme : newDateProgramme,\n            dateProgrammeDisplay : e.target.value,\n        });\n    }\n    updateLieu = (e, motif) => {\n        console.log('update lieu', e.target.value);\n        console.log(motif);\n        let newNumLieu = e.target.value;\n        this.setState({\n            selectedNumLieu : newNumLieu,\n        });\n    }\n    updateMaterielType = (e) => {\n        console.log('updateMaterielType', e.target.value);\n        console.log('this.materiel' , this.materiels);\n        this.setState({\n            selectedMaterielType : e.target.value,\n            materielList : this.materiels[e.target.value],\n        });\n    }\n    updateMateriel = (e) => {\n        console.log('updateMateriel' , e.target.value);\n        this.setState({\n            selectedNumMateriel : e.target.value,\n        });\n    }\n\n    updateMotif = (e) => {\n        console.log('update motif', e.target.value);\n        this.setState({\n            motif : e.target.value,\n        });\n    }\n\n    //also used in update of Lieu because we need to update the motif at the same time\n    //but update lieu is still there in case we want to revert\n    updateProbleme = (e, numLieu) => {\n        console.log('update probleme', e.target.value);\n        console.log(this.problemeTechTypes);\n        //change motif to 'resoudre probleme : type -- lieu '\n        let type = this.problemeTechTypes[e.target.value];\n        let lieu;\n        let newMotif;\n        let newNumLieu = (numLieu) ? numLieu : this.state.selectedNumLieu ;\n        lieu = this.lieus[newNumLieu];\n        if(type){\n            newMotif = `Resoudre probleme : ${type} -- ${lieu}`;\n        }else{\n            newMotif = this.state.motif;\n        }\n        \n        console.log('motif', newMotif);\n        this.setState({\n            motif : newMotif, \n            selectedNumProblemeTechType : e.target.value || '',\n            selectedNumLieu : newNumLieu,\n        });\n    }\n\n    createDecharge = () => {\n        alert('Creer un decharge pour le materiel :'+this.state.selectedNumMateriel);\n    }\n\n\n    createIntervention = () => {\n        let {\n            selectedNumInterventionType ,\n            dateProgramme,\n            selectedNumLieu,\n            selectedNumProblemeTechType,\n            selectedNumMateriel,\n            motif,\n        } = this.state;\n        let code_intervention_type = '';//we use numInterventionType\n        //must be there : numInterventionType , numLieu , date_programme , \n        if( selectedNumInterventionType && selectedNumLieu && dateProgramme ) {\n            //send the 'create intervention'\n            console.log( 'create intervention : ' , selectedNumInterventionType ,code_intervention_type,  selectedNumLieu,  dateProgramme,motif, selectedNumMateriel,selectedNumProblemeTechType);\n            this.props.socket.emit('create intervention', selectedNumInterventionType , code_intervention_type , selectedNumLieu , dateProgramme , motif , selectedNumMateriel,selectedNumProblemeTechType);\n        }else{\n            this.setState({\n                message : 'selectionner un type d\\'intervention, un lieu et une date programmée',\n            });\n        }\n        \n    }\n\n    componentDidMount () {\n        console.log('createIntervention did mount');\n        //get the data : type_intervention\n        this.props.socket.emit('get intervention definition');\n\n        this.props.socket.on('intervention_type list' , (intervention_types) => {\n            console.log(' intervention_types ' ,intervention_types);\n            let newInterventionList = intervention_types.map( type => ({\n                key : type.num_intervention_type,\n                value : type.num_intervention_type,\n                libelle : type.libelle_intervention_type,\n            }));\n            this.setState({\n                interventionTypeList : newInterventionList,\n                selectedNumInterventionType : newInterventionList[0].key,\n            });\n        });\n        \n        this.props.socket.on('lieu list' , (lieus) =>{\n            console.log('lieus' , lieus );\n            for( const lieu of lieus){\n                this.lieus = {\n                    ...this.lieus,\n                    [lieu.num_lieu] : [lieu.libelle],\n                }\n            }\n            let newLieuList = lieus.map( lieu => ({\n                key : lieu.num_lieu,\n                value : lieu.num_lieu,\n                libelle : lieu.libelle,\n            }));\n            this.setState({\n                lieuList : newLieuList,\n                selectedNumLieu : newLieuList[0].value,\n            });\n        });\n\n        this.props.socket.on('materiel list' ,(materiels,materielTypes) => {\n            console.log('materiels', materiels);\n            let materielsList ;\n            \n            for( const type of materielTypes ){\n                \n                materielsList = {\n                    ...materielsList,\n                    [type.libelle_materiel_type] : materiels.filter( item => item.num_materiel_type === type.num_materiel_type).map( item => ({\n                        key : item.num_materiel,\n                        value : item.num_materiel,\n                        libelle : item.libelle_materiel,\n                    })),\n                }\n            }\n            materielTypes = materielTypes.map( item => item.libelle_materiel_type);\n            console.log('materielsList' , materielsList , materielTypes);\n            this.materiels = materielsList;\n            this.setState({\n                materielTypes : materielTypes,\n                selectedMaterielType : materielTypes[0],\n                materielList : materielsList[materielTypes[0]],\n            });\n            \n        });\n\n        this.props.socket.on('probleme_tech_type list', (probleme_tech_types) => {\n            console.log('probleme_tech_types', probleme_tech_types);\n            for(const probleme_tech_type of probleme_tech_types){\n                this.problemeTechTypes = {\n                    ...this.problemeTechTypes ,\n                    [probleme_tech_type.num_probleme_tech_type] : probleme_tech_type.libelle_probleme_tech_type,\n                }\n            }\n            let newProblemeList = probleme_tech_types.map( blem => ({\n                key : blem.num_probleme_tech_type,\n                value : blem.num_probleme_tech_type,\n                libelle : blem.libelle_probleme_tech_type,\n            }));\n            this.setState({\n                problemeList : newProblemeList,\n            });\n        });\n    }\n\n    componentWillUnmount () {\n        this.props.socket.off('intervention_type list');\n        this.props.socket.off('lieu list');\n        this.props.socket.off('materiel list');\n        this.props.socket.off('probleme_tech_type list');\n    }\n    render(){\n        let {\n            interventionTypeList,\n            selectedNumInterventionType,\n            lieuList,\n            selectedNumLieu,\n            materielList ,\n            selectedNumMateriel,\n            materielTypes,\n            selectedMaterielType,\n            motif,\n            selectedNumProblemeTechType,\n            problemeList,\n            message,\n        } = this.state;\n        return (\n            <div className=\"createIntervention\">\n                <p> Créer une intervention :</p>\n                <div className=\"scroll-option\">\n                    <FoldableDiv title=\"Intervention\" folded={false}>\n                        <div className=\"sub-category-option\">\n                            <label> Type Intervention : \n                            </label>\n                            <Dropdown value={selectedNumInterventionType} objArray = {interventionTypeList} onChange={this.updateTypeIntervention}/>\n                        </div>\n                        <div className=\"sub-category-option\">\n                            <label> Date programmée : \n                            </label>\n                            <input type=\"datetime-local\" value={this.state.dateProgrammeDisplay} onChange={this.updateDateProgramme}/>\n                        </div>\n                        <div className=\"sub-category-option\">\n                            <label> Lieu : \n                            </label>\n                            <Dropdown \n                                value={selectedNumLieu} \n                                objArray = {lieuList} \n                                onChange={\n                                    (e)=> {\n                                        this.updateProbleme({target:{value : selectedNumProblemeTechType}} , e.target.value);\n                                    }\n                                }\n                            />\n                        </div>\n                    </FoldableDiv>\n                    <FoldableDiv title=\"Materiel\" folded={true}>\n                        <div className=\"sub-category-option\">\n                            <label> Type materiel: \n                            </label>\n                            <Dropdown value={selectedMaterielType} array = {materielTypes} onChange={this.updateMaterielType}/>\n                        </div>\n                        <div className=\"sub-category-option\">\n                            <label> Materiel: \n                            </label>\n                            <Dropdown value={selectedNumMateriel} objArray = {materielList} onChange={this.updateMateriel}/>\n                        </div>\n                        <div className=\"sub-category-option\">\n                            <button onClick={this.createDecharge}> creer une decharge </button>\n                        </div>\n                    </FoldableDiv>\n                    <FoldableDiv title=\"Motif\" folded={true}>\n                        <div className=\"sub-category-option\">\n                            <label> Motif :\n                            </label>\n                            <textarea value={motif} onChange={this.updateMotif}></textarea>\n                        </div>\n                        <FoldableDiv title=\"Probleme\" folded={true}>\n                            <div className=\"sub-category-option\">\n                                <label> Type du probleme:\n                                </label>\n                                <Dropdown value={selectedNumProblemeTechType} objArray = {problemeList} onChange={this.updateProbleme}/>\n                            </div>\n                            <div className=\"sub-category-option\">\n                                <label> Lieu : \n                                </label>\n                                <Dropdown value={selectedNumLieu} objArray = {lieuList} onChange={(e) => {  this.updateProbleme({target:{value: selectedNumProblemeTechType}},e.target.value); }}/>\n                            </div>\n                        </FoldableDiv>\n                    </FoldableDiv>\n                </div>\n                <button onClick={this.createIntervention} > Planifier </button>\n                <p> {message} </p>\n            </div>\n        );\n    }\n}\n\n","import './index.css';\r\nimport React from 'react';\r\nimport { NavLink , Switch , Route ,Redirect} from 'react-router-dom';\r\nimport ToDoList from './../toDoList';\r\nimport NotifsList from './../notifsList';\r\nimport CreateIntervention from './../createIntervention';\r\n\r\nexport default class Dashboard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            nbInterventionUndone : 0,\r\n            nbNewNotification: 0,\r\n        }\r\n    }\r\n\r\n\r\n    nbInterventionUndonePlus = (nb) => {\r\n        console.log('nbInterventionUndonePlus' ,nb)\r\n        //let newNb = nb || this.state.nbInterventionUndone + 1 ;\r\n        let newNb = nb;\r\n        newNb = parseInt(newNb);\r\n        this.setState({\r\n            nbInterventionUndone : newNb,\r\n        });\r\n    }\r\n    nbNewNotificationPlus = (nb) => {\r\n        console.log('nbNewNotificationPlus' ,nb)\r\n        //let newNb = nb || this.state.nbNewNotification + 1 ;\r\n        let newNb = nb;\r\n        newNb = parseInt(newNb);\r\n        this.setState({\r\n            nbNewNotification : newNb,\r\n        });\r\n    }\r\n    componentDidMount= () => {\r\n        console.log('DASHBOARD did mount');\r\n        this.props.socket.emit('get nb intervention undone');\r\n        this.props.socket.on('nb intervention undone', (nb) => {\r\n            console.log('nb intervention undone');\r\n            this.setState({\r\n                nbInterventionUndone : nb,\r\n            });\r\n        });\r\n\r\n        this.props.socket.on('new intervention', () => {\r\n            console.log('new intervention dashboard');\r\n            this.props.socket.emit('get nb intervention undone');\r\n        });\r\n\r\n        this.props.socket.on('ended intervention', () => {\r\n            console.log(' ended intervention dashboard');\r\n            this.props.socket.emit('get nb intervention undone');\r\n        });\r\n      \r\n\r\n\r\n        \r\n    }\r\n    \r\n    componentWillUnmount = () => {\r\n        //this.props.socket.off('new notif');\r\n     \r\n        this.props.socket.off('nb intervention undone');\r\n        this.props.socket.off('new intervention ');\r\n        this.props.socket.off('ended intervention');\r\n        this.props.socket.off('materiel list');\r\n    }\r\n    render() {\r\n        let { path , url } = this.props.match;\r\n        let mainDashboardStyle ;\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <div className=\"main-dashboard\" style={mainDashboardStyle}>\r\n                    <nav id=\"nav_dashboard\">\r\n                        <NavLink activeClassName=\"active_navLink_dashboard\" to={`${url}/toDo`}> Interventions a faire {(this.state.nbInterventionUndone > 0) ? `(${this.state.nbInterventionUndone})`:''} </NavLink>\r\n                        <NavLink activeClassName=\"active_navLink_dashboard\" to={`${url}/notifs`}> Notifications {(this.state.nbNewNotification > 0) ? `(${this.state.nbNewNotification})`:''}</NavLink>\r\n                        <NavLink activeClassName=\"active_navLink_dashboard\" to={`${url}/creer`}> Creer </NavLink>\r\n                    </nav>\r\n                    <div id=\"display_dashboard\">\r\n                        <Switch>\r\n                            <Redirect exact from={path} to={`${path}/toDo`} />\r\n                            <Route path={`${path}/toDo`} render = {\r\n                                (routeProps) => <ToDoList \r\n                                                    setNbInterventionUndone={this.nbInterventionUndonePlus}\r\n                                                    {...routeProps} \r\n                                                    {...this.props} />\r\n                             }/>\r\n\r\n                            <Route path={`${path}/notifs`} render = {\r\n                                (routeProps) => <NotifsList  {...routeProps} {...this.props} setNbNewNotif = {this.nbNewNotificationPlus} />\r\n                            }/>\r\n\r\n                            <Route path={`${path}/creer`} render = {\r\n                                (routeProps) => <CreateIntervention {...routeProps} {...this.props} />\r\n                            }/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import './index.css';\nimport React from 'react';\nimport { Urgent } from './../../urgent.js';\n\nexport default class NotifHistoryTech extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            detailsAreShown : false ,\n        }\n    }\n    showDetails = () => {\n        this.setState({\n            detailsAreShown : !(this.state.detailsAreShown),\n        });\n    }\n    render () {\n        let style;\n        let sumStyle ;\n        let statutStyle ;\n        let detailStyle ;\n        switch(this.props.notif.statut_code){\n            case Urgent.MAX.code :\n                style = {\n                    borderLeft : '3px solid red',\n                    //borderRight : '3px solid red',\n                };\n                statutStyle = {\n                    //background : 'red',\n                    color : 'red',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MID.code :\n                style = {\n                    borderLeft : '3px solid yellow',\n                    //borderRight : '3px solid yellow',\n                };\n                statutStyle = {\n                    //background : 'yellow',\n                    color : 'yellow',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MIN.code :\n                style = {\n                    borderLeft : '3px solid blue',\n                    //borderRight : '2px solid blue',\n                };\n                statutStyle = {\n                    //background : 'blue',\n                    color : 'blue',\n\n                }\n                break;\n             default :\n                break;\n        }\n        if(this.state.detailsAreShown){\n            detailStyle = {\n                height : \"80%\",\n            };\n            sumStyle = {\n                height : \"15%\",\n            };\n            style = {\n                ...style,\n                height : \"300px\",\n            }\n\n        }\n        if(this.props.notif.num_app_user_tech_main && this.props.notif.date_reponse){\n            style = {\n                ...style,\n                background : '#a9c8f7',\n            }\n        }\n        return (\n            <div className=\"notif_history\" style={style} >\n                <div className=\"notif_history-sum\" style={sumStyle}>\n                    <div className=\"probleme_type\" >\n                        <p> {this.props.notif.probleme_type} </p>\n                        <p> {this.props.notif.code} </p>\n                    </div>\n                    <div className=\"probleme_statut\" style={statutStyle}>\n                        <p> {this.props.notif.statut_libelle} </p>\n                        <p> {this.props.notif.lieu} </p>\n                    </div>\n                    <div className=\"user_sender_username\">\n                        <p> par : {this.props.notif.user_sender_username} </p>\n                    </div>\n                    <div className=\"date_envoie\">\n                        <p> Date d'envoie : </p>\n                        <p> {this.props.notif.date_envoie} </p>\n                    </div>\n                    <button onClick={this.showDetails}> Details </button>\n                </div>\n                { this.state.detailsAreShown &&\n                    <div className=\"notif-details\" style={detailStyle}>\n                        <p> remarque: {this.props.notif.remarque} </p>\n                        <p> envoyee par : {this.props.notif.user_sender_username} </p>\n                        <p> pris en charge par : {this.props.notif.tech_main_username}  </p>\n                        <p> repondue le : {this.props.notif.date_reponse} </p>\n                        <p> ID notification : {this.props.notif.num_notification} </p>\n                        <p> Details 1 </p>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React from 'react';\nimport NotifHistoryTech from './../notifHistoryTech';\nimport DropDown from './../../utils/dropDown';\n\nexport default class NotifsHistory extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            notifsTab : [],\n            usersList : [],\n            selectedUser : 'all',\n        }\n    }\n    componentDidMount = async () => {\n        console.log(' NOTIFSHISTORY did mount ');\n        this.props.socket.emit('get notifs history');\n        this.props.socket.on('notifs history' , (notifsTab) => {\n            console.log('notification history for tech_main' , notifsTab);\n            let newNotifsTab = notifsTab.map( notif => ({\n\n                ...notif,\n                statut_code : notif.statut,\n                statut_libelle : notif.statut_libelle,\n                remarque : notif.remarque || '-' ,\n                date_envoie : new Date(notif.date_envoie).toLocaleString('fr-FR'),\n                tech_main_username : notif.tech_main_username || '-',\n                date_reponse : (notif.date_reponse) ? new Date(notif.date_reponse).toLocaleString('fr-FR') : '-' ,\n            }));\n            console.log('newNotifsTab' , newNotifsTab);\n            this.setState({\n                notifsTab : newNotifsTab,\n            });\n        });\n        this.props.socket.emit('get users list');\n        this.props.socket.on('users list' , (usersList) => {\n            console.log('users list' , usersList );\n            usersList.push({ num_user : 0 , username : 'all'});\n            this.setState({\n                usersList : usersList,\n            });\n        });\n    }\n\n    componentDidUpdate = () => {\n        console.log('NOTIFSHISTORY update');\n    }\n\n    updateSelectedUser = (e) => {\n        //alert('user selected is ' +e.target.value );\n        if ( e.target.value !== 'all' ) this.props.socket.emit('get notifs history', e.target.value);\n        else this.props.socket.emit('get notifs history');\n        this.setState({\n            selectedUser : e.target.value,\n        });\n    }\n\n    componentWillUnmount = () => {\n        this.props.socket.off('notifs history');\n        this.props.socket.off('users list');\n    }\n    showNotifs = (notifsTab) => {\n        return (\n            notifsTab.map( notif => \n                <NotifHistoryTech key={notif.num_notification} notif={notif} />\n            )\n        );\n    }\n    render (){ \n        let usersOption = this.state.usersList.map( user => \n            //<option value={user.num_user} key={user.num_user}> {user.username} </option>\n            ({\n                key : user.num_user ,\n                value : user.num_user ,\n                libelle : user.username,\n            })\n        );\n                        //<select value={this.state.selectedUser} defaultValue={this.state.usersList[this.state.usersList.length - 1 ]} onChange={this.updateSelectedUser}>\n                            //{usersOption}\n                        //</select>\n        return (\n            <div className = \"notifsHistory\" > \n                <div className=\"notifsHistory-select\">\n                    <p> Historiques des notifications envoyer par :  \n                    </p>\n                    <DropDown objArray={usersOption}  value={this.state.selectedUser} onChange={this.updateSelectedUser} />\n                </div>\n                <div className=\"notifsHistory-list\">\n                    { this.showNotifs(this.state.notifsTab) }\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\r\nimport './index.css';\r\n//for a DropDown\r\n//props : \r\n//-defaultValue , \r\n//-value and onChange for controlling the component , \r\n//-array or objArray{key , libelle, value} for the data in options\r\nclass DropDown extends React.Component {\r\n    render(){\r\n        let array = this.props.array || [] ;\r\n//        console.log( typeof array);\r\n//        console.log('DropDown '+array);\r\n        let optionArray = array.map( item => \r\n            <option\r\n                key= {item}\r\n                value={item} >\r\n            {item}\r\n            </option>\r\n        );\r\n        if( this.props.objArray ){\r\n            optionArray = this.props.objArray.map( item =>\r\n                <option\r\n                    key = { item.key }\r\n                    value = { item.value } >\r\n                { item.libelle }\r\n                </option>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"dropDown\">\r\n                <select defaultValue= {this.props.selectedValue} value={this.props.value} onChange ={(e)=> this.props.onChange(e)} >\r\n                    {optionArray}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropDown;\r\n","import './index.css';\nimport React , { Component } from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport DropDown from './../utils/dropDown';\n/*\n * prop : \n * - onChangeProblemeTechType : when we change the probleme tech type\n * - numProblemeTechType :\n * - onChangeLieu :\n * - numLieu\n * - onChangeRemarque :\n * - remarque\n * - socket\n * - problemeTechTypeArray\n * - LieuArray\n * \n */\n\nexport default class ProblemeConstate extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            problemeTechTypeArray : [],\n            lieuArray : [],\n        }\n    }\n    componentDidMount () {\n        console.log('probleme constate mounted');\n        this.props.socket.emit('get probleme_tech_type list');\n        this.props.socket.emit('get lieu list');\n\n        this.props.socket.on('probleme_tech_type list' , (probleme_tech_types) => {\n\n            console.log('probleme_tech_types list',probleme_tech_types);\n            let newProblemeList = probleme_tech_types.map( blem => ({\n                key : blem.num_probleme_tech_type,\n                value : blem.num_probleme_tech_type,\n                libelle : blem.libelle_probleme_tech_type,\n            }));\n            newProblemeList.unshift({\n                key : 'nd',\n                value :'nd',\n                libelle : 'nd',\n            });\n            this.setState({\n                problemeTechTypeArray : newProblemeList,\n            });\n\n        });\n\n        this.props.socket.on('lieu list' , (lieus) => {\n            console.log('lieus' , lieus );\n            let newLieuList = lieus.map( lieu => ({\n                key : lieu.num_lieu,\n                value : lieu.num_lieu,\n                libelle : lieu.libelle,\n            }));\n            newLieuList.unshift({\n                key : 'nd',\n                value :'nd',\n                libelle : 'nd',\n            });\n            this.setState({\n                lieuArray : newLieuList,\n            });\n        });\n    }\n\n    componentWillUnmount () {\n        this.props.socket.off('probleme_tech_type list');\n        this.props.socket.off('lieu list');\n    }\n    \n    render () {\n        let {\n            numProblemeTechType,\n            numLieu,\n            remarque,\n            onChangeProblemeTechType,\n            onChangeLieu,\n            onChangeRemarque,\n        } = this.props;\n        let {\n            problemeTechTypeArray,\n            lieuArray,\n        } = this.state;\n        return (\n            <div className=\"problemeTechConstate\">\n                <FoldableDiv title=\"Probleme constaté\" folded={true}>\n                    <DropDown objArray={problemeTechTypeArray} value={numProblemeTechType} onChange={onChangeProblemeTechType}/>\n                    <DropDown objArray={lieuArray} value={numLieu} onChange={onChangeLieu}/>\n                    <textarea placeholder=\"Remarque\" value={remarque} onChange={onChangeRemarque}>\n                    </textarea>\n                    \n                </FoldableDiv>\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React, {useState} from 'react';\nimport FoldableDiv from './../foldableDiv';\n\n/*\n * props :\n * - log : <string>; \n * - updateLog \n */\nexport default function InterventionLog (props) {\n    let etapes =(props.log) ? props.log.split(';') : [''];\n    //change size of etapes depending nbEtapes and etapes\n\n    function changeEtapesLength (e,newLength) {\n        e.preventDefault();\n        if ( newLength > etapes.length ){\n            for( let i = 0 , dE = newLength - etapes.length ; i < dE ; i ++) {\n                etapes.push('');\n            }\n        }else if ( newLength < etapes.length ) {\n            etapes.length = newLength;\n        }\n        props.updateLog( etapes.join(';'));\n    }\n    \n\n    function changeEtape (newEtape,index){\n        console.log('change Etapes', index);\n        let newEtapes = etapes.slice();\n        newEtapes[index] = newEtape;\n        props.updateLog( newEtapes.join(';'));\n    };\n    console.log('etapes before render' , etapes);\n    let logElements = etapes.map( (etape,index) => \n        <input value={etape} placeholder={`etape #${index+1}`} key={index} onChange={(e)=>changeEtape(e.target.value,index)}/>\n    );\n    \n    return (\n        <div className=\"interventionLog\">\n            <FoldableDiv title=\"Log\" folded={true}>\n                <form onSubmit={ (e)=>changeEtapesLength(e,etapes.length + 1) } >\n                    {logElements}\n                    <button onClick={(e)=>changeEtapesLength(e,etapes.length + 1)}> + </button>\n                    <button onClick={(e)=>changeEtapesLength(e,etapes.length - 1)}> - </button>\n                </form>\n            </FoldableDiv>\n        </div>\n    );\n}\n\n\n","import './index.css';\nimport React , { Component } from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport Dropdown from './../utils/dropDown';\n\n/*\n * props : -title for foldable title\n * - selectedNumMateriel pour syncro \n * - selectedMaterielType pour syncro\n */\n\nexport default class MaterielSelector extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            materielTypes : [],\n            selectedMaterielType : this.props.selectedMaterielType || '',\n            materielList : [],\n            config : '',\n        }\n        this.materiels = null;\n    }\n    updateMaterielType = (e) => {\n        console.log('updateMaterielType', e.target.value);\n        console.log('this.materiel' , this.materiels);\n        let objMateriel = {\n            num :this.materiels[e.target.value][0].value,\n            type : e.target.value,\n            config : this.state.config,\n        };\n        this.props.changeList(objMateriel);\n        this.setState({\n            selectedMaterielType : e.target.value,\n            materielList : this.materiels[e.target.value],\n        });\n    }\n    updateMateriel = (e) => {\n        console.log('updateMateriel' , e.target.value);\n        let objMateriel = {\n            num : e.target.value,\n            type : this.state.selectedMaterielType,\n            config : this.state.config,\n        };\n        this.props.changeList(objMateriel); \n        //this.setState({\n            //selectedNumMateriel : e.target.value,\n        //});\n    }\n    updateConfig = (e) => {\n        let objMateriel = {\n            num : this.props.selectedNumMateriel,\n            type : this.state.selectedMaterielType,\n            config : e.target.value,\n        };\n        this.props.changeList(objMateriel);\n        this.setState({\n            config : e.target.value,\n        });\n    }\n    componentDidMount(){\n        this.props.socket.emit('get materiel list');\n        this.props.socket.on('materiel list' ,(materiels,materielTypes) => {\n            console.log('materiels', materiels);\n            let materielsList ;\n            \n            for( const type of materielTypes ){\n                \n                materielsList = {\n                    ...materielsList,\n                    [type.libelle_materiel_type] : materiels.filter( item => item.num_materiel_type === type.num_materiel_type).map( item => ({\n                        key : item.num_materiel,\n                        value : item.num_materiel,\n                        libelle : item.libelle_materiel,\n                    })),\n                }\n            }\n            materielTypes = materielTypes.map( item => item.libelle_materiel_type);\n            materielTypes.unshift('nd');\n            console.log('materielsList' , materielsList , materielTypes);\n            this.materiels = materielsList;\n            \n            let selectedMaterielType = this.state.selectedMaterielType;\n            this.setState({\n                materielTypes : materielTypes,\n                materielList : materielsList[selectedMaterielType],\n            });\n            \n        });\n    }\n    componentWillUnmount(){\n       this.props.socket.off('materiel list'); \n    }\n    render() {\n        let {\n            materielTypes,\n            materielList,\n            config,\n        } = this.state;\n        let {\n            selectedNumMateriel,\n            selectedMaterielType,\n        } = this.props;\n        let {\n            title,\n        } = this.props;\n        return(\n            <div className=\"materielSelector\">\n                <FoldableDiv title={title || 'Materiel'} >\n                    <div className=\"sub-category-option\">\n                        <label> Type materiel: \n                        </label>\n                        <Dropdown value={selectedMaterielType} array = {materielTypes} onChange={this.updateMaterielType}/>\n                    </div>\n                    <div className=\"sub-category-option\">\n                        <label> Materiel: \n                        </label>\n                        <Dropdown value={selectedNumMateriel} objArray = {materielList} onChange={this.updateMateriel}/>\n                    </div>\n                    <div className=\"sub-category-option\">\n                        <label> Note: \n                            <textarea value={config} onChange={this.updateConfig}> </textarea>\n                        </label>\n                    </div>\n                </FoldableDiv>\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React , { useState } from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport MaterielSelector from './../materielSelector';\n/*\n * props:\n * - listMateriel : array;\n * - setListMateriel to change listMateriel\n * - socket \n * - maxListMaterielLength\n * - title \n * - folded\n */\nexport default function MultiMaterielSelector (props){\n    let listMateriel = props.listMateriel;\n     let maxLength = (props.maxListMaterielLength) ? props.maxListMaterielLength : 77;\n    let title = (props.title) ? props.title : \"Selectionner le(s) materiel(s)\";\n    let folded = (props.folded) ? props.folded : false;\n\n    //let [ length , setLength ] = useState(listMateriel.length);\n\n    function changeListMateriel( objValue , index){\n        console.log('changeListMateriel');\n        let newList = listMateriel.slice();\n        newList[index] = objValue;\n        props.setListMateriel(newList);\n    }\n\n    function changeListMaterielLength (newLength){\n        console.log('changeListMaterielLength', newLength);\n        newLength = (newLength < 0) ? 0 : newLength;\n        newLength = (newLength > maxLength) ? maxLength : newLength;\n        \n        let newList = listMateriel.slice();\n        if( newLength > newList.length ){\n            let dLength = newLength - newList.length;\n            console.log('dLength', dLength);\n            for(let i = 0 ; i < dLength ; i ++ ){\n                newList.push({ num: 'nd' , type :'nd'});\n            }\n        }else if( newLength < newList.length ){\n            newList.length = newLength;\n        }\n            props.setListMateriel(newList);\n        //setLength(newLength);\n    }\n\n    console.log('listMateriel before render', listMateriel);\n    let materielElements = listMateriel.map( (materiel,index) => \n        <MaterielSelector \n            key = {index}\n            title = {`Materiel #${index+1}`}\n            socket = {props.socket}\n            changeList = {(obj)=> changeListMateriel(obj,index)}\n            selectedNumMateriel = {materiel.num}\n            selectedMaterielType = {materiel.type}\n            />\n    );\n\n    return(\n        <div className=\"multiMaterielSelector\">\n            <FoldableDiv title={title} folded={folded}>\n                <p> Nombres : {listMateriel.length}</p>\n                <div className=\"scroll_list\">\n                    {materielElements}\n                </div>\n            { (maxLength > 1) &&\n                <>\n                    <button onClick={()=>changeListMaterielLength(listMateriel.length + 1)}> + </button>\n                    <button onClick={()=>changeListMaterielLength(listMateriel.length - 1)}> - </button>\n                </>\n            }\n                \n            </FoldableDiv>\n        </div>\n\n    );\n}\n","import './index.css';\nimport React,{useState } from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport MultiMaterielSelector from './../multiMaterielSelector';\n\n/*\n * props :\n * -num_intervention : to create the decharge on db\n * -socket to query data on materielsSelector\n * -downloadDecharge : method to download\n */\nexport default function InterventionDecharge(props){\n    //materiels are num_materiels\n    let tomorrowDate = new Date(new Date().setDate(new Date().getDate()+1)); \n    let [ materiels , setMateriels ] = useState([{ num:'nd' , type: 'nd'}]);\n    let [ dateDebut , setDateDebut ] = useState(new Date());\n    let [ dateFin , setDateFin ] = useState(tomorrowDate);\n    let {\n        num_decharge\n    } = props;\n    let style ;\n    let control ;\n    let disabled ;\n\n    let title = 'Effectuer un decharge';\n    if(num_decharge){\n        title = `ID decharge : ${num_decharge}` ;\n        style = {\n            ...style,\n            background : '#53d35342',\n        };\n        control = (\n            <button onClick={()=>props.downloadDecharge(num_decharge)}> Telecharger </button>\n        );\n        disabled = true;\n    }else{\n        control = (\n            <button onClick={createDecharge}> Creer </button>\n        );\n    }\n    \n    function updateDateDebut(e) {\n        console.log('updateDateDebut', e.target.value);\n        setDateDebut(new Date(e.target.value));\n    }\n\n    function createDecharge() {\n        let materielsValide = materiels.filter( item => (item.num !== 'nd' && item.type !== 'nd'))\n        console.log('materielsValide', materielsValide);\n        if( materielsValide.length  \n            && dateDebut.getTime() <= dateFin.getTime()){\n            console.log('createDecharge' , dateDebut , dateFin , materielsValide );\n            let date = {\n                debut : dateDebut,\n                fin : dateFin,\n            };\n            props.socket.emit('create decharge', date , materielsValide);\n        }else{\n            console.log('pas de materiels valide OU date invalide, InterventionDecharge');\n        }\n    }\n\n    console.log('render InterventionDecharge');\n    return(\n        <div className =\"interventionDecharge\" style={style}>\n            <FoldableDiv title={title} folded={true}>\n                <div className=\"decharge-form\">\n                    <label> Debut : \n                    <input \n                        type='date' \n                        value ={formatDate(dateDebut)} \n                        onChange={updateDateDebut} \n                        disabled={disabled}\n                        />\n                    </label>\n                    <label> Fin : \n                    <input \n                        type='date' \n                        value={formatDate(dateFin)} \n                        onChange={(e)=> setDateFin(new Date(e.target.value))}\n                        disabled={disabled}\n                        />\n                    </label>\n                    <MultiMaterielSelector \n                        socket = {props.socket}\n                        listMateriel = {materiels}\n                        setListMateriel = {setMateriels}\n                        />\n                    {control}\n                </div>\n            </FoldableDiv>\n        </div>\n    );\n}\n\nfunction formatDate (date) {\n    let day = `${date.getDate()}`;\n    let month = `${date.getMonth() +1}`;\n    let year = date.getFullYear();\n    month = (month.length < 2) ? '0'+month : month;\n    day = (day.length < 2) ? '0'+day : day;\n    return `${year}-${month}-${day}`;\n}\n\n//function downloadDecharge(num_decharge){\n//    //open route /decharge/num_decharge/ in a new tab\n//    //alert('downloadDecharge', num_decharge);\n//    const URL = '/acim/decharge';\n//    window.open(URL ,  '_blank');\n//}\n","import './index.css';\nimport React from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport ProblemeTechConstate from './../problemeTechConstate';\nimport InterventionLog from './../interventionLog';\nimport InterventionDecharge from './../interventionDecharge';\nimport MultiMaterielSelector from './../multiMaterielSelector';\n\nexport default class InterventionPage extends React.Component  {\n    constructor(props){\n        super(props);\n        this.state ={\n            techMainIsAuth : false,\n            num_intervention : this.props.num_intervention,\n            intervention : {},\n            pwd : '',\n            selectedNumProblemeTechType: 'nd',\n            selectedNumLieu : 'nd',\n            remarque : '',\n            log : 'etape1 ; etape2; etape3;',\n            num_decharge : '',\n            materiels : [{num:'nd' , type:'nd'}],//only one but to adapt to multiMaterielSelector way of things we use an array\n        }\n    }\n    updateMateriel = (newMateriels) => {\n        this.setState({\n            materiels : newMateriels,\n        });\n\n    };\n    updateProblemeTechType = (e) => {\n        let newNumProblemeTechType = e.target.value;\n        this.setState({\n            selectedNumProblemeTechType : newNumProblemeTechType,\n        });\n    }\n    updateLieu = (e) => {\n        let newNumLieu = e.target.value;\n        this.setState({\n            selectedNumLieu : newNumLieu,\n        });\n    }\n    updateRemarque = (e) => {\n        let newRemarque = e.target.value;\n        this.setState({\n            remarque : newRemarque,\n        });\n    }\n    updateLog = (newLog) => {\n        this.setState({\n            log : newLog,\n        });\n    }\n    updatePwd = (e) => {\n        let newPwd = e.target.value;\n        this.setState({\n            pwd : newPwd,\n        })\n    }\n    authenticate = (e) => {\n        e.preventDefault();\n        let pwd = this.state.pwd;\n        //alert( 'is password for tech_main_creator of num_intervention'+ this.props.num_intervention+' this '+pwd); \n        if (pwd) {\n            this.props.socket.emit('authenticate intervention tech_main' , this.state.num_intervention , pwd);\n        }\n    }\n    startIntervention = () => {\n       let {    num_intervention} = this.state.intervention;\n        console.log('start intervention');\n        if( this.state.techMainIsAuth ) {\n            this.props.socket.emit('start intervention' , num_intervention );\n        }\n    }\n    endIntervention = (resolu = false) => {\n       let {    num_intervention,\n                date_debut } = this.state.intervention;\n        if (!date_debut) {\n            console.log('pas de date de debut mais problem OK');\n        }\n        console.log('resolu' , resolu);\n        console.log('end intervention');\n        if( this.state.techMainIsAuth ) {\n            this.props.socket.emit('end intervention' , num_intervention  , resolu , date_debut);\n        }\n    }\n    updateIntervention = () => {\n        let {\n            num_intervention,\n        } = this.state.intervention;\n        let {\n            log,\n            selectedNumProblemeTechType,\n            selectedNumLieu,\n            remarque,\n            num_decharge,\n            materiels,\n        } = this.state;\n        console.log('updateIntervention', num_intervention , log , selectedNumProblemeTechType ,selectedNumLieu);\n        let isInput = log ||(selectedNumProblemeTechType !== 'nd' && selectedNumLieu !== 'nd') ; \n        if( num_intervention ){\n            if( log ) {\n                console.log('emit udpdate intervention info log');\n                this.props.socket.emit('update intervention info log' , num_intervention ,log);\n            }\n            if( selectedNumProblemeTechType !== 'nd' && selectedNumLieu !== 'nd'){\n                console.log('emit update intervention info probleme_tech');\n                let probleme_constate = {\n                    num_probleme_tech_type : selectedNumProblemeTechType,\n                    num_lieu : selectedNumLieu,\n                    remarque ,\n                }\n                this.props.socket.emit('update intervention info probleme_tech' , num_intervention , probleme_constate);\n            }\n            if(num_decharge){\n                console.log('emit update decharge intervention');\n                this.props.socket.emit('update decharge intervention' , num_decharge , num_intervention);\n            }\n            if(materiels){\n                console.log('emit update intervention info num_materiel');\n                this.props.socket.emit('update intervention info num_materiel', num_intervention , materiels[0].num);\n            }\n        } \n    }\n\n    getDecharge = (num_decharge) => {\n        //get the server url , \n        const s_URL = new URL(document.location.href);\n        //may not need to change port\n        const m_path = `/pdf/acim/decharge/${num_decharge}`\n        s_URL.port = 3500;\n        s_URL.pathname = m_path;\n        console.log('s_URL',s_URL);\n        window.open(s_URL, '_blank');\n    }\n    componentDidMount () {\n        console.log('intervention page mounted');\n        console.log(this.props.socket);\n        this.props.socket.emit('get intervention data' , this.props.num_intervention);\n        this.props.socket.on('intervention data',(intervention) => {\n            console.log('intervention data', intervention);\n\n            this.setState({\n                intervention : intervention ,\n                log : intervention.log,\n                num_decharge : intervention.num_decharge,\n            });\n        });\n\n        this.props.socket.on('tech_main is authenticated', (num_intervention) => {\n            if( num_intervention === this.state.num_intervention ){\n                console.log('tech is auth to true');\n                this.setState({\n                    techMainIsAuth : true,\n                    pwd : '',\n                });\n            }\n        });\n\n        this.props.socket.on('started intervention', (intervention) => {\n            console.log('intervention started ' , intervention.num_intervention , intervention.date_debut);\n            if ( this.state.num_intervention === intervention.num_intervention ){\n                this.setState({\n                    intervention : intervention,\n                });\n            }\n\n        });\n        \n        this.props.socket.on('ended intervention interventionPage', (intervention) => {\n            console.log('intervention ended ' , intervention.num_intervention , intervention.date_debut);\n            if ( this.state.num_intervention === intervention.num_intervention ){\n                this.setState({\n                    intervention : intervention,\n                });\n            }\n\n        });\n\n        this.props.socket.on('new decharge' , (newDecharge) => {\n            let {\n                num_decharge\n            } = newDecharge;\n            this.setState({\n                num_decharge : num_decharge,\n            });\n        });\n\n    }\n    \n    componentDidUpdate(){\n        console.log('intervention page updated' , this.props.num_intervention);\n        if( this.props.num_intervention !== this.state.num_intervention ) {\n            this.props.socket.emit('get intervention data' , this.props.num_intervention);\n            let newIntervention ;\n            if( !this.props.num_intervention ) newIntervention = {};\n            else newIntervention = this.state.intervention ;\n            this.setState({\n                num_intervention : this.props.num_intervention,\n                techMainIsAuth : false,\n                intervention : newIntervention,\n                num_decharge : '',\n                \n            });\n        }\n        \n    }\n    componentWillUnmount(){\n        this.props.socket.off('intervention data');\n        this.props.socket.off('tech_main is authenticated');\n        this.props.socket.off('started intervention');\n        this.props.socket.off('probleme_tech_type list');\n        this.props.socket.off('lieu list');\n        this.props.socket.off('new decharge');\n    }\n    render () {\n        \n        let {\n            tech_main_username,\n            libelle_intervention_type,\n            motif,\n            libelle_lieu,\n            date_programme,\n            date_debut,\n            date_fin,\n            done,\n            probleme_resolu,\n            libelle_probleme_tech_type,//if there is\n            log : log_info,//if there is\n            lieu_probleme_tech,\n            num_decharge : num_decharge_info,\n            num_materiel,\n            libelle_materiel ,\n            libelle_materiel_type ,\n        }   = this.state.intervention;\n        let log_info_tab , log_info_elements;\n        if( log_info ) {\n            log_info_tab = log_info.split(';');\n            log_info_elements = log_info_tab.map( (etape,index) => \n                <li key = {index}>{etape}</li>\n            );\n        }\n        \n        let {\n            selectedNumProblemeTechType,\n            selectedNumLieu,\n            remarque,\n            log,\n            num_decharge,\n            materiels,\n        }   = this.state;\n        \n        let {\n            style,\n            closeSub,\n        }   = this.props;\n        if (date_debut) date_debut = new Date(date_debut).toLocaleString('fr-FR');\n        if (date_programme) date_programme = new Date(date_programme).toLocaleString('fr-FR');\n        if( date_fin ) date_fin = new Date(date_fin).toLocaleString('fr-FR');\n        let { num_intervention } = this.props;\n        let display ;\n        let control = (\n            <>\n                { !date_debut &&\n                    <button onClick={this.startIntervention}> Commencer </button>\n                }\n                {  !done &&\n                        <button onClick={() => this.endIntervention()}> Terminer </button>\n                }\n                {  !probleme_resolu &&\n                        <button onClick={() => this.endIntervention(true)}> OK </button>\n                }\n            </>\n        );\n        if( this.state.techMainIsAuth ) {\n            let info;\n            info = (\n                <>\n                    <p> Type : {libelle_intervention_type} </p> \n                    <p> Motif : {motif} </p>\n                    <p> Lieu : {libelle_lieu} </p>\n                    <p> Faite par : {tech_main_username} </p>\n                    <p> Programme le : {date_programme} </p>\n                    <p> Debutee le : {date_debut} </p>\n                    <p> Terminee le : {date_fin} </p>\n                    { libelle_probleme_tech_type &&\n                        <p> Probleme constaté : { libelle_probleme_tech_type } -- {lieu_probleme_tech} </p>\n                    }\n                    { log_info && \n                        <p>\n                             {`${(log_info_tab.length > 1)? 'Etapes suivies' : 'Etape suivie'}`} : \n                             {log_info_elements} \n                        </p>\n                    }\n                    { num_decharge_info &&\n                        <p>\n                            ID decharge : <button onClick={()=> this.getDecharge(num_decharge_info)}> {num_decharge_info} </button>\n                        </p>\n                    }\n                    { num_materiel &&\n                            <p>\n                            Intervention sur : {libelle_materiel_type} -- {libelle_materiel}\n                            </p>\n                    }\n                    <p> Probleme resolue : { (probleme_resolu) ? 'OUI' : 'NON' } </p>\n                </>\n            );\n            display = (\n                <>\n                    <div className=\"intervention-form\">\n                        <FoldableDiv title=\"INFO\">\n                            {info}\n                        </FoldableDiv>\n                        <div className=\"intervention-modifier\">\n                            <FoldableDiv title=\"Modifier\" folded={true}>\n                                <ProblemeTechConstate \n                                    numProblemeTechType = {selectedNumProblemeTechType}\n                                    numLieu = {selectedNumLieu}\n                                    remarque = {remarque}\n                                    onChangeProblemeTechType = {this.updateProblemeTechType}\n                                    onChangeLieu = {this.updateLieu}\n                                    onChangeRemarque = {this.updateRemarque}\n                                    socket = {this.props.socket} \n                                    />\n                                <InterventionLog \n                                    log = {log}\n                                    updateLog = {this.updateLog}\n                                    />\n                                    <MultiMaterielSelector\n                                        socket = {this.props.socket}\n                                        listMateriel = {materiels}\n                                        setListMateriel = {this.updateMateriel}\n                                        maxListMaterielLength = {1}\n                                        title=\"Objet de l'intervention\"\n                                        folded={true}\n                                        />\n                                <InterventionDecharge\n                                    socket = {this.props.socket}\n                                    num_intervention = {num_intervention}\n                                    num_decharge = {num_decharge}\n                                    downloadDecharge = {this.getDecharge}\n                                    />\n                                <button onClick={this.updateIntervention}> Sauvergarder </button>\n                            </FoldableDiv>\n                        </div>\n                    </div>\n                    <div className=\"intervention-control\">\n                        {control}\n                    </div>\n                </>\n            );\n        }else{\n            display = (\n                <form onSubmit={this.authenticate}>\n                    <input type=\"password\" placeholder={`mot de passe de ${tech_main_username}`}  value={this.state.pwd} onChange={this.updatePwd}/>\n                    <button onClick={this.authenticate}> Valider </button>\n                </form>\n            );\n        }\n        return(\n            <div className=\"interventionPage\" style={style}>\n                <div className=\"interventionPage-title\">\n                    <button onClick={closeSub}> {'x'} </button>\n                    <p> Intervention </p>\n                </div>\n                <p> ID intervention  : {num_intervention} </p>\n                <div className=\"intervention-display\">\n                    {display}\n                </div>\n            </div>\n        );\n    }\n}\n","\nexport function formatDate (date) {\n    let day = `${date.getDate()}`;\n    let month = `${date.getMonth() +1}`;\n    let year = date.getFullYear();\n    month = (month.length < 2) ? '0'+month : month;\n    day = (day.length < 2) ? '0'+day : day;\n    return `${year}-${month}-${day}`;\n}\n\nconst func = {\n    formatDate,\n};\nexport default func;\n","import './index.css';\nimport React , {Component} from 'react';\nimport { formatDate } from './../../functions';\nimport DropDown from './../utils/dropDown';\n\n/*\n * props: - setTechMain \n * - setDebut\n * - setFin\n * - setStatut\n * - socket : for initialization\n * - tech_main,\n * - date_debut,\n * - date_fin,\n * - statut,\n */\n\nexport default class InterventionHistoryControl extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tech_mainList : [],\n            statutList : [\n                {key : 0,\n                value : 0,\n                libelle : 'nd'},\n                { key : 1,\n                value : 1,\n                libelle : 'non-effectuée', },\n                { key : 2,\n                  value : 2,\n                  libelle : 'effectuée-résolue'},\n                { key : 3,\n                  value : 3,\n                  libelle : 'effectuée-non-résolue'},\n            ],\n        }\n        this.techMains = {};\n        this.statuts = {\n            0 : {\n                done : 'nd',\n                probleme_resolu : 'nd',\n            },\n            1 : {\n                done : false,\n                probleme_resolu : false,\n            },\n            2 : {\n                done : true,\n                probleme_resolu : true,\n            },\n            3 : {\n                done : true,\n                probleme_resolu : false,\n            },\n\n\n        };\n    }\n    updateTechMain = (e) => {\n        console.log('updateTechMain', e.target.value);\n        console.log(this.techMains[e.target.value]);\n        let username = this.techMains[e.target.value];\n        this.props.setTechMain({ num : e.target.value , username : username });\n    }\n    updateDateDebut = (e) => {\n        console.log('updateDateDebut',new Date(e.target.value));\n        let newDebut = new Date(new Date(e.target.value).setHours(0,0,0));\n        this.props.setDateDebut(newDebut);\n    }\n\n    updateDateFin = (e) => {\n        console.log('updateDateFin',new Date(e.target.value));\n        let newFin = new Date(new Date(e.target.value).setHours(23,59,59));\n        this.props.setDateFin(newFin);\n    }\n\n    updateStatut = (e) => {\n        console.log('updateStatut' , e.target.value);\n        let newStatut = this.statuts[e.target.value];\n        this.props.setStatut(newStatut);\n\n    }\n\n    componentDidMount(){\n        this.props.socket.emit('get tech_mains list');\n        this.props.socket.on('tech_mains list' , (tech_mainList)=>{\n            console.log('tech_mains list');\n            let newTech_mainList = tech_mainList.map( tech => ({\n                key : tech.num_user,\n                libelle : tech.username,\n                value : tech.num_user,\n            }));\n            for(const tech of newTech_mainList){\n                this.techMains = {\n                    ...this.techMains,\n                    [tech.key] : tech.libelle,\n                }\n            }\n            this.techMains = {\n                ...this.techMains,\n                nd : 'nd',\n            }\n            newTech_mainList.unshift({key: 'nd' , libelle : 'nd' , value : 'nd'});\n            console.log('newTech_mainList' , newTech_mainList);\n            this.setState({\n                tech_mainList : newTech_mainList,\n            });\n\n        });\n    }\n\n    componentWillUnmount(){\n        this.props.socket.off('tech_mains list');\n    }\n\n    render(){\n        let {\n            tech_main,\n            date_debut,\n            date_fin,\n            statut\n        } = this.props;\n        let {\n            tech_mainList,\n            statutList,\n        } = this.state;\n        let statutValue  = 1;\n        if(statut.done){\n            if(statut.done === 'nd'){\n                statutValue = 0;\n            }else{\n                if(statut.probleme_resolu){\n                    statutValue = 2;\n                }else{\n                    statutValue = 3;\n                }\n            }\n        }\n        return(\n            <div className=\"interventionHistoryControl\">\n                <div className=\"sub-control\">\n                    <p> Technicien : </p>\n                    <DropDown \n                        value = {tech_main.num}\n                        onChange = {this.updateTechMain}\n                        objArray = {tech_mainList}\n                        />\n                </div>\n                <div className=\"sub-control\">\n                    <p> Programmé du: </p>\n                    <input type=\"date\" \n                        value = {formatDate(date_debut)} \n                        onChange = {this.updateDateDebut}/>\n                </div>\n                <div className=\"sub-control\">\n                    <p> au: </p>\n                    <input type=\"date\"\n                            value = {formatDate(date_fin)}\n                            onChange = {this.updateDateFin}/>\n                </div>\n                <div className=\"sub-control\">\n                    <p> status : </p>\n                    <DropDown \n                        value = {statutValue}\n                        onChange = {this.updateStatut}\n                        objArray = {statutList}\n                        />\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React , {Component} from 'react';\nimport Intervention from './../intervention';\n\n/*\n * props :\n * -tech_main_username\n * -date_debut\n * -date_fin\n * -statut\n */\n\nexport default class InterventionHistoryAffichage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            interventions: [],\n        }\n    }\n    displayInterventions = (list) => {\n        return list.map( item => <Intervention key={item.num_intervention} intervention={item} showSub={this.props.showSub} />);\n    };\n    render(){\n        let {\n            tech_main_username,\n            statut,\n            date_debut,\n            date_fin,\n            interventions,\n        } = this.props;\n        let statut_text;\n        let date_text;\n        let tech_main_username_text;\n        if(statut.done){\n            if(statut.done === 'nd') statut_text = ``;\n            else statut_text = `Effectuée -- ${(statut.probleme_resolu)? 'Résolu':'Non-résolu'}`;\n        }else{\n            //if not done then not resolu\n            statut_text = `Non-effectué`;\n        }\n        if(date_fin === date_debut){\n            date_text = date_fin;\n        }else{\n            date_text = `${date_debut} - ${date_fin}`;\n        }\n        if( tech_main_username !== 'nd' ) {\n            tech_main_username_text = `par ${tech_main_username}`;\n        }else{\n            tech_main_username_text = '';\n\n        }\n        return(\n            <div className=\"interventionHistoryAffichage\">\n                <div className=\"interventionHistoryAffichage-text\">\n                    <p> Intervention {statut_text}  {tech_main_username_text}</p>\n                    <p> du {date_text}</p>\n                    <p> Nombre : {interventions.length} </p>\n                </div>\n                <div className=\"scroll_list\">\n                    {this.displayInterventions(interventions)}\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React, {Component} from 'react';\nimport InterventionHistoryControl from './../interventionHistoryControl';\nimport InterventionHistoryAffichage from './../interventionHistoryAffichage';\n\n\n\nexport default class InterventionHistory extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            tech_main : { num: 'nd' , username : 'nd'},\n            date_debut :new Date(new Date().setFullYear(2020,0,1)) ,\n            date_fin : new Date(new Date().setHours(23,59,59)),\n            statut :{ done : 'nd' , probleme_resolu : 'nd'},\n            interventionList : [],\n        };\n    }\n    setTechMain = (tech) => {\n        console.log('setTechMain', tech);\n        \n        this.setState({\n            tech_main : tech,\n        });\n    }\n    setDateDebut = (debut) => {\n        //debut must be a new Date()\n        console.log('setDateDebut', debut);\n        if(debut.getTime() > this.state.date_fin.getTime()) debut = this.state.date_fin;\n        \n        this.setState({\n            date_debut : debut,\n        });\n    }\n    setDateFin = (fin) => {\n        console.log('setDateFin', fin);\n        if(fin.getTime() < this.state.date_debut.getTime()) fin = this.state.date_debut;\n        this.setState({\n            date_fin : fin,\n        });\n    }\n    setStatut = (st) => {\n        console.log('setStatut' , st);\n        this.setState({\n            statut : st,\n        });\n    }\n    componentDidUpdate (prevProps,prevState) {\n        //console.log('prevState', prevState);\n        if(prevState.date_debut.getTime() !== this.state.date_debut.getTime()\n            || prevState.date_fin.getTime() !== this.state.date_fin.getTime()\n            || prevState.tech_main.num !== this.state.tech_main.num\n            || prevState.statut.done !== this.state.statut.done\n            || prevState.statut.probleme_resolu !== this.state.statut.probleme_resolu\n        ){\n            console.log('emit again');\n            this.props.socket.emit('get intervention history', this.state.tech_main.num,this.state.date_debut , this.state.date_fin , this.state.statut );\n        }\n    };\n    componentDidMount(){\n       console.log('intervention History Mounted');\n       let {\n           tech_main,\n           date_fin,\n           statut,\n       } = this.state;\n       this.props.socket.emit('get intervention history', tech_main.num ,null , date_fin , statut);\n       this.props.socket.emit('get oldest intervention date');\n        this.props.socket.on('oldest intervention date', (minDate) => {\n            this.setState({\n                date_debut : new Date(minDate),\n            });\n        });\n        this.props.socket.on('intervention history', (interventions ) => {\n            console.log('intervention history', interventions );\n            let newInterventionList = interventions.map( (item, index)=> ({\n                num_intervention : item.num_intervention,\n                date_programme : item.date_programme,\n                lieu_libelle : item.libelle_lieu,\n                intervention_type : item.libelle_intervention_type,\n                tech_main_username : item.tech_main_username,\n                motif : item.motif,\n                numero : index + 1,\n                done : item.done,\n                probleme_resolu : item.probleme_resolu,\n                libelle_probleme_tech_type : item.libelle_probleme_tech_type,\n                code_intervention_type : item.code_intervention_type,\n            }));\n\n            this.setState({\n                interventionList : newInterventionList,\n            });\n        });\n\n    }\n    componentWillUnmount(){\n        this.props.socket.off('intervention history');\n        this.props.socket.off('oldest intervention date');\n    }\n\n    render(){\n        let {\n            tech_main,\n            statut,\n            date_debut,\n            date_fin,\n            interventionList,\n        } = this.state;\n        return (\n            <div className=\"interventionHistory\">\n                <div className=\"side-InterventionHistory\">\n                    <InterventionHistoryControl\n                        socket={this.props.socket}\n                        tech_main={tech_main}\n                        setTechMain={this.setTechMain}\n                        date_debut={date_debut}\n                        date_fin={date_fin}\n                        setDateDebut={this.setDateDebut}\n                        setDateFin={this.setDateFin}\n                        statut={statut}\n                        setStatut={this.setStatut}\n                        />\n                        \n                </div>\n                <InterventionHistoryAffichage \n                    tech_main_username = {tech_main.username}\n                    date_debut = {date_debut.toLocaleDateString()}\n                    date_fin = {date_fin.toLocaleDateString()}\n                    interventions = {interventionList}\n                    statut={statut}\n                    showSub={this.props.showSub}\n                    />\n            </div>\n        );\n    }\n}\n","import './index.css';\r\nimport React from 'react';\r\nimport {  Switch , Route , Redirect, NavLink   } from 'react-router-dom'; \r\nimport { mySocket } from './../../socket_io/socket_io';\r\nimport Dashboard from './../dashboard';\r\nimport NotifsHistory from './../notifsHistory';\r\nimport ToDoList from './../toDoList';\r\nimport InterventionPage from './../interventionPage';\r\nimport InterventionHistory from './../interventionHistory';\r\n\r\n\r\nexport default class Main extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            newNotifs : [\r\n                //{\r\n                    //num_notification : 'dede',\r\n                    //date_envoie : new Date().toLocaleString(),\r\n                    //probleme_type : 'prb_type',\r\n                    //probleme_statut : 'xxx',\r\n                    //probleme_statut_code : 'MAX',\r\n                    //lieu :'salle xxx',\r\n                //},\r\n            ],\r\n            nbNewNotification : 0,\r\n            showSub : false,\r\n            numSelectedIntervention : null,\r\n        };\r\n        this.socket = mySocket.socket;\r\n        this.popUp = React.createRef();\r\n    }\r\n\r\n    showSub  = (num_intervention) => {\r\n        let newShowSub;\r\n        if( this.state.numSelectedIntervention === num_intervention ){\r\n            //selected intervention hasn't change\r\n            newShowSub = !(this.state.showSub);\r\n            num_intervention = null;\r\n\r\n        }else newShowSub = true;\r\n        this.setState({\r\n            showSub : newShowSub,\r\n            numSelectedIntervention : num_intervention,\r\n        });\r\n    }\r\n    nbNewNotificationPlus = (nb) => {\r\n        let newNb = nb || this.state.nbNewNotification + 1;\r\n        newNb = parseInt(newNb);\r\n        this.setState({\r\n            nbNewNotification : newNb,\r\n        });\r\n    }\r\n\r\n    showPopUp = () => {\r\n        this.popUp.current.style.top = \"10px\";\r\n        setTimeout( () => {\r\n            this.popUp.current.style.top = \"-1000px\";\r\n        }, 10000);\r\n\r\n    }\r\n\r\n    onClickNotif = () => {\r\n        let { url } = this.props.match;\r\n        //hide notif , and got to notification\r\n        this.popUp.current.style.top = \"-1000px\";\r\n        this.props.history.push(`${url}/dashboard/notifs`);\r\n        \r\n    }\r\n\r\n    logOut = () => {\r\n        this.props.logOut();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //connect socket\r\n        console.log(' MAIN component did mount');\r\n        mySocket.connect( this.props.session.username , this.props.session.type_user, this.props.session.num_user);\r\n        this.socket.on('new notif' , (createdNotif) => {\r\n            console.log('new notif received on main' , createdNotif);\r\n            //keep in newNotifs , last 5 notifs of less than two hours\r\n            let newNewNotifs = this.state.newNotifs.slice();\r\n            if(newNewNotifs.length > 4) newNewNotifs.pop();\r\n            newNewNotifs.unshift(createdNotif);\r\n            console.log('newNewNotifs' , newNewNotifs);\r\n            newNewNotifs = newNewNotifs.filter( (newNotif) => {\r\n                let now_2 = new Date().getTime() - (10*60*1000);\r\n                let date_notif = new Date(newNotif.date_envoie).getTime();\r\n                console.log('now_2' , now_2 );\r\n                console.log( 'date_notif' ,date_notif); \r\n                console.log ( ' date_notif is more than 10 minutes old ' , date_notif < now_2 );\r\n                if( date_notif < now_2 ) return false;\r\n                else return true;\r\n            });\r\n            console.log('newNewNotifs' , newNewNotifs);\r\n            this.showPopUp();\r\n            let newNbNewNotification = this.state.nbNewNotification + 1;\r\n            this.setState({\r\n                newNotifs : newNewNotifs,\r\n                nbNewNotification : newNbNewNotification,\r\n            })\r\n        });\r\n        this.socket.emit('get notifs list unanswered');\r\n        this.socket.on('unanswered notifs nb', (nb) => {\r\n            console.log('unanswered notifs nb',nb);\r\n            this.nbNewNotificationPlus(nb);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        //close socket connection\r\n        console.log('UNMOUNT main');\r\n        this.socket.off('new notif');\r\n        this.socket.off('nb tache undone');\r\n        this.socket.off('unanswered notifs nb');\r\n        this.socket.offAny();\r\n        mySocket.socket.disconnect();\r\n    }\r\n\r\n    showNewNotifs = () => {\r\n        return (\r\n            this.state.newNotifs.map( notif => {\r\n                let statutStyle ;\r\n                switch (notif.probleme_statut_code){\r\n                    case 'MAX':\r\n                        statutStyle = {\r\n                            color : 'red',\r\n                        }\r\n                        break;\r\n                    case 'MID':\r\n                        statutStyle = {\r\n                            color : 'yellow',\r\n                        }\r\n                        break;\r\n                    case 'MIN':\r\n                        statutStyle = {\r\n                            color : 'blue',\r\n                        }\r\n                        break;\r\n                     default :\r\n                        break;\r\n                }\r\n                return (\r\n                    <div className = \"notif_pop_notif\" key={notif.num_notification} onClick={this.onClickNotif}>\r\n                        <p id=\"notif_time\">{new Date(notif.date_envoie).toLocaleTimeString('fr-FR')}</p>\r\n                        <p style={statutStyle}> {notif.probleme_statut} </p>\r\n                        <p> {notif.probleme_type} </p>\r\n                        <p> {notif.lieu} </p>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\t\r\n\r\n    render(){\r\n\r\n        let { path, url } = this.props.match;\r\n        let {\r\n            session,\r\n        } = this.props;\r\n        let { showSub,\r\n                numSelectedIntervention ,\r\n        } = this.state;\r\n        let displayStyle ;\r\n        let subStyle ;\r\n        let subDisplayChildrenStyle;\r\n        if(showSub){\r\n            displayStyle = {\r\n                ...displayStyle,\r\n                display : 'none',\r\n            };\r\n            subStyle = {\r\n                ...subStyle,\r\n                width : '100%',\r\n            };\r\n        }else{\r\n            subStyle = {\r\n                ...subStyle,\r\n                width : '0px',\r\n            };\r\n            subDisplayChildrenStyle = {\r\n                ...subDisplayChildrenStyle,\r\n                display : 'none',\r\n            };\r\n        }\r\n            return (\r\n                <div className=\"main_layout\">\r\n                    <div className=\"notif_pop\" ref={this.popUp}>\r\n                        {this.showNewNotifs()}\r\n                    </div>\r\n                    <div className=\"header\">\r\n                        <h1>mptdn_acim</h1>\r\n                        <p> {this.props.session.username} </p>\r\n                        <button onClick={this.showPopUp}> show pop </button>\r\n                        <button onClick={this.logOut}> se deconnecter </button>\r\n                    </div>\r\n                    <div className=\"main_display\">\r\n                        <nav className=\"side_nav\">\r\n                            <NavLink activeClassName=\"active_navLink\"  to={`${url}/dashboard`}>tableau de bord</NavLink>\r\n                            <NavLink activeClassName=\"active_navLink\"  to={`${url}/mytask`}>Mes taches</NavLink>\r\n                            <NavLink activeClassName=\"active_navLink\"  to={`${url}/notifsHistory`}>Historiques des notifications</NavLink>\r\n                            <NavLink activeClassName=\"active_navLink\"  to={`${url}/interventionHistory`}>Historiques des interventions</NavLink>\r\n                        </nav>\r\n                            <div className=\"main-tabDisplay\" >\r\n                                <div className=\"display\" style={displayStyle}>\r\n                                    <Switch>\r\n                                        <Route exact path={path}> \r\n                                            <Redirect to={`${path}/dashboard`}/>\r\n                                        </Route>\r\n\r\n                                        <Route path={`${path}/dashboard`} render= {\r\n                                            (routeProps) => <Dashboard {...routeProps} socket={this.socket} session={this.props.session} nbNewNotification = {this.state.nbNewNotification}  nbNewNotificationToZero = {() => this.nbNewNotificationPlus('0')} showSub={this.showSub}/>\r\n                                        }/>\r\n\r\n                                        <Route path={`${path}/mytask`} \r\n                                                render = {\r\n                                                    (routeProps) => <ToDoList {...routeProps} \r\n                                                                        {...this.props} \r\n                                                                        showSub={this.showSub} \r\n                                                                        socket={this.socket} \r\n                                                                        num_tech_main={session.num_user} \r\n                                                                        topText={`Listes des taches a faire par ${session.username} :`}\r\n                                                                        />\r\n\r\n                                        }/>\r\n\r\n                                        <Route path={`${path}/notifsHistory`} \r\n                                                render = { (routeProps) => \r\n                                                    <NotifsHistory  {...routeProps} session={this.props.session} socket={this.socket}/>\r\n                                        }/>\r\n\r\n                                        <Route path={`${path}/interventionHistory`} \r\n                                                render = { (routeProps) => \r\n                                                    <InterventionHistory  {...routeProps} \r\n                                                        session={this.props.session} \r\n                                                        socket={this.socket} \r\n                                                        showSub={this.showSub}\r\n                                                        />\r\n                                        }/>\r\n\r\n                                    </Switch>\r\n                                </div>\r\n                                <div className=\"sub-display\" style={subStyle}>\r\n                                    <InterventionPage num_intervention ={this.state.numSelectedIntervention} {...this.props}  style={subDisplayChildrenStyle} closeSub ={()=> this.showSub(numSelectedIntervention)} socket={this.socket}/>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            );\r\n    }\r\n}\r\n","import './index.css';\nimport React from 'react';\n\nexport default class Notify_header extends React.Component {\n    render () {\n        return (\n            <div className=\"notify_header header\">\n                <h1>mptdn_acim</h1>\n                <p> {this.props.session.username} </p>\n                <button onClick={this.props.showNotif} > showNotif </button>\n                <button onClick={this.props.logOut}> se deconnecter </button>\n            </div>\n        );\n    }\n}\n","import './index.css';\r\nimport React from 'react';\r\nimport Dropdown from './../../utils/dropDown';\r\n\r\n\r\nexport default class Ask extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            listProblem : [],\r\n            listProblemStatut : [],\r\n            listLieu : [],\r\n            session : this.props.session,\r\n            problem : '',\r\n            num_probleme_type : '',\r\n            num_probleme_statut : '',\r\n            num_lieu : '',\r\n            remarque : '',\r\n            indication : ''\r\n        }\r\n    }\r\n    updateProblem = (e) => {\r\n       this.setState({\r\n           problem : e.target.value,\r\n       });\r\n    }\r\n    updateProblemType = (e) => {\r\n       this.setState({\r\n           num_probleme_type : e.target.value,\r\n       });\r\n    }\r\n    updateProblemStatut = (e) => {\r\n       this.setState({\r\n           num_probleme_statut : e.target.value,\r\n       });\r\n    }\r\n    updateLieu = (e) => {\r\n       this.setState({\r\n           num_lieu : e.target.value,\r\n       });\r\n    }\r\n    updateRemarque = (e) => {\r\n       this.setState({\r\n           remarque : e.target.value,\r\n       });\r\n    }\r\n    componentDidMount = () => {\r\n        console.log('ask mount');\r\n        //console.log(this.props.session);\r\n        //get the problems\r\n        if( this.props.socket ){\r\n            //get probleme spec : get listProbleme , statut , Lieu\r\n            this.props.socket.on('list problem', (listProblem) => {\r\n                console.log('list problem in ask' , listProblem );\r\n                let newListProblem = listProblem.map( item => {\r\n                    return { \r\n                        key : item.num_probleme_type,\r\n                        value : item.num_probleme_type,\r\n                        libelle : item.libelle,\r\n                        code: item.code,\r\n                    }\r\n                });\r\n                this.setState({\r\n                    listProblem : newListProblem,\r\n                    num_probleme_type : newListProblem[0].value,\r\n                });\r\n            });\r\n\r\n            this.props.socket.on('list problem_statut', (listProblemStatut) => {\r\n                console.log(' getting list problem_statut');\r\n                let newListProblemStatut = listProblemStatut.map( item => ({\r\n                    key : item.num_probleme_statut,\r\n                    value : item.num_probleme_statut,\r\n                    libelle : item.libelle,\r\n                }));\r\n\r\n                this.setState({\r\n                    listProblemStatut : newListProblemStatut,\r\n                    num_probleme_statut : newListProblemStatut[0].value,\r\n                });\r\n\r\n            });\r\n\r\n            this.props.socket.on('list lieu', (listLieu) => {\r\n                console.log(' getting list lieu');\r\n                let newListLieu = listLieu.map( item => ({\r\n                    key : item.num_lieu,\r\n                    value : item.num_lieu,\r\n                    libelle : item.libelle,\r\n                }));\r\n\r\n                this.setState({\r\n                    listLieu : newListLieu,\r\n                    num_lieu : newListLieu[0].value,\r\n                });\r\n            });\r\n\r\n            this.props.socket.on('I sent a notif', (createdNotif) => {\r\n                //alert('notification sent', createdNotif );\r\n                createdNotif.date_envoie = new Date(createdNotif.date_envoie).toLocaleString('fr-FR');\r\n                console.log('new notif in history');\r\n                this.props.nbNewNotifsPlus();\r\n                this.setState({\r\n                    indication : `Demande envoyee #${createdNotif.date_envoie}`,\r\n                });\r\n            });\r\n\r\n\r\n            this.props.socket.emit('get problem definition');\r\n        }else{\r\n            console.log( ' no socket in ask');\r\n        }\r\n\r\n    }\r\n\r\n    componentDidupdate = () => {\r\n        console.log('componentDidUpdate ask');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        console.log('unmount ask');\r\n        this.props.socket.off('list problem');\r\n        this.props.socket.off('list problem_statut');\r\n        this.props.socket.off('list lieu');\r\n        this.props.socket.off('I sent a notif');\r\n    }\r\n\r\n    sendNotifs = () => {\r\n        //console.log('send notifs based on ' , this.state );\r\n        let selectedProblemTypeCode;\r\n        console.log('listProblem' , this.state.listProblem );\r\n        if ( this.state.listProblem.length !== 0 ) selectedProblemTypeCode = this.state.listProblem.find( problem => problem.key === this.state.num_probleme_type).code;\r\n        console.log(' selected problem type is ' + selectedProblemTypeCode );\r\n        //if code is OTH , remarque is required\r\n        if ( selectedProblemTypeCode === 'OTH' && !this.state.remarque ) {\r\n            //alert(' Vous devez ecrire une remarque');\r\n            this.setState({\r\n                indication : 'Vous devez ecrire une remarque',\r\n            });\r\n            return;\r\n        }\r\n        if(this.props.session && this.state.num_lieu && this.state.num_probleme_type && this.state.num_probleme_statut ){\r\n            //create the problem first\r\n            let newProblem = {\r\n                num_probleme_type : this.state.num_probleme_type,\r\n                num_probleme_statut : this.state.num_probleme_statut,\r\n                num_lieu : this.state.num_lieu,\r\n                remarque : this.state.remarque,\r\n            }\r\n            let newNotif = {\r\n                num_app_user_user : this.state.session.num_user,\r\n                newProblem,\r\n            }\r\n            console.log('send notif ' , newNotif );\r\n            this.props.socket.emit('notif' , newNotif );\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let indicationStyle ;\r\n        if( this.state.indication ){\r\n            //show indication\r\n            indicationStyle = {\r\n                opacity : 1,\r\n                right : 0,\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"ask\">\r\n                <p>{ `Demande d'assistance`}</p>\r\n                <div className=\"dropdown-zone\">\r\n                    <p> Probleme  : </p>\r\n                    <Dropdown value={this.state.num_probleme_type} onChange={this.updateProblemType}  objArray={this.state.listProblem}/>\r\n                </div>\r\n                <div className=\"remarque-problem\">\r\n                    <p> remarque : </p>\r\n                    <textarea value= {this.state.remarque} onChange={this.updateRemarque} placeholder=\"remarque ici\" />\r\n                </div>\r\n                <div className=\"double-dropdown\">\r\n                    <div className=\"dropdown-zone\">\r\n                        <p> Urgence : </p>\r\n                        <Dropdown defaultValue=\"xx\" value={this.state.num_probleme_statut} objArray={this.state.listProblemStatut} onChange={this.updateProblemStatut}/>\r\n                    </div>\r\n                    <div className=\"dropdown-zone\">\r\n                        <p> Lieu : </p>\r\n                        <Dropdown  value={this.state.num_lieu} objArray={this.state.listLieu} onChange={this.updateLieu} />\r\n                    </div>\r\n                </div>\r\n                <button className=\"my-button\" onClick={ this.sendNotifs }> Envoyer </button>\r\n                <div className=\"indication\" style={indicationStyle}> { this.state.indication } </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import './index.css';\nimport React from 'react';\nimport { Urgent } from './../../urgent';\n\nexport default class Notif_history extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            detailsAreShown : false ,\n        }\n    }\n    showDetails = () => {\n        this.setState({\n            detailsAreShown : !(this.state.detailsAreShown),\n        });\n    }\n    showInfoOf = (num_intervention) => {\n        this.props.showSub(num_intervention);\n    }\n    render () {\n        let style;\n        let sumStyle ;\n        let statutStyle ;\n        let detailStyle ;\n        switch(this.props.notif.statut_code){\n            case Urgent.MAX.code :\n                style = {\n                    borderLeft : '3px solid red',\n                    //borderRight : '3px solid red',\n                };\n                statutStyle = {\n                    //background : 'red',\n                    color : 'red',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MID.code :\n                style = {\n                    borderLeft : '3px solid yellow',\n                    //borderRight : '3px solid yellow',\n                };\n                statutStyle = {\n                    //background : 'yellow',\n                    color : 'yellow',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MIN.code :\n                style = {\n                    borderLeft : '3px solid blue',\n                    //borderRight : '2px solid blue',\n                };\n                statutStyle = {\n                    //background : 'blue',\n                    color : 'blue',\n\n                }\n                break;\n             default :\n                break;\n        }\n        if(this.state.detailsAreShown){\n            detailStyle = {\n                height : \"80%\",\n            };\n            sumStyle = {\n                height : \"15%\",\n            };\n            style = {\n                ...style,\n                height : \"300px\",\n            }\n\n        }\n        if(this.props.notif.num_app_user_tech_main && this.props.notif.date_reponse){\n            style = {\n                ...style,\n                background : '#a9c8f7',\n            }\n        }\n        let {\n            probleme_type ,\n            code,\n            statut_libelle,\n            lieu,\n            date_envoie,\n            remarque,\n            tech_main_username,\n            date_reponse,\n            num_notification,\n            num_intervention ,\n        } = this.props.notif;\n        return (\n            <div className=\"notif_history\" style={style} >\n                <div className=\"notif_history-sum\" style={sumStyle}>\n                    <div className=\"date_envoie\">\n                        <p> Date d'envoie : </p>\n                        <p> {date_envoie} </p>\n                    </div>\n                    <div className=\"probleme_type\" >\n                        <p> {probleme_type} </p>\n                        <p> {code} </p>\n                    </div>\n                    <div className=\"probleme_statut\" style={statutStyle}>\n                        <p> {statut_libelle} </p>\n                        <p> {lieu} </p>\n                    </div>\n                    <button onClick={this.showDetails}> Details </button>\n                </div>\n                { this.state.detailsAreShown &&\n                    <div className=\"notif-details\" style={detailStyle}>\n                        <p> remarque: {remarque} </p>\n                        <p> prise en charge par : {tech_main_username}  </p>\n                        <p> repondue le : {date_reponse} </p>\n                        <p> ID notification : {num_notification} </p>\n                        <p> ID intervention : \n                            { (num_intervention !== 'nd') &&\n                                <button href=\"#\" onClick={() => this.showInfoOf(num_intervention)}> {num_intervention} </button>\n                            }\n                        </p>\n                        <p> Details 1 </p>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React from 'react';\nimport NotifHistory from './../notifHistory';\nimport { Urgent } from './../../urgent';\n\n\nexport default class History extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            notifsTab : [],\n        }\n    }\n    componentDidMount = () => {\n        //get all history :3 or a part of it \n        this.props.socket.emit('get notifs history', this.props.session.num_user);\n        this.props.socket.on('notifs history', (notifsTab) => {\n            console.log('notification history', notifsTab);\n            const newNotifsTab = notifsTab.map( item => ({\n                num_notification : item.num_notification,\n                probleme_type : item.probleme_type,\n                probleme_code : item.code,\n                statut_code : item.statut,\n                statut_libelle : item.statut_libelle,\n                lieu : item.lieu,\n                remarque : item.remarque || '-',\n                date_envoie : new Date(item.date_envoie).toLocaleString('fr-FR'),\n                num_app_user_tech_main : item.num_app_user_tech_main,\n                tech_main_username : item.tech_main_username || '-',\n                date_reponse : (item.date_reponse)? new Date(item.date_reponse).toLocaleString('fr-FR'): '-',\n                num_intervention : item.num_intervention || 'nd',\n            }));\n            this.setState({\n                notifsTab : newNotifsTab,\n            });\n        });\n\n        this.props.socket.on('notif from tech_main' , () => {\n            //tech_main has taken charge of something\n            console.log('notif from tech_main in history js');\n            setTimeout( () => {\n                console.log('notif from tech_main');\n                this.props.socket.emit('get notifs history', this.props.session.num_user);\n            } , 5000);\n        });\n\n        \n        //get the nb of new notfis to zero\n        this.props.nbNewNotifsToZero();\n    }\n    displayNotif  = (list) => {\n        return list.map( notif => <NotifHistory showSub={this.props.showSub} notif={notif} key={notif.num_notification}/> );\n    }\n\n    componentWillUnmount = () => {\n        this.props.socket.off('notifs history');\n    }\n    render(){\n        return (\n            <div id=\"notifsList\">\n                <p> Historiques des notifications envoyees par {this.props.session.username}:  </p>\n                <div id=\"scroll_list-notifsList\">\n                    {this.displayNotif(this.state.notifsTab)}\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React from 'react';\nimport Intervention from './../intervention';\n\n\nexport default class Intervention_notification extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            interventionTab : [],\n        }\n    }\n    componentDidMount = () => {\n        console.log('component did mount intervention_notification');\n        this.props.socket.emit('get list intervention_notification',this.props.session.num_user);\n        this.props.socket.on('list intervention_notification',(notifList) => {\n            console.log('list intervention' , notifList);\n            let new_interventionTab = notifList.map( (item,index) => ({\n                num_intervention : item.num_intervention ,\n                date_programme : item.date_programme,\n                lieu_libelle : item.lieu,\n                intervention_type : item.libelle_intervention_type,\n                tech_main_username : item.tech_main_username,\n                motif : item.motif,\n                numero : index + 1,\n                done : item.done,\n            }));\n            this.setState({\n                interventionTab : new_interventionTab,\n            });\n        });\n        this.props.socket.on('ended intervention', () => {\n            this.props.socket.emit('get list intervention_notification',this.props.session.num_user);\n        });\n\n    }\n\n    componentWillUnmount = () => {\n        console.log('intervention_notification will unmount');\n        this.props.socket.off('list intervention_notification');\n        //this.props.socket.off('ended intervention'); better in interventionPage as it is always mounted until we unmmount all\n    }\n    displayListInterevention = (list) => {\n        return list.map( intervention => {\n            \n            if ( intervention.num_intervention === this.props.numSelectedIntervention ){\n                return <Intervention {...this.props} intervention={intervention} key={intervention.num_intervention} selected={true}/>;\n            }else{\n                return <Intervention {...this.props} intervention={intervention} key={intervention.num_intervention} selected={false}/>;\n            }\n        });\n    }\n    render () {\n        return (\n            <div className=\"intervention_notification\">\n                <p> Interventions provenant des notifactions de {this.props.session.username} </p>\n                <div className=\"scroll_list\">\n                    {this.displayListInterevention(this.state.interventionTab)}\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css';\r\nimport React from 'react';\r\nimport {  Switch , Route , Redirect, NavLink , useRouteMatch  } from 'react-router-dom'; \r\nimport NotifyHeader from './../notifyHeader';\r\nimport Ask from './../ask';\r\nimport History from './../history';\r\nimport InterventionNotification from './../interventionNotification';\r\nimport InterventionPage from './../interventionPage';\r\nimport { mySocket } from './../../socket_io/socket_io';\r\n\r\nexport default class Notify extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            nbNewNotifs : 0,\r\n            notifsList : [\r\n                \r\n            ],\r\n            showSub : false,\r\n            numSelectedIntervention : null ,\r\n        }\r\n        this.socket = mySocket.socket;\r\n        this.notify_notif_pop = React.createRef();\r\n        //this.sub_display = React.createRef();\r\n\r\n    }\r\n\r\n    nbNewNotifsPlus = (nb) => {\r\n        console.log('new notifs ++');\r\n        \r\n        let newNb = nb || this.state.nbNewNotifs + 1;\r\n        //nb if defined to be 0 needs to be a string , !('0') is true so nbNewNotifs becomes a string and may lead to some strange behaviour so parseInt is used\r\n        newNb = parseInt(newNb);\r\n        console.log('new notifs ', newNb);\r\n        this.setState({\r\n            nbNewNotifs : newNb,\r\n        });\r\n    }\r\n    logOut = () => {\r\n        this.props.logOut();\r\n    }\r\n\r\n    showNotif = () => {\r\n        console.log('show Notif');\r\n        this.notify_notif_pop.current.style.top = '157px';\r\n        setTimeout( ()=> {\r\n            this.notify_notif_pop.current.style.top = '-1000px'\r\n        }, 10000);\r\n    }\r\n\r\n    hideNotif = () => {\r\n        this.notify_notif_pop.current.style.top = '-1000px';\r\n    }\r\n\r\n    showSubWithInfo = (num_intervention) => {\r\n        let newShowSub;\r\n        if( this.state.numSelectedIntervention === num_intervention ) {\r\n            newShowSub = !(this.state.showSub);\r\n            num_intervention = null;\r\n        }\r\n        else newShowSub = true;\r\n        this.setState({\r\n            showSub : newShowSub,\r\n            numSelectedIntervention : num_intervention ,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //initialize a client socket io\r\n        mySocket.connect( this.props.session.username , this.props.session.type_user , this.props.session.num_user );\r\n\r\n        this.socket.on('notif from tech_main' , ({tech_main_username , probleme_type , date_envoie , delai ,lieu ,num_notification}) => {\r\n            console.log('notif from tech_main' , tech_main_username , probleme_type , date_envoie , delai );\r\n            let date_envoie_formatted = new Date(date_envoie).toLocaleString('fr-FR');\r\n            //show notif saying a sentence\r\n            const notif = {\r\n                tech_main_username,\r\n                probleme_type,\r\n                lieu,\r\n                date_envoie_formatted : date_envoie_formatted,\r\n                date_envoie,\r\n                delai,\r\n                text : `${tech_main_username} arrive pour le probleme : \" ${probleme_type} \" lieu : ${lieu} - notifie le ${date_envoie_formatted} -- \r\n                delai : ${delai}`,\r\n                key : num_notification,\r\n            }\r\n            let newNotifsList = this.state.notifsList.slice();\r\n            if(newNotifsList.length > 4) newNotifsList.pop();\r\n            newNotifsList.unshift(notif);\r\n            newNotifsList = newNotifsList.filter( item => {\r\n                let now_10 = new Date().getTime() - (10*60*1000);\r\n                let date_notif = new Date(item.date_envoie).getTime();\r\n                if(date_notif < now_10 ) return false;\r\n                else return true;\r\n            });\r\n            console.log('newNotifsList', newNotifsList );\r\n            this.showNotif();\r\n            this.setState({\r\n                notifsList : newNotifsList,\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        console.log('unmount notify');\r\n        this.socket.off('list problem');\r\n        this.socket.off('list problem_statut');\r\n        this.socket.off('list lieu');\r\n        this.socket.off('notif from tech_main');\r\n        this.socket.offAny();\r\n        mySocket.disconnect();\r\n    }\r\n\r\n    formatNotifsList = (notifsList) => {\r\n        return (\r\n            notifsList.map( item => \r\n                <div className=\"notify_notif\" key={item.key} onClick={this.hideNotif}>\r\n                    <p> {item.tech_main_username} arrive </p>\r\n                    <p> probleme : {item.probleme_type} -- {item.lieu} </p>\r\n                    <p> notifiee le : {item.date_envoie_formatted} </p>\r\n                    <p> delai : {item.delai} </p>\r\n                </div>\r\n            )\r\n        );\r\n\r\n    }\r\n\r\n    render () {\r\n        let {\r\n            numSelectedIntervention,\r\n        } = this.state;\r\n        let subStyle ;\r\n        let subDisplayChildrenStyle;\r\n        if ( this.state.showSub ) {\r\n            subStyle = {\r\n                width : '45%',\r\n            }\r\n           \r\n        }else{\r\n            subStyle = {\r\n                background : 'black',\r\n                width : '0px',\r\n            };\r\n            subDisplayChildrenStyle = {\r\n                display : 'none',\r\n            };\r\n        }\r\n        \r\n        return (\r\n            <div className=\"notify_layout\">\r\n                <NotifyHeader {...this.props} showNotif={this.showNotif}/>\r\n                <div className=\"notify_display\">\r\n                    <TabDisplay {...this.state} {...this.props} socket = {this.socket} nbNewNotifsPlus={this.nbNewNotifsPlus} showSub={this.showSubWithInfo} numSelectedIntervention={this.state.numSelectedIntervention}>\r\n                    </TabDisplay>\r\n                    <div className=\"sub-display\" style={subStyle}>\r\n                        <InterventionPage num_intervention ={this.state.numSelectedIntervention} {...this.props} socket={this.socket} style={subDisplayChildrenStyle} closeSub={()=> this.showSubWithInfo(numSelectedIntervention)}/>\r\n                    </div>\r\n                    <div className=\"notify_notif_pop\" ref={this.notify_notif_pop} >\r\n                        {this.formatNotifsList(this.state.notifsList)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction TabDisplay(props){\r\n    let { path, url } = props.match;\r\n    return (\r\n            <div className=\"tab-display\">\r\n                <nav className=\"notify_nav\">\r\n                    <NavLink activeClassName=\"active_navLink_notify\" to={`${url}/ask`}>{ `Demande d'assistance`}</NavLink>\r\n                    <NavLink activeClassName=\"active_navLink_notify\" to={`${url}/history`}>Historiques des demandes{(props.nbNewNotifs>0) ? `(${props.nbNewNotifs})`: ``}</NavLink>\r\n                    <NavLink activeClassName=\"active_navLink_notify\" to={`${url}/intervention`}>Interventions</NavLink>\r\n                </nav>\r\n                <div className=\"display\">\r\n                        {props.children}\r\n                        <Switch>\r\n                            <Route path={`${path}/ask`} render= {\r\n                                (routeProps) =>  <Ask {...routeProps} session={props.session} socket={props.socket} nbNewNotifsPlus={props.nbNewNotifsPlus} />\r\n                            }/>\r\n                            <Route path={`${path}/history`} render= {\r\n                                (routeProps) => <History {...routeProps} session={props.session} socket={props.socket} nbNewNotifsToZero={() => props.nbNewNotifsPlus('0') } showSub={props.showSub} numSelectedIntervention={props.numSelectedIntervention}/>\r\n                            }/>\r\n                            <Route path={`${path}/intervention`} render= {\r\n                                (routeProps) => <InterventionNotification {...routeProps} {...props} socket={props.socket} showSub={props.showSub} numSelectedIntervention={props.numSelectedIntervention}/> \r\n                            }/>\r\n                            <Redirect exact from={path} to={`${path}/ask`} />\r\n                        </Switch>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n\r\n}\r\n","/*protected route component\r\n * path : the path\r\n * takes conditionIn : a function that determines wether the condition to access the route is verified\r\n * render : the render function of the route component \r\n * redirectRender : the redirect in case the conditionIn is false\r\n *\r\n */\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport default class ProtectedRoute extends React.Component {\r\n\r\n    determineRender = () => {\r\n        if(this.props.conditionIn()) return this.props.render;\r\n        else return this.props.redirectRender;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Route  path={this.props.path}\r\n                    render={this.determineRender()}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n","import './App.css';\r\nimport React from 'react';\r\nimport Login from './components/login';\r\nimport Layout from './components/layout';\r\nimport Main from './components/main';\r\nimport Notify from './components/notify';\r\nimport ProtectedRoute from './components/protectedRoute';\r\nimport {  Switch , Route , Redirect  } from 'react-router-dom'; \r\nimport { User, computeHmac } from './userTypes.js'\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log('======== APP constructor');\r\n        this.state = {\r\n            logged : (localStorage.getItem('logged') === 'true') || false,\r\n            num_user : localStorage.getItem('num_user') || '',\r\n            username : localStorage.getItem('username') || '',\r\n            type_user : localStorage.getItem('type_user')|| null,\r\n            t_u: null,\r\n            t_t: null,\r\n        }\r\n        this.computedHash_USER = null;\r\n        this.computedHash_TECH_MAIN = null;\r\n        console.log('constructor', this.state);\r\n    }\r\n\r\n\r\n    setCredentials = (cred) => {\r\n        this.computedHash_TECH_MAIN = null;\r\n        this.computedHash_USER = null;\r\n        this.setState({\r\n            logged : cred.logged,\r\n            num_user : cred.num_user,\r\n            username : cred.username,\r\n            type_user : cred.type_user,\r\n        });\r\n    }\r\n\r\n    logOut = () => {\r\n        this.setCredentials ( { \r\n            logged : false,\r\n            num_user : '',\r\n            username : '' ,\r\n            type_user : null,\r\n        });\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        //computing t_u , t_t ,\r\n        //session is ini in constructor\r\n        console.log('======= APP component did mount , state ' , this.state);\r\n        let computedHash_USER;\r\n        let computedHash_TECH_MAIN;\r\n        let lastLogged = (localStorage.getItem('logged') === 'true');\r\n        if( lastLogged ) {\r\n            console.log('compute hmac for user , tech_main');\r\n            computedHash_USER       = await computeHmac(User.USER.code, this.state.username);\r\n            computedHash_TECH_MAIN  = await computeHmac(User.TECH_MAIN.code, this.state.username);\r\n            console.log(' after compute ' , computedHash_USER , computedHash_TECH_MAIN);\r\n            this.setState({\r\n                t_u : computedHash_USER,\r\n                t_t : computedHash_TECH_MAIN,\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    async shouldComponentUpdate(nextProps,nextState){\r\n        console.log('==== APP shouldComponentUpdate  state',nextState);\r\n        //if we go from no logged to logged , need to re-compute t_u and t_t\r\n        if( this.state.logged !== nextState.logged ){\r\n            console.log('compute hmac for user , tech_main');\r\n            let computedHash_USER;\r\n            let computedHash_TECH_MAIN;\r\n            if( !nextState.logged ) {\r\n                //nextState is not logged , we are disconnecting\r\n                //no need to compute just nullify\r\n                computedHash_USER = null;\r\n                computedHash_TECH_MAIN = null;\r\n\r\n            }else{\r\n                computedHash_USER       = await computeHmac(User.USER.code,nextState.username);\r\n                computedHash_TECH_MAIN  = await computeHmac(User.TECH_MAIN.code, nextState.username);\r\n            }\r\n            console.log(' after compute ' , computedHash_USER , computedHash_TECH_MAIN);\r\n            this.setState({\r\n                t_u : computedHash_USER,\r\n                t_t : computedHash_TECH_MAIN,\r\n            });\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('==== APP componentDidUpdate ');\r\n        localStorage.setItem('logged',this.state.logged);\r\n        localStorage.setItem('num_user',this.state.num_user);\r\n        localStorage.setItem('username', this.state.username);\r\n        localStorage.setItem('type_user',this.state.type_user);\r\n    }\r\n    \r\n    render(){\r\n        console.log('===== APP render');\r\n        console.log('state ', this.state);\r\n\r\n        //function for changing redirect according to type_ser and logged\r\n        const determineRootRedirect = () => { \r\n            console.log('==== determineRootRedirect function ');\r\n            console.log( 'state in determineRootRedirect ', this.state);\r\n            console.log(' computedhash ' , this.state.t_u , this.state.t_t);\r\n            \r\n            if(this.state.logged){\r\n                console.log(' logged');\r\n                if(this.state.type_user === this.state.t_u) return '/notify';\r\n                if(this.state.type_user === this.state.t_t) return '/acim';\r\n            }\r\n            console.log('no logged');\r\n            console.log('==== end determineRootRedirect ');\r\n            return '/login';\r\n        }\r\n        const redirectTo = determineRootRedirect();\r\n        console.log('redirectTo ' , redirectTo);\r\n\r\n        let session;\r\n        if(this.state.logged){\r\n            //configure session\r\n            session = {\r\n                num_user : this.state.num_user,\r\n                username : this.state.username,\r\n                type_user : this.state.type_user,\r\n             }\r\n        }\r\n        console.log('=== end of render appp');\r\n\r\n        return (\r\n        <Layout>\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <ProtectedRoute path=\"/login\"\r\n                                    conditionIn={ () => {\r\n                                        if( !this.state.logged ) return true;\r\n                                        else return false;\r\n                                    }}\r\n                                    render={ (routeProps) => \r\n                                        <Login { ... routeProps} setCredentials={this.setCredentials} />\r\n                                    }\r\n                                    redirectRender={ (routeProps) =>\r\n                                        <Redirect to={redirectTo}/>\r\n                                    }\r\n                    />\r\n\r\n\r\n                    <ProtectedRoute path=\"/acim\"\r\n                                    conditionIn={ () => {\r\n                                        if(this.state.logged && this.state.type_user === this.state.t_t) return true ;\r\n                                        else return false;\r\n                                    }}\r\n                                    render={ (routeProps) => \r\n                                        <Main { ... routeProps } session={session} logOut={this.logOut} />\r\n                                    }\r\n                                    redirectRender={ (routeProps) =>\r\n                                        <Redirect to={redirectTo} />\r\n                                    }\r\n                    /> \r\n                    \r\n                    <ProtectedRoute path=\"/notify\"\r\n                        conditionIn={ () => {\r\n                            if(this.state.logged && this.state.type_user === this.state.t_u ) return true;\r\n                            else return false;\r\n                        }}\r\n                        render={ (routeProps) =>\r\n                            <Notify {... routeProps} session={session} logOut = {this.logOut}/>\r\n                        }\r\n                        redirectRender={ (routeProps) =>\r\n                            <Redirect to={redirectTo} />\r\n                        }\r\n                    />\r\n                    \r\n\r\n                    <Route path=\"/info\">\r\n                        <dl>\r\n                            <dt> a.c.i.m </dt>\r\n                            <dd> Application de Coordination des Interventions de Maintenance </dd>\r\n                        </dl>\r\n                    </Route>\r\n\r\n                    <Redirect   from=\"/\" \r\n                                to= \"/login\"/> \r\n                    \r\n                </Switch>\r\n            </div>\r\n        </Layout>\r\n        );\r\n    }\r\n}\r\n                    //<Route path=\"/notify\" render={ (routeProps) => <Notify {... routeProps} session={session} logOut = {this.logOut} /> }/>\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}