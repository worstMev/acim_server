{"version":3,"sources":["userTypes.js","components/login/loginData.js","components/login/index.js","components/layout/index.js","socket_io/socket_io.js","components/foldableDiv/index.js","components/intervention/index.js","components/toDoList/index.js","urgent.js","components/notif/index.js","components/notifsList/index.js","utils/dropDown.js","components/utils/dropDown/index.js","components/materielSelector/index.js","components/multiMaterielSelector/index.js","components/interventionDecharge/index.js","components/createIntervention/index.js","components/dashboard/index.js","components/notifHistoryTech/index.js","components/notifsHistory/index.js","components/problemeTechConstate/index.js","components/interventionLog/index.js","components/interventionPage/index.js","functions/index.js","components/interventionHistoryControl/index.js","components/interventionHistoryAffichage/index.js","components/interventionHistory/index.js","components/activeUsers/index.js","components/messageRoom/index.js","components/messagePage/index.js","components/main/index.js","components/notifyHeader/index.js","components/ask/index.js","components/notifHistory/index.js","components/history/index.js","components/interventionNotification/index.js","components/notify/index.js","components/protectedRoute/index.js","App.js","reportWebVitals.js","index.js"],"names":["User","text","code","computeHmac","key","a","cryptojs","HmacMD5","computedHash","hexaComputedHash","SERVER_BASE_URL","postRequest","url","data","axiosInstance","axios","create","baseURL","post","response","console","log","authenticateUsername","username","usernameIsValid","authenticate","password","found","isAuthenticated","row","num_user","type_user","Login","props","changeSubmittedUsername","event","setState","submittedUsername","target","value","changeSubmittedPassword","submittedPassword","checkCredentials","preventDefault","state","setCredentials","logged","computedHash_USER","computedHash_TECH_MAIN","history","push","className","src","alt","id","onSubmit","this","type","placeholder","onChange","autoFocus","onClick","React","Component","Layout","children","to","socket","io","autoConnect","onAny","args","mySocket","connect","auth","disconnect","offAny","FoldableDiv","flipFold","newFolded","folded","foldableStyle","title","titleStyle","maxHeight","minHeight","style","Intervention","showDetails","detailsAreShown","goToIntervention","num_intervention","showSub","sumStyle","interventionStyle","childElements","isChild","intervention","date_programme","libelle_lieu","motif","intervention_type","libelle_intervention_type","tech_main_username","numero","done","probleme_resolu","libelle_probleme_tech_type","code_intervention_type","isParent","length","detailStyle","display","height","selected","background","borderLeft","borderTop","borderBottom","borderRight","borderRadius","map","item","index","substring","Date","toLocaleString","ToDoList","componentDidMount","emit","num_tech_main","on","listUndoneIntervention","newList","num_intervention_pere","libelle","interv","filter","setNbInterventionUndone","endOfDay","setHours","getTime","newListLate","newListToday","interventionDate","newListFuture","interventionListUndone","interventionListUndoneLate","interventionListUndoneToday","interventionListUndoneFuture","clickOnToDoList","componentWillUnmount","off","displayToDo","list","retardTitle","todayTitle","futureTitle","allTitle","topText","color","Urgent","ToDo","commandAreShown","showCommand","do","delai","num_notification","notif","num_app_user_tech_main","statutStyle","statut_code","fontWeight","probleme_type","statut_libelle","lieu","date_envoie","remarque","sender_username","NotifsList","displayNotif","session","onClickOnNotifsList","nbNewNotificationToZero","notifsList","newUnansweredNotifsList","user_sender_username","probleme_code","statut","setNbNewNotif","unansweredNotifsList","createdNotif","setTimeout","DropDown","optionArray","array","objArray","defaultValue","selectedValue","e","MaterielSelector","updateMaterielType","materiels","objMateriel","num","config","changeList","selectedMaterielType","materielList","updateMateriel","updateConfig","selectedNumMateriel","materielTypes","materielsList","libelle_materiel_type","num_materiel_type","num_materiel","libelle_materiel","unshift","MultiMaterielSelector","listMateriel","maxLength","maxListMaterielLength","changeListMaterielLength","newLength","slice","dLength","i","setListMateriel","materielElements","materiel","obj","objValue","changeListMateriel","InterventionDecharge","control","disabled","tomorrowDate","setDate","getDate","useState","setMateriels","dateDebut","setDateDebut","dateFin","setDateFin","num_decharge","downloadDecharge","materielsValide","date","debut","fin","formatDate","day","month","getMonth","year","getFullYear","CreateIntervention","updateTypeIntervention","newNumInterventionType","selectedNumInterventionType","updateDateProgramme","newDateProgramme","dateProgramme","dateProgrammeDisplay","updateLieu","newNumLieu","selectedNumLieu","updateMotif","updateProbleme","numLieu","problemeTechTypes","newMotif","lieus","selectedNumProblemeTechType","createIntervention","message","supposedFreeHours","getHours","interventionTypeList","toISOString","replace","lieuList","problemeList","intervention_types","newInterventionList","num_intervention_type","newSelectedNumInterventionType","location","num_lieu","newLieuList","probleme_tech_types","probleme_tech_type","num_probleme_tech_type","newProblemeList","blem","Dashboard","nbInterventionUndonePlus","nb","newNb","parseInt","nbInterventionUndone","nbNewNotificationPlus","nbNewNotification","match","path","mainDashboardStyle","activeClassName","exact","from","render","routeProps","NotifHistoryTech","date_reponse","NotifsHistory","notifsTab","newNotifsTab","usersList","componentDidUpdate","updateSelectedUser","selectedUser","showNotifs","usersOption","user","ProblemeConstate","problemeTechTypeArray","lieuArray","numProblemeTechType","onChangeProblemeTechType","onChangeLieu","onChangeRemarque","InterventionLog","etapes","split","changeEtapesLength","dE","updateLog","join","logElements","etape","newEtape","newEtapes","changeEtape","InterventionPage","newMateriels","updateProblemeTechType","newNumProblemeTechType","updateRemarque","newRemarque","newLog","updatePwd","newPwd","pwd","startIntervention","techMainIsAuth","endIntervention","resolu","date_debut","updateIntervention","probleme_constate","openCreateIntervention","closeSub","getDecharge","s_URL","URL","document","href","m_path","port","pathname","window","open","newDecharge","newIntervention","log_info_tab","log_info_elements","date_fin","log_info","lieu_probleme_tech","num_decharge_info","childButton","info","child","InterventionHistoryControl","updateTechMain","techMains","setTechMain","updateDateDebut","newDebut","updateDateFin","newFin","updateStatut","newStatut","statuts","setStatut","updateNumIntervention","setNumIntervention","updateNumInterventionType","setNumInterventionType","tech_mainList","statutList","interventionTypes","0","1","2","3","newTech_mainList","tech","nd","newInterventionTypes","tech_main","statutValue","InterventionHistoryAffichage","displayInterventions","interventions","statut_text","date_text","tech_main_username_text","InterventionHistory","st","setFullYear","interventionList","prevProps","prevState","num_interevnetion","minDate","toLocaleDateString","ActiveUsers","updateSelectedNumUser","setSelectedUser","connectedList","allUserList","tech_mains","sort","b","connected_tech_mains","newSelectedUser","active","includes","newMs","elements","UserListItem","isSelf","nbNewMessage","pStyle","MessageRoom","updateContenu","newContenu","sendMessage","messages","uuidV4","newMessageDisplay","sent","time_sent","contenu","newMessage","num_sender","receivers","newMessages","scrollDown","scroll","myScroll","current","scrollTop","scrollHeight","clickOnMessageRoom","unseenMessagesByMe","ms","seen","time_seen","createRef","num_message","find","msIn","contenu_message","envoyeur_username","recepteur_username","date_reception","num_app_user_envoyeur","tim_seen","updatedMessages","updatedMessagesId","indexInUpdateMessage","findIndex","messagesElements","MessageElement","ref","divStyle","fromDisplay","indication","diStyle","justifyContent","margin","MessagePage","selectedUserFromState","selected_app_user_recepteur","setSelected_app_user_recepteur","setNbNewMessageToZero","Main","newShowSub","numSelectedIntervention","setNbNewMessage","showPopUp","top","onClickNotif","popUp","logOut","newNewNotifs","newNotifs","pop","newNotif","now_2","date_notif","newNbNewNotification","newNewMessageNotifs","newMessageNotifs","popUpMessage","showNewNotifs","probleme_statut_code","toLocaleTimeString","probleme_statut","onClickMessageNotif","sender","showNewMessageNotifs","msNotif","userFrom","displayStyle","subStyle","subDisplayChildrenStyle","width","Notify_header","showNotif","Ask","updateProblem","problem","updateProblemType","num_probleme_type","updateProblemStatut","num_probleme_statut","listProblem","newListProblem","listProblemStatut","newListProblemStatut","listLieu","newListLieu","nbNewNotifsPlus","componentDidupdate","sendNotifs","selectedProblemTypeCode","newProblem","num_app_user_user","indicationStyle","opacity","right","Notif_history","showInfoOf","History","nbNewNotifsToZero","Intervention_notification","notifList","new_interventionTab","lieu_libelle","interventionTab","displayListInterevention","Notify","nbNewNotifs","notify_notif_pop","hideNotif","showSubWithInfo","formatNotifsList","date_envoie_formatted","newNotifsList","now_10","TabDisplay","ProtectedRoute","determineRender","conditionIn","redirectRender","App","cred","localStorage","getItem","t_u","t_t","nextProps","nextState","setItem","redirectTo","determineRootRedirect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.65e1020c.chunk.js","sourcesContent":["import cryptojs from 'crypto-js';\r\nexport const User = {\r\n    TECH_MAIN : { \r\n        text :'technicien de maintenance',\r\n        code : 'TECH_MAIN',\r\n    },\r\n    USER : {\r\n        text : 'utilisateur',\r\n        code : 'USER',\r\n    },\r\n    DASH : { \r\n        text : 'tableau de bord',\r\n        code : 'DASH',\r\n    },\r\n}\r\n\r\nexport async function computeHmac( text , key ) {\r\n    let computedHash = await cryptojs.HmacMD5(text, key);\r\n    const hexaComputedHash ='\\\\x'+computedHash;\r\n    return hexaComputedHash;\r\n}\r\n","import axios from 'axios';\r\n\r\nconst SERVER_BASE_URL = 'http://localhost:3500/ajax/acim';\r\n\r\nasync function postRequest(url,data) {\r\n    const axiosInstance = axios.create({\r\n        baseURL : SERVER_BASE_URL,\r\n    });\r\n    let response;\r\n    try{\r\n        response = await axiosInstance.post(url,data);\r\n        return response;\r\n    }catch(err){\r\n        console.log(`error to fetch data from ${SERVER_BASE_URL}${url}`);\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport async function authenticateUsername (username) {\r\n    const url = '/authenticate/username';\r\n    const data = { username };\r\n    let response;\r\n    try{\r\n        response = await postRequest(url,data);\r\n        console.log(' username  :'+username+' is valid '+response.data.usernameIsValid);\r\n        return {\r\n            usernameIsValid : response.data.usernameIsValid,\r\n        };\r\n    }catch(err){\r\n        console.log(`error in authenticateUsername`);\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport async function authenticate( username , password ) {\r\n    const url   = '/authenticate';\r\n    const data  = { username , password };\r\n    let response ;\r\n    try{\r\n        response = await postRequest(url,data);\r\n        console.log( ' authentication success for '+username+' ' + response.data.found );\r\n        return {\r\n            isAuthenticated : response.data.found,\r\n            username : response.data.row.username,\r\n            num_user : response.data.row.num_user,\r\n            type_user : response.data.row.type_user,\r\n        }\r\n    }catch(err){\r\n        console.log('error in authenticate');\r\n        console.log(err);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './index.css';\r\nimport { User, computeHmac } from './../../userTypes.js';\r\nimport { authenticateUsername, authenticate } from './loginData';\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            usernameIsValid : false,\r\n            submittedUsername : '',\r\n            submittedPassword : '',\r\n        }\r\n    }\r\n\r\n    changeSubmittedUsername = (event) => {\r\n       this.setState({\r\n           submittedUsername : event.target.value,\r\n       });\r\n    }\r\n\r\n    changeSubmittedPassword = (event) => {\r\n       this.setState({\r\n           submittedPassword : event.target.value,\r\n       });\r\n    }\r\n    checkCredentials = async (event) => {\r\n        event.preventDefault();\r\n        if( !this.state.usernameIsValid) {\r\n            const response = await authenticateUsername(this.state.submittedUsername);\r\n            console.log(response);\r\n            this.setState({\r\n                usernameIsValid : response.usernameIsValid,\r\n            });\r\n        }else{\r\n            console.log('authenticate username/password');\r\n            try{\r\n                const response = await authenticate(this.state.submittedUsername , this.state.submittedPassword);\r\n                console.log(response);\r\n                if( response.isAuthenticated ){\r\n                    this.props.setCredentials({\r\n                        logged : true,\r\n                        num_user : response.num_user,\r\n                        username : response.username,\r\n                        type_user   : response.type_user,\r\n                    });\r\n                    //console.log(' type_user from server '+ response.type_user);\r\n                    let computedHash_USER = await computeHmac(User.USER.code, response.username);\r\n                    let computedHash_TECH_MAIN = await computeHmac(User.TECH_MAIN.code, response.username);\r\n                    if ( response.type_user === computedHash_USER ) this.props.history.push('/notify');\r\n                    if( response.type_user === computedHash_TECH_MAIN ) this.props.history.push('/acim');\r\n                }\r\n            }catch(err){\r\n                console.log('error in checkCrendentials' , err);\r\n            }\r\n        }\r\n        //check for username , if valid > usernameIsValid = true , submittedUsername = username . done\r\n        //if usernameIsValid , check for submittedUsername&&password , if valid : hitsory.push('/dashboard');\r\n    }\r\n    render (){\r\n        return (\r\n            <div className=\"login\">\r\n                <div>\r\n                    <img src=\"./base_logo_sans_texte.png\" alt=\"mptdn|acim\" id=\"logo\"/>\r\n                </div>\r\n                <form className = \"login_form\" onSubmit={this.checkCredentials}>\r\n                    { (this.state.usernameIsValid) ? \r\n                        <input type=\"password\" placeholder=\"mot de passe\" value={this.state.submittedPassword} onChange={this.changeSubmittedPassword} autoFocus={true}/>\r\n                        :\r\n                        <input type=\"text\" placeholder=\"utilisateur\" value={this.state.submittedUsername} onChange={this.changeSubmittedUsername} autoFocus={true}/>\r\n                    }\r\n                    <button className=\"my-button login-button\" onClick={this.checkCredentials}> {\">\"} </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './index.css';\r\n\r\nexport default class Layout extends React.Component {\r\n    render(){\r\n      return (  \r\n        <div id=\"layout\">\r\n            <main>\r\n                {this.props.children}\r\n            </main>\r\n            <footer>\r\n              <Link to=\"/\">home</Link>\r\n              <Link to=\"/info\">info</Link>\r\n              <Link to=\"/acim\">acim</Link>\r\n              <Link to=\"/notify\">notify</Link>\r\n            </footer>\r\n        </div>\r\n     );\r\n    }\r\n}\r\n","import { io } from 'socket.io-client';\n\nconst socket = io('http://localhost:3500', {\n\tautoConnect : false ,\n});\n\nsocket.onAny((event , ...args) => {\n    console.log(`-- ${event} `, args);\n});\n\nexport const mySocket = {\n    socket ,\n    connect : (username , type_user , num_user) => {\n        console.log( username , type_user , num_user );\n        //connect socket\n        console.log(socket);\n        socket.auth = {\n            username,\n            type_user,\n            num_user,\n        };\n        socket.connect();\n    },\n    disconnect : () => {\n        console.log('my socket disconnect ');\n        socket.offAny();\n        socket.disconnect();\n    }\n}\n","import './index.css'\nimport React , { Component } from 'react';\n\nexport default class FoldableDiv extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            folded : this.props.folded,\n        }\n    }\n\n    flipFold = () => {\n        let newFolded = !(this.state.folded);\n        this.setState({\n            folded : newFolded,\n        });\n    }\n    render () {\n        let {\n            children,\n            title,\n            titleStyle,\n        } = this.props;\n        let {\n            folded\n        } = this.state;\n        let foldableStyle ;\n        if( folded ){\n            foldableStyle = {\n                ...foldableStyle,\n                maxHeight : '50px',\n                minHeight : '50px',\n            };\n        }else{\n            foldableStyle = {\n                ...foldableStyle,\n                maxHeight : '500px',\n            }\n\n        }\n        return (\n            <div className = \"foldableDiv\" style={foldableStyle} >\n                <div className = \"foldableDiv-title\" style={titleStyle} onClick={this.flipFold}>\n                    <p> {title} </p>\n                    <button onClick={this.flipFold}>{(folded) ? 'v':'^'} </button>\n                </div>\n                <div className = \"foldableDiv-children\">\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React from 'react';\nimport FoldableDiv from './../foldableDiv';\n\n/*\n * props :\n * - intervention\n * - isChild : for children of intervention\n * - showSub : to show the interventionPage of the intervention\n */\nexport default class Intervention extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            detailsAreShown : false ,\n        }\n    }\n    showDetails = () => {\n        this.setState({\n            detailsAreShown : !(this.state.detailsAreShown),\n        });\n    }\n    goToIntervention = (num_intervention) => {\n        //alert('open /intervention/'+num_intervention);\n        //this.props.history.push(`/intervention/${num_intervention}`);\n        this.props.showSub(num_intervention);\n    }\n    render () {\n        let {\n            isChild,\n        } = this.props;\n        let { date_programme ,\n            num_intervention, \n            libelle_lieu,\n            motif,\n            intervention_type,\n            libelle_intervention_type,\n            tech_main_username,\n            numero,\n            done,\n            probleme_resolu,\n            libelle_probleme_tech_type,\n            code_intervention_type,\n            children\n        } = this.props.intervention;\n\n        let isParent = (children) &&  (children.length > 0);\n        let sumStyle ;\n        let interventionStyle ;\n        let detailStyle = {\n            display : \"none\",\n        };\n        if(this.state.detailsAreShown){\n            detailStyle = {\n                height : \"80%\",\n            };\n            sumStyle = {\n                height : \"15%\",\n            };\n            interventionStyle = {\n                height : \"fit-content\",\n            }\n\n        }\n        if( this.props.selected ) {\n            interventionStyle = {\n                ...interventionStyle,\n                background : 'rgb(169, 200, 247)',\n            }\n        }\n        if( done ){\n            interventionStyle = {\n                ...interventionStyle,\n                borderLeft : '5px solid green',\n                borderTop : '1px solid green',\n                borderBottom : '1px solid green',\n                borderRight : '1px solid green',\n\n            }\n        }else{\n            interventionStyle = {\n                ...interventionStyle,\n                borderLeft : '5px solid red',\n            }\n        }\n        interventionStyle = {\n            ...interventionStyle,\n            borderRadius : '0 5px 5px 0',\n        }\n\n        let childElements;\n        if(children){\n            childElements = children.map( (item,index) => \n                <Intervention \n                    key={item.num_intervention} \n                    intervention={item} \n                    showSub={this.props.showSub}\n                    />\n            );\n        }\n\n       \n        return (\n            <div className=\"toDo\" style={interventionStyle} >\n                <div className=\"toDo-sum\" style={sumStyle} >\n                    <p> #{numero} <br/> {code_intervention_type} <br/> {num_intervention.substring(0,8)}</p>\n                    <p> {new Date(date_programme).toLocaleString('fr-FR')} </p>\n                    <p> {libelle_lieu} </p>\n                    <p id=\"tache_description\"> {intervention_type || libelle_intervention_type} </p>\n                    <p id=\"tech_main_username\"> {tech_main_username} </p>\n                    <p> Effectue : { (done) ? 'OUI' : 'NON' } et {(probleme_resolu) ? 'RESOLU' : 'NON-RESOLU' } </p>\n                    <button onClick={this.showDetails}> Details </button>\n                </div>\n                <div className=\"toDo-details\" style={detailStyle} >\n                    <p> Type : {libelle_intervention_type}  </p>\n                    <p> Motif : {motif} </p>\n                    <p> Lieu : {libelle_lieu} </p>\n                    <p> Crèèe par : {tech_main_username} </p>\n                    <p> ID intervention : {num_intervention} </p>\n                    <p> Probleme constaté : { libelle_probleme_tech_type} </p>\n                    { isParent &&\n                        <FoldableDiv title = \"Suite ... \" folded={true}>\n                            <div className =\"childList\">\n                                {childElements}\n                            </div>\n                        </FoldableDiv>\n                    }\n                    \n                    <button onClick={() => this.goToIntervention(num_intervention)}  >\n                        { (this.props.selected) ? 'Fermer' : 'Ouvrir' }\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css';\r\nimport React from 'react';\r\n//import ToDo from './../toDo';\r\nimport Intervention from './../intervention';\r\nimport FoldableDiv from './../foldableDiv';\r\n\r\n/*\r\n * prop : num_tech_main to define by who the intervetions have been created if none then all intervention are shown\r\n *         - showSub to show the display for intervention\r\n *         - setNbInterventionUndone\r\n * */\r\n\r\nexport default class ToDoList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            interventionListUndone : [],\r\n            interventionListUndoneLate : [],\r\n            interventionListUndoneToday : [],\r\n            interventionListUndoneFuture : [],\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        console.log('ToDoList did mount');\r\n        this.props.socket.emit('get undone intervention' , this.props.num_tech_main);\r\n        this.props.socket.on('list undone intervention' , (listUndoneIntervention) => {\r\n            console.log('list undone intervention' , listUndoneIntervention);\r\n            let newList = listUndoneIntervention.map( (item,index) => ({\r\n                num_intervention : item.num_intervention,\r\n                num_intervention_pere : item.num_intervention_pere,\r\n                date_programme : item.date_programme,\r\n                libelle_lieu : item.libelle,\r\n                libelle_intervention_type : item.libelle_intervention_type,\r\n                tech_main_username : item.username,\r\n                motif : item.motif,\r\n                numero : index + 1,\r\n                done : item.done,\r\n                libelle_probleme_tech_type : item.libelle_probleme_tech_type,\r\n                code_intervention_type : item.code_intervention_type,\r\n            }));\r\n            for( const interv of newList ){\r\n                interv.children = newList.filter( item => item.num_intervention_pere === interv.num_intervention);\r\n            }\r\n            console.log('new list intervention undone' , newList);\r\n            if(this.props.setNbInterventionUndone){\r\n                this.props.setNbInterventionUndone(newList.length);\r\n            }\r\n            let endOfDay = new Date(new Date().setHours(23,59,59)).getTime();\r\n            let newListLate = newList.filter( item => new Date(item.date_programme).getTime() <= new Date().getTime() ); \r\n            let newListToday = newList.filter( item => {\r\n                let interventionDate = new Date(item.date_programme).getTime() ;\r\n                let startOfDay  = new Date(new Date().setHours(0,0,0)).getTime();\r\n               \r\n                return ( interventionDate > startOfDay && interventionDate <= endOfDay );\r\n            });\r\n            let newListFuture = newList.filter( item => {\r\n                let interventionDate = new Date(item.date_programme).getTime() ;\r\n                return ( interventionDate > endOfDay );\r\n            });\r\n            console.log('newListToday' , newListToday);\r\n            this.setState({\r\n                interventionListUndone : newList,\r\n                interventionListUndoneLate : newListLate,\r\n                interventionListUndoneToday : newListToday,\r\n                interventionListUndoneFuture : newListFuture,\r\n            });\r\n        });\r\n        this.props.socket.on('new intervention' , ()=> {\r\n            console.log('new intervention todolist');\r\n            this.props.socket.emit('get undone intervention');\r\n        });\r\n\r\n        this.props.socket.on('ended intervention' , () => {\r\n            console.log('ended intervention todolist');\r\n            this.props.socket.emit('get undone intervention');\r\n        });\r\n    }\r\n    \r\n    componentDidUpdate () {\r\n        console.log('update toDoList');\r\n    }\r\n\r\n    clickOnToDoList = () => {\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        console.log('ToDoList will unmount');\r\n        this.props.socket.off('list undone intervention');\r\n        \r\n    }\r\n    displayToDo  = (list) => {\r\n        //return list.map( intervention => <ToDo intervention={intervention} key={intervention.num_intervention}/> );\r\n        return list.map( intervention => <Intervention showSub={this.props.showSub} intervention={intervention} key={intervention.num_intervention}/> );\r\n    }\r\n\r\n    render(){\r\n        \r\n        let{\r\n            interventionListUndoneLate,\r\n            interventionListUndoneToday,\r\n            interventionListUndone,\r\n            interventionListUndoneFuture,\r\n        } = this.state;\r\n        let retardTitle = `En retard : ${interventionListUndoneLate.length}`;\r\n        let todayTitle = `Aujourd'hui : ${interventionListUndoneToday.length}`;\r\n        let futureTitle = `A venir : ${interventionListUndoneFuture.length}`;\r\n        let allTitle = `Toutes : ${interventionListUndone.length}`;\r\n        return (\r\n            <div id=\"toDoList\" onClick={this.clickOnToDoList}>\r\n                <p> {this.props.topText || 'Liste des taches a faire :'} </p>\r\n                    <div className=\"scroll_list\">\r\n                        <FoldableDiv title={retardTitle} titleStyle={{color : 'red'}} folded={true}>\r\n                            <div className=\"scroll_list\">\r\n                                    {this.displayToDo(this.state.interventionListUndoneLate)}\r\n                            </div>\r\n                        </FoldableDiv>\r\n                        <FoldableDiv title={todayTitle} >\r\n                            <div className=\"scroll_list\">\r\n                                    {this.displayToDo(this.state.interventionListUndoneToday)}\r\n                            </div>\r\n                        </FoldableDiv>\r\n                        <FoldableDiv title={futureTitle} folded={true}>\r\n                            <div className=\"scroll_list\">\r\n                                    {this.displayToDo(this.state.interventionListUndoneFuture)}\r\n                            </div>\r\n                        </FoldableDiv>\r\n                        <FoldableDiv title={allTitle} folded={true}>\r\n                            <div className=\"scroll_list\">\r\n                                    {this.displayToDo(this.state.interventionListUndone)}\r\n                            </div>\r\n                        </FoldableDiv>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const Urgent = {\r\n    MAX : {\r\n        code : 'MAX',\r\n        libelle : 'tres urgent',\r\n    },\r\n    MID : {\r\n        code : 'MID',\r\n        libelle : 'moyennement urgent',\r\n    },\r\n    MIN : {\r\n        code : 'MIN',\r\n        libelle : 'pas urgent',\r\n    },\r\n}\r\n","import './index.css';\nimport React from 'react';\nimport {Urgent} from './../../urgent.js';\n\nexport default class ToDo extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            detailsAreShown : false ,\n            commandAreShown : false,\n        }\n    }\n    showDetails = () => {\n        if(this.state.commandAreShown) return ;\n        this.setState({\n            detailsAreShown : !(this.state.detailsAreShown),\n        });\n    }\n\n    showCommand = () => {\n        \n        this.setState({\n            commandAreShown : !(this.state.commandAreShown) ,\n            detailsAreShown : !(this.state.commandAreShown),\n        });\n    }\n\n    do = (delai=0) => {\n        let num_notification = this.props.notif.num_notification;\n        let num_app_user_tech_main = this.props.num_user;\n        console.log(`do the notif #${num_notification} ${delai} by ${num_app_user_tech_main}`);\n        this.props.socket.emit('tech_main do' , { num_notification , num_app_user_tech_main , delai });\n\n    }\n    render () {\n        let style;\n        let sumStyle ;\n        let statutStyle ;\n        let detailStyle ;\n        switch(this.props.notif.statut_code){\n            case Urgent.MAX.code :\n                style = {\n                    borderLeft : '3px solid red',\n                    //borderRight : '3px solid red',\n                };\n                statutStyle = {\n                    color : 'red',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MID.code :\n                style = {\n                    borderLeft : '3px solid yellow',\n                    //borderRight : '3px solid yellow',\n                };\n                statutStyle = {\n                    color : 'yellow',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MIN.code :\n                style = {\n                    borderLeft : '3px solid blue',\n                    //borderRight : '2px solid blue',\n                };\n                statutStyle = {\n                    color : 'blue',\n                //    fontWeight : 'bold',\n                }\n                break;\n             default :\n                break;\n        }\n        if(this.state.detailsAreShown || this.state.commandAreShown){\n            detailStyle = {\n                height : \"80%\",\n            };\n            sumStyle = {\n                height : \"15%\",\n            };\n            style = {\n                ...style,\n                height : \"300px\",\n            }\n\n        }\n        return (\n            <div className=\"notif\" style={style} >\n                <div className=\"notif-sum\" style={sumStyle}>\n                    <div className=\"probleme_type\" >\n                        <p> {this.props.notif.probleme_type} </p>\n                        <p> {this.props.notif.code} </p>\n                    </div>\n                    <div className=\"probleme_statut\" style={statutStyle} >\n                        <p> {this.props.notif.statut_libelle} </p>\n                        <p> {this.props.notif.lieu} </p>\n                    </div>\n                    <div className=\"date_envoie\">\n                        <p> Date d'envoie : </p>\n                        <p> {this.props.notif.date_envoie} </p>\n                    </div>\n                    <button onClick={this.showDetails}> Details </button>\n                    <button onClick={this.showCommand}> repondre </button>\n                </div>\n                { this.state.detailsAreShown &&\n                    <div className=\"notif-details\" style={detailStyle}>\n                        <p> Remarque : {this.props.notif.remarque || '-'} </p>\n                        <p> Envoyee par : {this.props.notif.sender_username || '-'} </p>\n                        <p> Details 1 </p>\n                    </div>\n                }\n                {\n                    this.state.commandAreShown &&\n                        <div className=\"notif-command\" >\n                            <button onClick={()=> this.do()}>prendre en charge</button>\n                            <button>faire patienter</button>\n                            <button>ouvrir message</button>\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\n","import './index.css';\r\nimport React from 'react';\r\nimport Notif from './../notif';\r\nimport {Urgent} from './urgent';\r\n\r\n\r\n//affiche notification recues \r\n//historique des notification repondues ??\r\n/*\r\n * props:\r\n *  - setNbNewNotif \r\n */\r\n\r\nexport default class NotifsList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            unansweredNotifsList : [],\r\n        }\r\n    }\r\n    displayNotif  = (list) => {\r\n        return list.map( notif => <Notif notif={notif} key={notif.num_notification} num_user={this.props.session.num_user} socket={this.props.socket}/> );\r\n    }\r\n\r\n    onClickOnNotifsList = () => {\r\n        this.props.nbNewNotificationToZero();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //no more new notif\r\n        this.props.nbNewNotificationToZero();\r\n        //notifs that has num_app_user_tech_main at null\r\n        this.props.socket.emit('get notifs list unanswered');\r\n        this.props.socket.on('unanswered notifs list' , (notifsList) => {\r\n            //\r\n            let newUnansweredNotifsList = notifsList.map( notif => ({\r\n                num_notification : notif.num_notification,\r\n                sender_username : notif.user_sender_username,\r\n                probleme_type : notif.probleme_type,\r\n                probleme_code : notif.code,\r\n                statut_code : notif.statut,\r\n                statut_libelle : notif.statut_libelle,\r\n                lieu : notif.lieu,\r\n                remarque : notif.remarque,\r\n                date_envoie : new Date(notif.date_envoie).toLocaleString('fr-FR'),\r\n                \r\n            }));\r\n            if(this.props.setNbNewNotif) {\r\n                this.props.setNbNewNotif(newUnansweredNotifsList.length);\r\n            }\r\n            this.setState({\r\n                unansweredNotifsList : newUnansweredNotifsList,\r\n            });\r\n        });\r\n\r\n        this.props.socket.on('new notif' , (createdNotif) => {\r\n            //created notif doesn't have the attributes to just do a push :( \r\n            this.props.socket.emit('get notifs list unanswered');\r\n        });\r\n        \r\n        this.props.socket.on('update notifs list unanswered' , () => {\r\n            console.log('update notifs list unanswerd');\r\n            setTimeout( () => {\r\n                this.props.socket.emit('get notifs list unanswered');\r\n            },2000);\r\n        });\r\n    }\r\n    componentWillUnmount = () => {\r\n        console.log('UNMOUNT notifsList');\r\n        this.props.socket.off('unanswered notifs list');\r\n        this.props.socket.off('update notifs list unanswered');\r\n    }\r\n    render(){\r\n        \r\n        return (\r\n            <div id=\"notifsList\" onClick={this.onClickOnNotifsList}>\r\n                <p> Notifications recues {this.props.session.username} </p>\r\n                <div id=\"scroll_list-notifsList\">\r\n                    {this.displayNotif(this.state.unansweredNotifsList)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './dropDown.css';\r\n//for a DropDown\r\n//expect : defaultValue , value and onChange for controlling the component , array for the data in options\r\nclass DropDown extends React.Component {\r\n    render(){\r\n        let array = this.props.array || [] ;\r\n//        console.log( typeof array);\r\n//        console.log('DropDown '+array);\r\n        let optionArray = array.map( item => \r\n            <option\r\n                key= {item}\r\n                value={item} >\r\n            {item}\r\n            </option>\r\n        );\r\n        if( this.props.objArray ){\r\n            optionArray = this.props.objArray.map( item =>\r\n                <option\r\n                    key = { item.key }\r\n                    value = { item.value } >\r\n                { item.libelle }\r\n                </option>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"dropDown\">\r\n                <select defaultValue= {this.props.selectedValue} value={this.props.value} onChange ={(e)=> this.props.onChange(e)} >\r\n                    {optionArray}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropDown;\r\n","import React from 'react';\r\nimport './index.css';\r\n//for a DropDown\r\n//props : \r\n//-defaultValue , \r\n//-value and onChange for controlling the component , \r\n//-array or objArray{key , libelle, value} for the data in options\r\nclass DropDown extends React.Component {\r\n    render(){\r\n        let array = this.props.array || [] ;\r\n//        console.log( typeof array);\r\n//        console.log('DropDown '+array);\r\n        let optionArray = array.map( item => \r\n            <option\r\n                key= {item}\r\n                value={item} >\r\n            {item}\r\n            </option>\r\n        );\r\n        if( this.props.objArray ){\r\n            optionArray = this.props.objArray.map( item =>\r\n                <option\r\n                    key = { item.key }\r\n                    value = { item.value } >\r\n                { item.libelle }\r\n                </option>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"dropDown\">\r\n                <select defaultValue= {this.props.selectedValue} value={this.props.value} onChange ={(e)=> this.props.onChange(e)} >\r\n                    {optionArray}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropDown;\r\n","import './index.css';\nimport React , { Component } from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport Dropdown from './../utils/dropDown';\n\n/*\n * props : -title for foldable title\n * - selectedNumMateriel pour syncro \n * - selectedMaterielType pour syncro\n */\n\nexport default class MaterielSelector extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            materielTypes : [],\n            selectedMaterielType : this.props.selectedMaterielType || '',\n            materielList : [],\n            config : '',\n        }\n        this.materiels = null;\n    }\n    updateMaterielType = (e) => {\n        console.log('updateMaterielType', e.target.value);\n        console.log('this.materiel' , this.materiels);\n        let objMateriel = {\n            num :this.materiels[e.target.value][0].value,\n            type : e.target.value,\n            config : this.state.config,\n        };\n        this.props.changeList(objMateriel);\n        this.setState({\n            selectedMaterielType : e.target.value,\n            materielList : this.materiels[e.target.value],\n        });\n    }\n    updateMateriel = (e) => {\n        console.log('updateMateriel' , e.target.value);\n        let objMateriel = {\n            num : e.target.value,\n            type : this.state.selectedMaterielType,\n            config : this.state.config,\n        };\n        this.props.changeList(objMateriel); \n        //this.setState({\n            //selectedNumMateriel : e.target.value,\n        //});\n    }\n    updateConfig = (e) => {\n        let objMateriel = {\n            num : this.props.selectedNumMateriel,\n            type : this.state.selectedMaterielType,\n            config : e.target.value,\n        };\n        this.props.changeList(objMateriel);\n        this.setState({\n            config : e.target.value,\n        });\n    }\n    componentDidMount(){\n        this.props.socket.emit('get materiel list');\n        this.props.socket.on('materiel list -materielSelector' ,(materiels,materielTypes) => {\n            console.log('materiels', materiels);\n            let materielsList ;\n            \n            for( const type of materielTypes ){\n                \n                materielsList = {\n                    ...materielsList,\n                    [type.libelle_materiel_type] : materiels.filter( item => item.num_materiel_type === type.num_materiel_type).map( item => ({\n                        key : item.num_materiel,\n                        value : item.num_materiel,\n                        libelle : item.libelle_materiel,\n                    })),\n                }\n            }\n            materielTypes = materielTypes.map( item => item.libelle_materiel_type);\n            materielTypes.unshift('nd');\n            console.log('materielsList' , materielsList , materielTypes);\n            this.materiels = materielsList;\n            \n            let selectedMaterielType = this.state.selectedMaterielType;\n            this.setState({\n                materielTypes : materielTypes,\n                materielList : materielsList[selectedMaterielType],\n            });\n            \n        });\n    }\n    componentWillUnmount(){\n       console.log('materielSelector unmount');\n       this.props.socket.off('materiel list -materielSelector'); \n    }\n    render() {\n        let {\n            materielTypes,\n            materielList,\n            config,\n        } = this.state;\n        let {\n            selectedNumMateriel,\n            selectedMaterielType,\n        } = this.props;\n        let {\n            title,\n        } = this.props;\n        return(\n            <div className=\"materielSelector\">\n                <FoldableDiv title={title || 'Materiel'} >\n                    <div className=\"sub-category-option\">\n                        <label> Type materiel: \n                        </label>\n                        <Dropdown value={selectedMaterielType} array = {materielTypes} onChange={this.updateMaterielType}/>\n                    </div>\n                    <div className=\"sub-category-option\">\n                        <label> Materiel: \n                        </label>\n                        <Dropdown value={selectedNumMateriel} objArray = {materielList} onChange={this.updateMateriel}/>\n                    </div>\n                    <div className=\"sub-category-option\">\n                        <label> Note: \n                            <textarea value={config} onChange={this.updateConfig}> </textarea>\n                        </label>\n                    </div>\n                </FoldableDiv>\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React , { useState } from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport MaterielSelector from './../materielSelector';\n/*\n * props:\n * - listMateriel : array;\n * - setListMateriel to change listMateriel\n * - socket \n * - maxListMaterielLength\n * - title \n * - folded\n */\nexport default function MultiMaterielSelector (props){\n    let listMateriel = props.listMateriel;\n     let maxLength = (props.maxListMaterielLength) ? props.maxListMaterielLength : 77;\n    let title = (props.title) ? props.title : \"Selectionner le(s) materiel(s)\";\n    let folded = (props.folded) ? props.folded : false;\n\n    //let [ length , setLength ] = useState(listMateriel.length);\n\n    function changeListMateriel( objValue , index){\n        console.log('changeListMateriel');\n        let newList = listMateriel.slice();\n        newList[index] = objValue;\n        props.setListMateriel(newList);\n    }\n\n    function changeListMaterielLength (newLength){\n        console.log('changeListMaterielLength', newLength);\n        newLength = (newLength < 0) ? 0 : newLength;\n        newLength = (newLength > maxLength) ? maxLength : newLength;\n        \n        let newList = listMateriel.slice();\n        if( newLength > newList.length ){\n            let dLength = newLength - newList.length;\n            console.log('dLength', dLength);\n            for(let i = 0 ; i < dLength ; i ++ ){\n                newList.push({ num: 'nd' , type :'nd'});\n            }\n        }else if( newLength < newList.length ){\n            newList.length = newLength;\n        }\n            props.setListMateriel(newList);\n        //setLength(newLength);\n    }\n\n    console.log('listMateriel before render', listMateriel);\n    let materielElements = listMateriel.map( (materiel,index) => \n        <MaterielSelector \n            key = {index}\n            title = {`Materiel #${index+1}`}\n            socket = {props.socket}\n            changeList = {(obj)=> changeListMateriel(obj,index)}\n            selectedNumMateriel = {materiel.num}\n            selectedMaterielType = {materiel.type}\n            />\n    );\n\n    return(\n        <div className=\"multiMaterielSelector\">\n            <FoldableDiv title={title} folded={folded}>\n                <p> Nombres : {listMateriel.length}</p>\n                <div className=\"scroll_list\">\n                    {materielElements}\n                </div>\n            { (maxLength > 1) &&\n                <>\n                    <button onClick={()=>changeListMaterielLength(listMateriel.length + 1)}> + </button>\n                    <button onClick={()=>changeListMaterielLength(listMateriel.length - 1)}> - </button>\n                </>\n            }\n                \n            </FoldableDiv>\n        </div>\n\n    );\n}\n","import './index.css';\nimport React,{useState } from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport MultiMaterielSelector from './../multiMaterielSelector';\n\n/*\n * props :\n * -num_intervention : to create the decharge on db\n * -socket to query data on materielsSelector\n * -downloadDecharge : method to download\n */\nexport default function InterventionDecharge(props){\n    //materiels are num_materiels\n    let tomorrowDate = new Date(new Date().setDate(new Date().getDate()+1)); \n    let [ materiels , setMateriels ] = useState([{ num:'nd' , type: 'nd'}]);\n    let [ dateDebut , setDateDebut ] = useState(new Date());\n    let [ dateFin , setDateFin ] = useState(tomorrowDate);\n    let {\n        num_decharge\n    } = props;\n    let style ;\n    let control ;\n    let disabled ;\n\n    let title = 'Effectuer un decharge';\n    if(num_decharge){\n        title = `ID decharge : ${num_decharge}` ;\n        style = {\n            ...style,\n            background : '#53d35342',\n        };\n        control = (\n            <button onClick={()=>props.downloadDecharge(num_decharge)}> Telecharger </button>\n        );\n        disabled = true;\n    }else{\n        control = (\n            <button onClick={createDecharge}> Creer </button>\n        );\n    }\n    \n    function updateDateDebut(e) {\n        console.log('updateDateDebut', e.target.value);\n        setDateDebut(new Date(e.target.value));\n    }\n\n    function createDecharge() {\n        let materielsValide = materiels.filter( item => (item.num !== 'nd' && item.type !== 'nd'))\n        console.log('materielsValide', materielsValide);\n        if( materielsValide.length  \n            && dateDebut.getTime() <= dateFin.getTime()\n            && !num_decharge){\n            console.log('createDecharge' , dateDebut , dateFin , materielsValide );\n            let date = {\n                debut : dateDebut,\n                fin : dateFin,\n            };\n            props.socket.emit('create decharge', date , materielsValide);\n        }else{\n            console.log('pas de materiels valide OU date invalide, InterventionDecharge');\n        }\n    }\n\n    console.log('render InterventionDecharge');\n    return(\n        <div className =\"interventionDecharge\" style={style}>\n            <FoldableDiv title={title} folded={true}>\n                <div className=\"decharge-form\">\n                    <label> Debut : \n                    <input \n                        type='date' \n                        value ={formatDate(dateDebut)} \n                        onChange={updateDateDebut} \n                        disabled={disabled}\n                        />\n                    </label>\n                    <label> Fin : \n                    <input \n                        type='date' \n                        value={formatDate(dateFin)} \n                        onChange={(e)=> setDateFin(new Date(e.target.value))}\n                        disabled={disabled}\n                        />\n                    </label>\n                    <MultiMaterielSelector \n                        socket = {props.socket}\n                        listMateriel = {materiels}\n                        setListMateriel = {setMateriels}\n                        />\n                    {control}\n                </div>\n            </FoldableDiv>\n        </div>\n    );\n}\n\nfunction formatDate (date) {\n    let day = `${date.getDate()}`;\n    let month = `${date.getMonth() +1}`;\n    let year = date.getFullYear();\n    month = (month.length < 2) ? '0'+month : month;\n    day = (day.length < 2) ? '0'+day : day;\n    return `${year}-${month}-${day}`;\n}\n\n//function downloadDecharge(num_decharge){\n//    //open route /decharge/num_decharge/ in a new tab\n//    //alert('downloadDecharge', num_decharge);\n//    const URL = '/acim/decharge';\n//    window.open(URL ,  '_blank');\n//}\n","import './index.css';\nimport React , {Component} from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport Dropdown from './../../utils/dropDown';\nimport InterventionDecharge from './../interventionDecharge';\n\nexport default class CreateIntervention extends Component {\n    constructor(props){\n        super(props);\n\n        let supposedFreeHours = new Date().getHours() + 1;\n        this.state = {\n            interventionTypeList : [],\n            selectedNumInterventionType : '',\n            dateProgramme : new Date( new Date().setHours(supposedFreeHours,0,0)).toISOString(),//localTime\n            dateProgrammeDisplay : new Date(new Date().setHours((supposedFreeHours+3),0,0,0)).toISOString().replace('Z',''),//UTC : localTime - 3 , display consider its input to be localtime and tries to change it to UTC \n            lieuList : [],\n            selectedNumLieu : '',\n            materielList : [],\n            selectedNumMateriel : '',\n            materielTypes : [],\n            selectedMaterielType : '',\n            motif : 'ND',\n            problemeList : [] ,\n            selectedNumProblemeTechType : '',\n            message : '',\n            num_intervention_pere : '',//initialized by route here\n        }\n        this.materiels = null;\n        this.lieus = null;\n        this.problemeTechTypes= null ;\n    }\n    updateTypeIntervention = (e) => {\n        console.log('update type intervention', e.target.value);\n        let newNumInterventionType = e.target.value;\n        this.setState({\n            selectedNumInterventionType : newNumInterventionType,\n        });\n    }\n    updateDateProgramme = (e) =>{\n        console.log('updateDateProgramme ' ,new Date(e.target.value));\n        let newDateProgramme = new Date(e.target.value);\n        this.setState({\n            dateProgramme : newDateProgramme,\n            dateProgrammeDisplay : e.target.value,\n        });\n    }\n    updateLieu = (e, motif) => {\n        console.log('update lieu', e.target.value);\n        console.log(motif);\n        let newNumLieu = e.target.value;\n        this.setState({\n            selectedNumLieu : newNumLieu,\n        });\n    }\n    updateMaterielType = (e) => {\n        console.log('updateMaterielType', e.target.value);\n        console.log('this.materiel' , this.materiels);\n        this.setState({\n            selectedMaterielType : e.target.value,\n            materielList : this.materiels[e.target.value],\n        });\n    }\n    updateMateriel = (e) => {\n        console.log('updateMateriel' , e.target.value);\n        this.setState({\n            selectedNumMateriel : e.target.value,\n        });\n    }\n\n    updateMotif = (e) => {\n        console.log('update motif', e.target.value);\n        this.setState({\n            motif : e.target.value,\n        });\n    }\n\n    //also used in update of Lieu because we need to update the motif at the same time\n    //but update lieu is still there in case we want to revert\n    updateProbleme = (e, numLieu) => {\n        console.log('update probleme', e.target.value);\n        console.log(this.problemeTechTypes);\n        //change motif to 'resoudre probleme : type -- lieu '\n        let type = this.problemeTechTypes[e.target.value];\n        let lieu;\n        let newMotif;\n        let newNumLieu = (numLieu) ? numLieu : this.state.selectedNumLieu ;\n        lieu = this.lieus[newNumLieu];\n        if(type){\n            newMotif = `Resoudre probleme : ${type} -- ${lieu}`;\n        }else{\n            newMotif = this.state.motif;\n        }\n        \n        console.log('motif', newMotif);\n        this.setState({\n            motif : newMotif, \n            selectedNumProblemeTechType : e.target.value || '',\n            selectedNumLieu : newNumLieu,\n        });\n    }\n\n\n\n    createIntervention = () => {\n        let {\n            selectedNumInterventionType ,\n            dateProgramme,\n            selectedNumLieu,\n            selectedNumProblemeTechType,\n            selectedNumMateriel,\n            motif,\n            num_intervention_pere,\n        } = this.state;\n        let code_intervention_type = '';//we use numInterventionType\n        //must be there : numInterventionType , numLieu , date_programme , \n        if( selectedNumInterventionType && selectedNumLieu && dateProgramme ) {\n            //send the 'create intervention'\n            console.log( 'create intervention : ' , selectedNumInterventionType ,code_intervention_type,  selectedNumLieu,  dateProgramme,motif, selectedNumMateriel,selectedNumProblemeTechType,num_intervention_pere);\n            this.props.socket.emit('create intervention', selectedNumInterventionType , code_intervention_type , selectedNumLieu , dateProgramme , motif , selectedNumMateriel,selectedNumProblemeTechType,num_intervention_pere);\n            this.setState({\n                message : 'intervention Creer lance',\n            });\n        }else{\n            this.setState({\n                message : 'selectionner un type d\\'intervention, un lieu et une date programmée',\n            });\n        }\n        \n    }\n\n    componentDidMount () {\n        console.log('createIntervention did mount');\n        //get the data : type_intervention\n        this.props.socket.emit('get intervention definition');\n\n        this.props.socket.on('intervention_type list' , (intervention_types) => {\n            console.log(' intervention_types ' ,intervention_types);\n            let newInterventionList = intervention_types.map( type => ({\n                key : type.num_intervention_type,\n                value : type.num_intervention_type,\n                libelle : type.libelle_intervention_type,\n            }));\n            let newSelectedNumInterventionType = newInterventionList[0].key;\n            if( this.props.location.state ){\n                if ( this.props.location.state.num_intervention_type ){\n                    newSelectedNumInterventionType = this.props.location.state.num_intervention_type;\n                }\n            }\n            this.setState({\n                interventionTypeList : newInterventionList,\n                selectedNumInterventionType : newSelectedNumInterventionType,\n            });\n        });\n        \n        this.props.socket.on('lieu list' , (lieus) =>{\n            console.log('lieus' , lieus );\n            for( const lieu of lieus){\n                this.lieus = {\n                    ...this.lieus,\n                    [lieu.num_lieu] : [lieu.libelle],\n                }\n            }\n            let newLieuList = lieus.map( lieu => ({\n                key : lieu.num_lieu,\n                value : lieu.num_lieu,\n                libelle : lieu.libelle,\n            }));\n            this.setState({\n                lieuList : newLieuList,\n                selectedNumLieu : newLieuList[0].value,\n            });\n        });\n\n        this.props.socket.on('materiel list' ,(materiels,materielTypes) => {\n            console.log('materiels', materiels);\n            let materielsList ;\n            \n            for( const type of materielTypes ){\n                \n                materielsList = {\n                    ...materielsList,\n                    [type.libelle_materiel_type] : materiels.filter( item => item.num_materiel_type === type.num_materiel_type).map( item => ({\n                        key : item.num_materiel,\n                        value : item.num_materiel,\n                        libelle : item.libelle_materiel,\n                    })),\n                }\n            }\n            materielTypes = materielTypes.map( item => item.libelle_materiel_type);\n            console.log('materielsList' , materielsList , materielTypes);\n            this.materiels = materielsList;\n            this.setState({\n                materielTypes : materielTypes,\n                selectedMaterielType : materielTypes[0],\n                materielList : materielsList[materielTypes[0]],\n            });\n            \n        });\n\n        this.props.socket.on('probleme_tech_type list', (probleme_tech_types) => {\n            console.log('probleme_tech_types', probleme_tech_types);\n            for(const probleme_tech_type of probleme_tech_types){\n                this.problemeTechTypes = {\n                    ...this.problemeTechTypes ,\n                    [probleme_tech_type.num_probleme_tech_type] : probleme_tech_type.libelle_probleme_tech_type,\n                }\n            }\n            let newProblemeList = probleme_tech_types.map( blem => ({\n                key : blem.num_probleme_tech_type,\n                value : blem.num_probleme_tech_type,\n                libelle : blem.libelle_probleme_tech_type,\n            }));\n            this.setState({\n                problemeList : newProblemeList,\n            });\n        });\n\n        this.props.socket.on('new intervention', (intervention) => {\n            let {\n                num_intervention,\n            } = intervention;\n            console.log('new intervention createIntervention');\n            this.setState({\n                message : `Intervention ${num_intervention} créée.`\n            });\n        });\n\n        if(this.props.location.state){\n            this.setState({\n                num_intervention_pere : this.props.location.state.num_intervention_pere,\n                selectedNumInterventionType : this.props.location.state.num_intervention_type,\n            });\n        }\n\n\n    }\n\n    componentWillUnmount () {\n        this.props.socket.off('intervention_type list');\n        this.props.socket.off('lieu list');\n        this.props.socket.off('materiel list');\n        this.props.socket.off('probleme_tech_type list');\n    }\n    render(){\n        let {\n            interventionTypeList,\n            selectedNumInterventionType,\n            lieuList,\n            selectedNumLieu,\n            materielList ,\n            selectedNumMateriel,\n            materielTypes,\n            selectedMaterielType,\n            motif,\n            selectedNumProblemeTechType,\n            problemeList,\n            message,\n            num_intervention_pere,\n        } = this.state;\n        return (\n            <div className=\"createIntervention\">\n                <p> Créer une intervention :</p>\n                { num_intervention_pere &&\n                    <p> Suite de l'intervention : {num_intervention_pere} </p> \n                }\n                <div className=\"scroll-option\">\n                    <FoldableDiv title=\"Intervention\" folded={false}>\n                        <div className=\"sub-category-option\">\n                            <label> Type Intervention : \n                            </label>\n                            <Dropdown value={selectedNumInterventionType} objArray = {interventionTypeList} onChange={this.updateTypeIntervention}/>\n                        </div>\n                        <div className=\"sub-category-option\">\n                            <label> Date programmée : \n                            </label>\n                            <input type=\"datetime-local\" value={this.state.dateProgrammeDisplay} onChange={this.updateDateProgramme}/>\n                        </div>\n                        <div className=\"sub-category-option\">\n                            <label> Lieu : \n                            </label>\n                            <Dropdown \n                                value={selectedNumLieu} \n                                objArray = {lieuList} \n                                onChange={\n                                    (e)=> {\n                                        this.updateProbleme({target:{value : selectedNumProblemeTechType}} , e.target.value);\n                                    }\n                                }\n                            />\n                        </div>\n                    </FoldableDiv>\n                    <FoldableDiv title=\"Materiel\" folded={true}>\n                        <div className=\"sub-category-option\">\n                            <label> Type materiel: \n                            </label>\n                            <Dropdown value={selectedMaterielType} array = {materielTypes} onChange={this.updateMaterielType}/>\n                        </div>\n                        <div className=\"sub-category-option\">\n                            <label> Materiel: \n                            </label>\n                            <Dropdown value={selectedNumMateriel} objArray = {materielList} onChange={this.updateMateriel}/>\n                        </div>\n                    </FoldableDiv>\n                    <FoldableDiv title=\"Motif\" folded={true}>\n                        <div className=\"sub-category-option\">\n                            <label> Motif :\n                            </label>\n                            <textarea value={motif} onChange={this.updateMotif}></textarea>\n                        </div>\n                        <FoldableDiv title=\"Probleme\" folded={true}>\n                            <div className=\"sub-category-option\">\n                                <label> Type du probleme:\n                                </label>\n                                <Dropdown value={selectedNumProblemeTechType} objArray = {problemeList} onChange={this.updateProbleme}/>\n                            </div>\n                            <div className=\"sub-category-option\">\n                                <label> Lieu : \n                                </label>\n                                <Dropdown value={selectedNumLieu} objArray = {lieuList} onChange={(e) => {  this.updateProbleme({target:{value: selectedNumProblemeTechType}},e.target.value); }}/>\n                            </div>\n                        </FoldableDiv>\n                    </FoldableDiv>\n                </div>\n                <button onClick={this.createIntervention} > Planifier </button>\n                <p> {message} </p>\n            </div>\n        );\n    }\n}\n\n","import './index.css';\r\nimport React from 'react';\r\nimport { NavLink , Switch , Route ,Redirect} from 'react-router-dom';\r\nimport ToDoList from './../toDoList';\r\nimport NotifsList from './../notifsList';\r\nimport CreateIntervention from './../createIntervention';\r\n\r\nexport default class Dashboard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            nbInterventionUndone : 0,\r\n            nbNewNotification: 0,\r\n        }\r\n    }\r\n\r\n\r\n    nbInterventionUndonePlus = (nb) => {\r\n        console.log('nbInterventionUndonePlus' ,nb)\r\n        //let newNb = nb || this.state.nbInterventionUndone + 1 ;\r\n        let newNb = nb;\r\n        newNb = parseInt(newNb);\r\n        this.setState({\r\n            nbInterventionUndone : newNb,\r\n        });\r\n    }\r\n    nbNewNotificationPlus = (nb) => {\r\n        console.log('nbNewNotificationPlus' ,nb)\r\n        //let newNb = nb || this.state.nbNewNotification + 1 ;\r\n        let newNb = nb;\r\n        newNb = parseInt(newNb);\r\n        this.setState({\r\n            nbNewNotification : newNb,\r\n        });\r\n    }\r\n    componentDidMount= () => {\r\n        console.log('DASHBOARD did mount');\r\n        this.props.socket.emit('get nb intervention undone');\r\n        this.props.socket.on('nb intervention undone', (nb) => {\r\n            console.log('nb intervention undone');\r\n            this.setState({\r\n                nbInterventionUndone : nb,\r\n            });\r\n        });\r\n\r\n        this.props.socket.on('new intervention', () => {\r\n            console.log('new intervention dashboard');\r\n            this.props.socket.emit('get nb intervention undone');\r\n        });\r\n\r\n        this.props.socket.on('ended intervention', () => {\r\n            console.log(' ended intervention dashboard');\r\n            this.props.socket.emit('get nb intervention undone');\r\n        });\r\n      \r\n\r\n\r\n        \r\n    }\r\n    \r\n    componentWillUnmount = () => {\r\n        //this.props.socket.off('new notif');\r\n     \r\n        this.props.socket.off('nb intervention undone');\r\n        this.props.socket.off('new intervention ');\r\n        this.props.socket.off('ended intervention');\r\n        this.props.socket.off('materiel list');\r\n    }\r\n    render() {\r\n        let { path , url } = this.props.match;\r\n        let mainDashboardStyle ;\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <div className=\"main-dashboard\" style={mainDashboardStyle}>\r\n                    <nav id=\"nav_dashboard\">\r\n                        <NavLink activeClassName=\"active_navLink_dashboard\" to={`${url}/toDo`}> Interventions a faire {(this.state.nbInterventionUndone > 0) ? `(${this.state.nbInterventionUndone})`:''} </NavLink>\r\n                        <NavLink activeClassName=\"active_navLink_dashboard\" to={`${url}/notifs`}> Notifications {(this.state.nbNewNotification > 0) ? `(${this.state.nbNewNotification})`:''}</NavLink>\r\n                        <NavLink activeClassName=\"active_navLink_dashboard\" to={`${url}/creer`}> Creer </NavLink>\r\n                    </nav>\r\n                    <div id=\"display_dashboard\">\r\n                        <Switch>\r\n                            <Redirect exact from={path} to={`${path}/toDo`} />\r\n                            <Route path={`${path}/toDo`} render = {\r\n                                (routeProps) => <ToDoList \r\n                                                    setNbInterventionUndone={this.nbInterventionUndonePlus}\r\n                                                    {...routeProps} \r\n                                                    {...this.props} />\r\n                             }/>\r\n\r\n                            <Route path={`${path}/notifs`} render = {\r\n                                (routeProps) => <NotifsList  {...routeProps} {...this.props} setNbNewNotif = {this.nbNewNotificationPlus} />\r\n                            }/>\r\n\r\n                            <Route path={`${path}/creer`} render = {\r\n                                (routeProps) => <CreateIntervention {...routeProps} {...this.props} />\r\n                            }/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import './index.css';\nimport React from 'react';\nimport { Urgent } from './../../urgent.js';\n\nexport default class NotifHistoryTech extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            detailsAreShown : false ,\n        }\n    }\n    showDetails = () => {\n        this.setState({\n            detailsAreShown : !(this.state.detailsAreShown),\n        });\n    }\n    render () {\n        let style;\n        let sumStyle ;\n        let statutStyle ;\n        let detailStyle ;\n        switch(this.props.notif.statut_code){\n            case Urgent.MAX.code :\n                style = {\n                    borderLeft : '3px solid red',\n                    //borderRight : '3px solid red',\n                };\n                statutStyle = {\n                    //background : 'red',\n                    color : 'red',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MID.code :\n                style = {\n                    borderLeft : '3px solid yellow',\n                    //borderRight : '3px solid yellow',\n                };\n                statutStyle = {\n                    //background : 'yellow',\n                    color : 'yellow',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MIN.code :\n                style = {\n                    borderLeft : '3px solid blue',\n                    //borderRight : '2px solid blue',\n                };\n                statutStyle = {\n                    //background : 'blue',\n                    color : 'blue',\n\n                }\n                break;\n             default :\n                break;\n        }\n        if(this.state.detailsAreShown){\n            detailStyle = {\n                height : \"80%\",\n            };\n            sumStyle = {\n                height : \"15%\",\n            };\n            style = {\n                ...style,\n                height : \"300px\",\n            }\n\n        }\n        if(this.props.notif.num_app_user_tech_main && this.props.notif.date_reponse){\n            style = {\n                ...style,\n                background : '#a9c8f7',\n            }\n        }\n        return (\n            <div className=\"notif_history\" style={style} >\n                <div className=\"notif_history-sum\" style={sumStyle}>\n                    <div className=\"probleme_type\" >\n                        <p> {this.props.notif.probleme_type} </p>\n                        <p> {this.props.notif.code} </p>\n                    </div>\n                    <div className=\"probleme_statut\" style={statutStyle}>\n                        <p> {this.props.notif.statut_libelle} </p>\n                        <p> {this.props.notif.lieu} </p>\n                    </div>\n                    <div className=\"user_sender_username\">\n                        <p> par : {this.props.notif.user_sender_username} </p>\n                    </div>\n                    <div className=\"date_envoie\">\n                        <p> Date d'envoie : </p>\n                        <p> {this.props.notif.date_envoie} </p>\n                    </div>\n                    <button onClick={this.showDetails}> Details </button>\n                </div>\n                { this.state.detailsAreShown &&\n                    <div className=\"notif-details\" style={detailStyle}>\n                        <p> remarque: {this.props.notif.remarque} </p>\n                        <p> envoyee par : {this.props.notif.user_sender_username} </p>\n                        <p> pris en charge par : {this.props.notif.tech_main_username}  </p>\n                        <p> repondue le : {this.props.notif.date_reponse} </p>\n                        <p> ID notification : {this.props.notif.num_notification} </p>\n                        <p> Details 1 </p>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React from 'react';\nimport NotifHistoryTech from './../notifHistoryTech';\nimport DropDown from './../../utils/dropDown';\n\nexport default class NotifsHistory extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            notifsTab : [],\n            usersList : [],\n            selectedUser : 'all',\n        }\n    }\n    componentDidMount = async () => {\n        console.log(' NOTIFSHISTORY did mount ');\n        this.props.socket.emit('get notifs history');\n        this.props.socket.on('notifs history' , (notifsTab) => {\n            console.log('notification history for tech_main' , notifsTab);\n            let newNotifsTab = notifsTab.map( notif => ({\n\n                ...notif,\n                statut_code : notif.statut,\n                statut_libelle : notif.statut_libelle,\n                remarque : notif.remarque || '-' ,\n                date_envoie : new Date(notif.date_envoie).toLocaleString('fr-FR'),\n                tech_main_username : notif.tech_main_username || '-',\n                date_reponse : (notif.date_reponse) ? new Date(notif.date_reponse).toLocaleString('fr-FR') : '-' ,\n            }));\n            console.log('newNotifsTab' , newNotifsTab);\n            this.setState({\n                notifsTab : newNotifsTab,\n            });\n        });\n        this.props.socket.emit('get users list');\n        this.props.socket.on('users list' , (usersList) => {\n            console.log('users list' , usersList );\n            usersList.push({ num_user : 0 , username : 'all'});\n            this.setState({\n                usersList : usersList,\n            });\n        });\n    }\n\n    componentDidUpdate = () => {\n        console.log('NOTIFSHISTORY update');\n    }\n\n    updateSelectedUser = (e) => {\n        //alert('user selected is ' +e.target.value );\n        if ( e.target.value !== 'all' ) this.props.socket.emit('get notifs history', e.target.value);\n        else this.props.socket.emit('get notifs history');\n        this.setState({\n            selectedUser : e.target.value,\n        });\n    }\n\n    componentWillUnmount = () => {\n        this.props.socket.off('notifs history');\n        this.props.socket.off('users list');\n    }\n    showNotifs = (notifsTab) => {\n        return (\n            notifsTab.map( notif => \n                <NotifHistoryTech key={notif.num_notification} notif={notif} />\n            )\n        );\n    }\n    render (){ \n        let usersOption = this.state.usersList.map( user => \n            //<option value={user.num_user} key={user.num_user}> {user.username} </option>\n            ({\n                key : user.num_user ,\n                value : user.num_user ,\n                libelle : user.username,\n            })\n        );\n                        //<select value={this.state.selectedUser} defaultValue={this.state.usersList[this.state.usersList.length - 1 ]} onChange={this.updateSelectedUser}>\n                            //{usersOption}\n                        //</select>\n        return (\n            <div className = \"notifsHistory\" > \n                <div className=\"notifsHistory-select\">\n                    <p> Historiques des notifications envoyer par :  \n                    </p>\n                    <DropDown objArray={usersOption}  value={this.state.selectedUser} onChange={this.updateSelectedUser} />\n                </div>\n                <div className=\"notifsHistory-list\">\n                    { this.showNotifs(this.state.notifsTab) }\n                </div>\n            </div>\n        );\n    }\n}\n\n","import './index.css';\nimport React , { Component } from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport DropDown from './../utils/dropDown';\n/*\n * prop : \n * - onChangeProblemeTechType : when we change the probleme tech type\n * - numProblemeTechType :\n * - onChangeLieu :\n * - numLieu\n * - onChangeRemarque :\n * - remarque\n * - socket\n * - problemeTechTypeArray\n * - LieuArray\n * \n */\n\nexport default class ProblemeConstate extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            problemeTechTypeArray : [],\n            lieuArray : [],\n        }\n    }\n    componentDidMount () {\n        console.log('probleme constate mounted');\n        this.props.socket.emit('get probleme_tech_type list');\n        this.props.socket.emit('get lieu list');\n\n        this.props.socket.on('probleme_tech_type list -problemeTechConstate' , (probleme_tech_types) => {\n\n            console.log('probleme_tech_types list',probleme_tech_types);\n            let newProblemeList = probleme_tech_types.map( blem => ({\n                key : blem.num_probleme_tech_type,\n                value : blem.num_probleme_tech_type,\n                libelle : blem.libelle_probleme_tech_type,\n            }));\n            newProblemeList.unshift({\n                key : 'nd',\n                value :'nd',\n                libelle : 'nd',\n            });\n            this.setState({\n                problemeTechTypeArray : newProblemeList,\n            });\n\n        });\n\n        this.props.socket.on('lieu list -problemeTechConstate' , (lieus) => {\n            console.log('lieus' , lieus );\n            let newLieuList = lieus.map( lieu => ({\n                key : lieu.num_lieu,\n                value : lieu.num_lieu,\n                libelle : lieu.libelle,\n            }));\n            newLieuList.unshift({\n                key : 'nd',\n                value :'nd',\n                libelle : 'nd',\n            });\n            this.setState({\n                lieuArray : newLieuList,\n            });\n        });\n    }\n\n    componentWillUnmount () {\n        console.log('ProblemeTechConstate unmount');\n        this.props.socket.off('probleme_tech_type list -problemeTechConstate');\n        this.props.socket.off('lieu list -problemeTechConstate');\n    }\n    \n    render () {\n        let {\n            numProblemeTechType,\n            numLieu,\n            remarque,\n            onChangeProblemeTechType,\n            onChangeLieu,\n            onChangeRemarque,\n        } = this.props;\n        let {\n            problemeTechTypeArray,\n            lieuArray,\n        } = this.state;\n        return (\n            <div className=\"problemeTechConstate\">\n                <FoldableDiv title=\"Probleme constaté\" folded={true}>\n                    <DropDown objArray={problemeTechTypeArray} value={numProblemeTechType} onChange={onChangeProblemeTechType}/>\n                    <DropDown objArray={lieuArray} value={numLieu} onChange={onChangeLieu}/>\n                    <textarea placeholder=\"Remarque\" value={remarque} onChange={onChangeRemarque}>\n                    </textarea>\n                    \n                </FoldableDiv>\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React, {useState} from 'react';\nimport FoldableDiv from './../foldableDiv';\n\n/*\n * props :\n * - log : <string>; \n * - updateLog \n */\nexport default function InterventionLog (props) {\n    let etapes =(props.log) ? props.log.split(';') : [''];\n    //change size of etapes depending nbEtapes and etapes\n\n    function changeEtapesLength (e,newLength) {\n        e.preventDefault();\n        if ( newLength > etapes.length ){\n            for( let i = 0 , dE = newLength - etapes.length ; i < dE ; i ++) {\n                etapes.push('');\n            }\n        }else if ( newLength < etapes.length ) {\n            etapes.length = newLength;\n        }\n        props.updateLog( etapes.join(';'));\n    }\n    \n\n    function changeEtape (newEtape,index){\n        console.log('change Etapes', index);\n        let newEtapes = etapes.slice();\n        newEtapes[index] = newEtape;\n        props.updateLog( newEtapes.join(';'));\n    };\n    console.log('etapes before render' , etapes);\n    let logElements = etapes.map( (etape,index) => \n        <input value={etape} placeholder={`etape #${index+1}`} key={index} onChange={(e)=>changeEtape(e.target.value,index)}/>\n    );\n    \n    return (\n        <div className=\"interventionLog\">\n            <FoldableDiv title=\"Log\" folded={true}>\n                <form onSubmit={ (e)=>changeEtapesLength(e,etapes.length + 1) } >\n                    {logElements}\n                    <button onClick={(e)=>changeEtapesLength(e,etapes.length + 1)}> + </button>\n                    <button onClick={(e)=>changeEtapesLength(e,etapes.length - 1)}> - </button>\n                </form>\n            </FoldableDiv>\n        </div>\n    );\n}\n\n\n","import './index.css';\nimport React from 'react';\nimport FoldableDiv from './../foldableDiv';\nimport ProblemeTechConstate from './../problemeTechConstate';\nimport InterventionLog from './../interventionLog';\nimport InterventionDecharge from './../interventionDecharge';\nimport MultiMaterielSelector from './../multiMaterielSelector';\n\nexport default class InterventionPage extends React.Component  {\n    constructor(props){\n        super(props);\n        this.state ={\n            techMainIsAuth : false,\n            num_intervention : this.props.num_intervention,\n            intervention : {},\n            pwd : '',\n            selectedNumProblemeTechType: 'nd',\n            selectedNumLieu : 'nd',\n            remarque : '',\n            log : 'etape1 ; etape2; etape3;',\n            num_decharge : '',\n            materiels : [{num:'nd' , type:'nd'}],//only one but to adapt to multiMaterielSelector way of things we use an array\n        }\n    }\n    updateMateriel = (newMateriels) => {\n        this.setState({\n            materiels : newMateriels,\n        });\n\n    };\n    updateProblemeTechType = (e) => {\n        let newNumProblemeTechType = e.target.value;\n        this.setState({\n            selectedNumProblemeTechType : newNumProblemeTechType,\n        });\n    }\n    updateLieu = (e) => {\n        let newNumLieu = e.target.value;\n        this.setState({\n            selectedNumLieu : newNumLieu,\n        });\n    }\n    updateRemarque = (e) => {\n        let newRemarque = e.target.value;\n        this.setState({\n            remarque : newRemarque,\n        });\n    }\n    updateLog = (newLog) => {\n        this.setState({\n            log : newLog,\n        });\n    }\n    updatePwd = (e) => {\n        let newPwd = e.target.value;\n        this.setState({\n            pwd : newPwd,\n        })\n    }\n    authenticate = (e) => {\n        e.preventDefault();\n        let pwd = this.state.pwd;\n        //alert( 'is password for tech_main_creator of num_intervention'+ this.props.num_intervention+' this '+pwd); \n        if (pwd) {\n            this.props.socket.emit('authenticate intervention tech_main' , this.state.num_intervention , pwd);\n        }\n    }\n    startIntervention = () => {\n       let {    num_intervention} = this.state.intervention;\n        console.log('start intervention');\n        if( this.state.techMainIsAuth ) {\n            this.props.socket.emit('start intervention' , num_intervention );\n        }\n    }\n    endIntervention = (resolu = false) => {\n       let {    num_intervention,\n                date_debut } = this.state.intervention;\n        if (!date_debut) {\n            console.log('pas de date de debut mais problem OK');\n        }\n        console.log('resolu' , resolu);\n        console.log('end intervention');\n        if( this.state.techMainIsAuth ) {\n            this.props.socket.emit('end intervention' , num_intervention  , resolu , date_debut);\n        }\n    }\n    updateIntervention = () => {\n        let {\n            num_intervention,\n        } = this.state.intervention;\n        let {\n            log,\n            selectedNumProblemeTechType,\n            selectedNumLieu,\n            remarque,\n            num_decharge,\n            materiels,\n        } = this.state;\n        console.log('updateIntervention', num_intervention , log , selectedNumProblemeTechType ,selectedNumLieu);\n        let isInput = log ||(selectedNumProblemeTechType !== 'nd' && selectedNumLieu !== 'nd') ; \n        if( num_intervention ){\n            if( log ) {\n                console.log('emit udpdate intervention info log');\n                this.props.socket.emit('update intervention info log' , num_intervention ,log);\n            }\n            if( selectedNumProblemeTechType !== 'nd' && selectedNumLieu !== 'nd'){\n                console.log('emit update intervention info probleme_tech');\n                let probleme_constate = {\n                    num_probleme_tech_type : selectedNumProblemeTechType,\n                    num_lieu : selectedNumLieu,\n                    remarque ,\n                }\n                this.props.socket.emit('update intervention info probleme_tech' , num_intervention , probleme_constate);\n            }\n            if(num_decharge){\n                console.log('emit update decharge intervention');\n                this.props.socket.emit('update decharge intervention' , num_decharge , num_intervention);\n            }\n            if(materiels.length > 0 \n                && !( materiels.filter(item => item.num === 'nd').length > 0 ) ){\n                console.log('emit update intervention info num_materiel');\n                this.props.socket.emit('update intervention info num_materiel', num_intervention , materiels[0].num);\n            }\n        } \n    }\n\n    openCreateIntervention = () => {\n        this.props.closeSub();\n        let state = {\n            num_intervention_pere : this.state.num_intervention,\n            num_intervention_type : 'a768355e-3cd2-497c-b579-d4e184b61298'//suite_int id\n        };\n        this.props.history.push('/acim/dashboard/creer',state);\n    }\n\n    getDecharge = (num_decharge) => {\n        //get the server url , \n        const s_URL = new URL(document.location.href);\n        //may not need to change port\n        const m_path = `/pdf/acim/decharge/${num_decharge}`\n        s_URL.port = 3500;\n        s_URL.pathname = m_path;\n        console.log('s_URL',s_URL);\n        window.open(s_URL, '_blank');\n    }\n    componentDidMount () {\n        console.log('intervention page mounted');\n        console.log(this.props.socket);\n        this.props.socket.emit('get intervention data' , this.props.num_intervention);\n        this.props.socket.on('intervention data',(intervention) => {\n            console.log('intervention data', intervention);\n\n            this.setState({\n                intervention : intervention ,\n                log : intervention.log,\n                num_decharge : intervention.num_decharge,\n            });\n        });\n\n        this.props.socket.on('tech_main is authenticated', (num_intervention) => {\n            if( num_intervention === this.state.num_intervention ){\n                console.log('tech is auth to true');\n                this.setState({\n                    techMainIsAuth : true,\n                    pwd : '',\n                });\n            }\n        });\n\n        this.props.socket.on('started intervention', (intervention) => {\n            console.log('intervention started ' , intervention.num_intervention , intervention.date_debut);\n            if ( this.state.num_intervention === intervention.num_intervention ){\n                this.setState({\n                    intervention : intervention,\n                });\n            }\n\n        });\n        \n        this.props.socket.on('ended intervention interventionPage', (intervention) => {\n            console.log('intervention ended ' , intervention.num_intervention , intervention.date_debut);\n            if ( this.state.num_intervention === intervention.num_intervention ){\n                this.setState({\n                    intervention : intervention,\n                });\n            }\n\n        });\n\n        this.props.socket.on('new decharge' , (newDecharge) => {\n            let {\n                num_decharge\n            } = newDecharge;\n            this.setState({\n                num_decharge : num_decharge,\n            });\n        });\n\n    }\n    \n    componentDidUpdate(){\n        console.log('intervention page updated' , this.props.num_intervention);\n        if( this.props.num_intervention !== this.state.num_intervention ) {\n            this.props.socket.emit('get intervention data' , this.props.num_intervention);\n            let newIntervention ;\n            if( !this.props.num_intervention ) newIntervention = {};\n            else newIntervention = this.state.intervention ;\n            this.setState({\n                num_intervention : this.props.num_intervention,\n                techMainIsAuth : false,\n                intervention : newIntervention,\n                num_decharge : '',\n                \n            });\n        }\n        \n    }\n    componentWillUnmount(){\n        console.log('interventionPage unmount');\n        this.props.socket.off('intervention data');\n        this.props.socket.off('tech_main is authenticated');\n        this.props.socket.off('started intervention');\n        //this.props.socket.off('probleme_tech_type list');\n        //this.props.socket.off('lieu list');\n        this.props.socket.off('new decharge');\n    }\n    render () {\n        \n        let {\n            tech_main_username,\n            libelle_intervention_type,\n            motif,\n            libelle_lieu,\n            date_programme,\n            date_debut,\n            date_fin,\n            done,\n            probleme_resolu,\n            libelle_probleme_tech_type,//if there is\n            log : log_info,//if there is\n            lieu_probleme_tech,\n            num_decharge : num_decharge_info,\n            num_materiel,\n            libelle_materiel ,\n            libelle_materiel_type ,\n            children,\n            num_intervention_pere,\n        }   = this.state.intervention;\n        let log_info_tab , log_info_elements;\n        if( log_info ) {\n            log_info_tab = log_info.split(';');\n            log_info_elements = log_info_tab.map( (etape,index) => \n                <li key = {index}>{etape}</li>\n            );\n        }\n        \n        let {\n            selectedNumProblemeTechType,\n            selectedNumLieu,\n            remarque,\n            log,\n            num_decharge,\n            materiels,\n        }   = this.state;\n        \n        let {\n            style,\n            closeSub,\n        }   = this.props;\n        if (date_debut) date_debut = new Date(date_debut).toLocaleString('fr-FR');\n        if (date_programme) date_programme = new Date(date_programme).toLocaleString('fr-FR');\n        if( date_fin ) date_fin = new Date(date_fin).toLocaleString('fr-FR');\n        let { num_intervention } = this.props;\n        let display ;\n        let control = (\n            <>\n                { !date_debut &&\n                    <button onClick={this.startIntervention}> Commencer </button>\n                }\n                {  !done &&\n                        <button onClick={() => this.endIntervention()}> Terminer </button>\n                }\n                {  !probleme_resolu &&\n                        <button onClick={() => this.endIntervention(true)}> Terminé & Résolu </button>\n                }\n                { !probleme_resolu && done && this.props.match.path === '/acim' &&\n                        <button onClick={this.openCreateIntervention}> Creer une intervention suite </button>\n                }\n            </>\n        );\n        console.log('children' , children);\n        let childButton;\n        if( children){\n            childButton = children.map( child => \n                <li key={child.num_intervention}>\n                    Intervention #<button onClick={()=> this.props.showSub(child.num_intervention)}> {child.num_intervention} </button>\n                </li>\n            );\n        }\n        if( this.state.techMainIsAuth ) {\n            let info;\n            info = (\n                <>\n                    { num_intervention_pere &&\n                        <p> { `Suite de l'intervention : ` }   \n                            <button onClick={()=> this.props.showSub(num_intervention_pere)}> {num_intervention_pere} </button>\n                        </p>\n                    }\n                    <p> Type : {libelle_intervention_type} </p> \n                    <p> Motif : {motif} </p>\n                    <p> Lieu : {libelle_lieu} </p>\n                    <p> Faite par : {tech_main_username} </p>\n                    <p> Programme le : {date_programme} </p>\n                    <p> Debutee le : {date_debut} </p>\n                    <p> Terminee le : {date_fin} </p>\n                    { libelle_probleme_tech_type &&\n                        <p> Probleme constaté : { libelle_probleme_tech_type } -- {lieu_probleme_tech} </p>\n                    }\n                    { log_info && \n                        <p>\n                             {`${(log_info_tab.length > 1)? 'Etapes suivies' : 'Etape suivie'}`} : \n                             {log_info_elements} \n                        </p>\n                    }\n                    { num_decharge_info &&\n                        <p>\n                            ID decharge : <button onClick={()=> this.getDecharge(num_decharge_info)}> {num_decharge_info} </button>\n                        </p>\n                    }\n                    { num_materiel &&\n                            <p>\n                            Intervention sur : {libelle_materiel_type} -- {libelle_materiel}\n                            </p>\n                    }\n                    <p> Probleme resolue : { (probleme_resolu) ? 'OUI' : 'NON' } </p>\n                    { children.length > 0 &&\n                            <p>\n                               Suite : {childButton} \n                            </p>\n                    }\n                </>\n            );\n            display = (\n                <>\n                    <div className=\"intervention-form\">\n                        <FoldableDiv title=\"INFO\">\n                            {info}\n                        </FoldableDiv>\n                        <div className=\"intervention-modifier\">\n                            <FoldableDiv title=\"Modifier\" folded={true}>\n                                <ProblemeTechConstate \n                                    numProblemeTechType = {selectedNumProblemeTechType}\n                                    numLieu = {selectedNumLieu}\n                                    remarque = {remarque}\n                                    onChangeProblemeTechType = {this.updateProblemeTechType}\n                                    onChangeLieu = {this.updateLieu}\n                                    onChangeRemarque = {this.updateRemarque}\n                                    socket = {this.props.socket} \n                                    />\n                                <InterventionLog \n                                    log = {log}\n                                    updateLog = {this.updateLog}\n                                    />\n                                    <MultiMaterielSelector\n                                        socket = {this.props.socket}\n                                        listMateriel = {materiels}\n                                        setListMateriel = {this.updateMateriel}\n                                        maxListMaterielLength = {1}\n                                        title=\"Objet de l'intervention\"\n                                        folded={true}\n                                        />\n                                <InterventionDecharge\n                                    socket = {this.props.socket}\n                                    num_intervention = {num_intervention}\n                                    num_decharge = {num_decharge}\n                                    downloadDecharge = {this.getDecharge}\n                                    />\n                                <button onClick={this.updateIntervention}> Sauvergarder </button>\n                            </FoldableDiv>\n                        </div>\n                    </div>\n                    <div className=\"intervention-control\">\n                        {control}\n                    </div>\n                </>\n            );\n        }else{\n            display = (\n                <form onSubmit={this.authenticate}>\n                    <input type=\"password\" placeholder={`mot de passe de ${tech_main_username}`}  value={this.state.pwd} onChange={this.updatePwd}/>\n                    <button onClick={this.authenticate}> Valider </button>\n                </form>\n            );\n        }\n        return(\n            <div className=\"interventionPage\" style={style}>\n                <div className=\"interventionPage-title\">\n                    <button onClick={closeSub}> {'x'} </button>\n                    <p> Intervention </p>\n                </div>\n                <p> ID intervention  : {num_intervention} </p>\n                <div className=\"intervention-display\">\n                    {display}\n                </div>\n            </div>\n        );\n    }\n}\n","\nexport function formatDate (date) {\n    let day = `${date.getDate()}`;\n    let month = `${date.getMonth() +1}`;\n    let year = date.getFullYear();\n    month = (month.length < 2) ? '0'+month : month;\n    day = (day.length < 2) ? '0'+day : day;\n    return `${year}-${month}-${day}`;\n}\n\nconst func = {\n    formatDate,\n};\nexport default func;\n","import './index.css';\nimport React , {Component} from 'react';\nimport { formatDate } from './../../functions';\nimport DropDown from './../utils/dropDown';\n\n/*\n * props: - setTechMain \n * - setDebut\n * - setFin\n * - setStatut\n * - setnumIntervention\n * - setInterventionType\n * - socket : for initialization\n * - tech_main,\n * - date_debut,\n * - date_fin,\n * - statut,\n * - num_intervention\n * _ numInterventionType\n */\n\nexport default class InterventionHistoryControl extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            tech_mainList : [],\n            statutList : [\n                {key : 0,\n                value : 0,\n                libelle : 'nd'},\n                { key : 1,\n                value : 1,\n                libelle : 'non-effectuée', },\n                { key : 2,\n                  value : 2,\n                  libelle : 'effectuée-résolue'},\n                { key : 3,\n                  value : 3,\n                  libelle : 'effectuée-non-résolue'},\n            ],\n            interventionTypes : [],\n        };\n        this.techMains = {};\n        //this.intervType = {}; //correspondance num_intervention et libelle\n        this.statuts = {\n            0 : {\n                done : 'nd',\n                probleme_resolu : 'nd',\n            },\n            1 : {\n                done : false,\n                probleme_resolu : false,\n            },\n            2 : {\n                done : true,\n                probleme_resolu : true,\n            },\n            3 : {\n                done : true,\n                probleme_resolu : false,\n            },\n        };\n    }\n    updateTechMain = (e) => {\n        console.log('updateTechMain', e.target.value);\n        console.log(this.techMains[e.target.value]);\n        let username = this.techMains[e.target.value];\n        this.props.setTechMain({ num : e.target.value , username : username });\n    }\n    updateDateDebut = (e) => {\n        console.log('updateDateDebut',new Date(e.target.value));\n        let newDebut = new Date(new Date(e.target.value).setHours(0,0,0));\n        this.props.setDateDebut(newDebut);\n    }\n\n    updateDateFin = (e) => {\n        console.log('updateDateFin',new Date(e.target.value));\n        let newFin = new Date(new Date(e.target.value).setHours(23,59,59));\n        this.props.setDateFin(newFin);\n    }\n\n    updateStatut = (e) => {\n        console.log('updateStatut' , e.target.value);\n        let newStatut = this.statuts[e.target.value];\n        this.props.setStatut(newStatut);\n\n    }\n\n    updateNumIntervention = (e) => {\n        console.log('updateNumIntervention' , e.target.value);\n        this.props.setNumIntervention(e.target.value);\n    }\n\n    updateNumInterventionType = (e) => {\n        console.log('updateNumInterventionType',e.target.value);\n        this.props.setNumInterventionType(e.target.value);\n    }\n\n    componentDidMount(){\n        this.props.socket.emit('get tech_mains list');\n        this.props.socket.on('tech_mains list' , (tech_mainList)=>{\n            console.log('tech_mains list');\n            let newTech_mainList = tech_mainList.map( tech => ({\n                key : tech.num_user,\n                libelle : tech.username,\n                value : tech.num_user,\n            }));\n            for(const tech of newTech_mainList){\n                this.techMains = {\n                    ...this.techMains,\n                    [tech.key] : tech.libelle,\n                }\n            }\n            this.techMains = {\n                ...this.techMains,\n                nd : 'nd',\n            }\n            newTech_mainList.unshift({key: 'nd' , libelle : 'nd' , value : 'nd'});\n            console.log('newTech_mainList' , newTech_mainList);\n            this.setState({\n                tech_mainList : newTech_mainList,\n            });\n\n        });\n        this.props.socket.emit('get intervention type');\n        this.props.socket.on('intervention_type list -interventionHistoryControl',(interventionTypes)=>{\n            let newInterventionTypes = interventionTypes.map( item => ({\n                key : item.num_intervention_type,\n                libelle : item.libelle_intervention_type,\n                value : item.num_intervention_type,\n            }));\n            newInterventionTypes.unshift({key: 'nd' , libelle : 'nd' , value : 'nd'});\n            this.setState({\n                interventionTypes : newInterventionTypes,\n            });\n\n        });\n    }\n\n    componentWillUnmount(){\n        console.log('interventionHistoryControl unmount');\n        this.props.socket.off('tech_mains list');\n        this.props.socket.off('intervention_type list -interventionHistoryControl');\n    }\n\n    render(){\n        let {\n            tech_main,\n            date_debut,\n            date_fin,\n            statut,\n            num_intervention,\n            num_intervention_type,\n        } = this.props;\n        let {\n            tech_mainList,\n            statutList,\n            interventionTypes,\n        } = this.state;\n        let statutValue  = 1;\n        if(statut.done){\n            if(statut.done === 'nd'){\n                statutValue = 0;\n            }else{\n                if(statut.probleme_resolu){\n                    statutValue = 2;\n                }else{\n                    statutValue = 3;\n                }\n            }\n        }\n        return(\n            <div className=\"interventionHistoryControl\">\n                <div className=\"sub-control\">\n                    <p> Technicien : </p>\n                    <DropDown \n                        value = {tech_main.num}\n                        onChange = {this.updateTechMain}\n                        objArray = {tech_mainList}\n                        />\n                </div>\n                <div className=\"sub-control\">\n                    <p> Programmé du: </p>\n                    <input type=\"date\" \n                        value = {formatDate(date_debut)} \n                        onChange = {this.updateDateDebut}/>\n                </div>\n                <div className=\"sub-control\">\n                    <p> au: </p>\n                    <input type=\"date\"\n                            value = {formatDate(date_fin)}\n                            onChange = {this.updateDateFin}/>\n                </div>\n                <div className=\"sub-control\">\n                    <p> status : </p>\n                    <DropDown \n                        value = {statutValue}\n                        onChange = {this.updateStatut}\n                        objArray = {statutList}\n                        />\n                </div>\n                <div className=\"sub-control\">\n                    <p> {`Type d'intervention :`} </p>\n                    <DropDown \n                        value = {num_intervention_type}\n                        onChange = {this.updateNumInterventionType}\n                        objArray = {interventionTypes}\n                        />\n                </div>\n                <div className=\"sub-control\">\n                    <p> ID : </p>\n                    <input\n                        placeholder = \"Recherche par ID\"\n                        value = {num_intervention}\n                        onChange = {this.updateNumIntervention}\n                        />\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React , {Component} from 'react';\nimport Intervention from './../intervention';\n\n/*\n * props :\n * -tech_main_username\n * -date_debut\n * -date_fin\n * -statut\n */\n\nexport default class InterventionHistoryAffichage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            interventions: [],\n        }\n    }\n    displayInterventions = (list) => {\n        return list.map( item => <Intervention key={item.num_intervention} intervention={item} showSub={this.props.showSub} />);\n    };\n    render(){\n        let {\n            tech_main_username,\n            statut,\n            date_debut,\n            date_fin,\n            interventions,\n        } = this.props;\n        let statut_text;\n        let date_text;\n        let tech_main_username_text;\n        if(statut.done){\n            if(statut.done === 'nd') statut_text = ``;\n            else statut_text = `Effectuée -- ${(statut.probleme_resolu)? 'Résolu':'Non-résolu'}`;\n        }else{\n            //if not done then not resolu\n            statut_text = `Non-effectué`;\n        }\n        if(date_fin === date_debut){\n            date_text = date_fin;\n        }else{\n            date_text = `${date_debut} - ${date_fin}`;\n        }\n        if( tech_main_username !== 'nd' ) {\n            tech_main_username_text = `par ${tech_main_username}`;\n        }else{\n            tech_main_username_text = '';\n\n        }\n        return(\n            <div className=\"interventionHistoryAffichage\">\n                <div className=\"interventionHistoryAffichage-text\">\n                    <p> Intervention {statut_text}  {tech_main_username_text}</p>\n                    <p> du {date_text}</p>\n                    <p> Nombre : {interventions.length} </p>\n                </div>\n                <div className=\"scroll_list\">\n                    {this.displayInterventions(interventions)}\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React, {Component} from 'react';\nimport InterventionHistoryControl from './../interventionHistoryControl';\nimport InterventionHistoryAffichage from './../interventionHistoryAffichage';\n\n\n\nexport default class InterventionHistory extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            tech_main : { num: 'nd' , username : 'nd'},\n            date_debut :new Date(new Date().setFullYear(2020,0,1)) ,\n            date_fin : new Date(new Date().setHours(23,59,59)),\n            statut :{ done : 'nd' , probleme_resolu : 'nd'},\n            interventionList : [],\n            num_intervention : '',//no nd cause we add % and then it is not nd\n            num_intervention_type : 'nd',\n        };\n    }\n    setTechMain = (tech) => {\n        console.log('setTechMain', tech);\n        \n        this.setState({\n            tech_main : tech,\n        });\n    }\n    setDateDebut = (debut) => {\n        //debut must be a new Date()\n        console.log('setDateDebut', debut);\n        if(debut.getTime() > this.state.date_fin.getTime()) debut = this.state.date_fin;\n        \n        this.setState({\n            date_debut : debut,\n        });\n    }\n    setDateFin = (fin) => {\n        console.log('setDateFin', fin);\n        if(fin.getTime() < this.state.date_debut.getTime()) fin = this.state.date_debut;\n        this.setState({\n            date_fin : fin,\n        });\n    }\n    setStatut = (st) => {\n        console.log('setStatut' , st);\n        this.setState({\n            statut : st,\n        });\n    }\n\n    setNumIntervention = (num) => {\n        this.setState({\n            num_intervention : num,\n        });\n    }\n\n    setNumInterventionType = (num) => {\n        this.setState({\n            num_intervention_type : num,\n        });\n    }\n    componentDidUpdate (prevProps,prevState) {\n        //console.log('prevState', prevState);\n        if(prevState.date_debut.getTime() !== this.state.date_debut.getTime()\n            || prevState.date_fin.getTime() !== this.state.date_fin.getTime()\n            || prevState.tech_main.num !== this.state.tech_main.num\n            || prevState.statut.done !== this.state.statut.done\n            || prevState.statut.probleme_resolu !== this.state.statut.probleme_resolu\n            || prevState.num_intervention !== this.state.num_intervention\n            || prevState.num_intervention_type !== this.state.num_intervention_type\n        ){\n            console.log('emit again');\n            let num_intervention;\n            if(this.state.num_interevnetion !== 'nd'){\n                //add '%' for the LIKE comparisson\n                num_intervention = `%${this.state.num_intervention}%`;\n            }\n            this.props.socket.emit('get intervention history', this.state.tech_main.num,this.state.date_debut , this.state.date_fin , this.state.statut , this.state.num_intervention_type ,num_intervention);\n        }\n    };\n    componentDidMount(){\n       console.log('intervention History Mounted');\n       let {\n           tech_main,\n           date_fin,\n           statut,\n       } = this.state;\n       this.props.socket.emit('get intervention history', tech_main.num ,null , date_fin , statut,null , null);\n        //num_intervention use LIKE %...%\n       this.props.socket.emit('get oldest intervention date');\n        this.props.socket.on('oldest intervention date', (minDate) => {\n            this.setState({\n                date_debut : new Date(minDate),\n            });\n        });\n        this.props.socket.on('intervention history', (interventions ) => {\n            console.log('intervention history', interventions );\n            let newInterventionList = interventions.map( (item, index)=> ({\n                num_intervention : item.num_intervention,\n                num_intervention_pere : item.num_intervention_pere,\n                date_programme : item.date_programme,\n                libelle_lieu : item.libelle_lieu,\n                libelle_intervention_type : item.libelle_intervention_type,\n                tech_main_username : item.tech_main_username,\n                motif : item.motif,\n                numero : index + 1,\n                done : item.done,\n                probleme_resolu : item.probleme_resolu,\n                libelle_probleme_tech_type : item.libelle_probleme_tech_type,\n                code_intervention_type : item.code_intervention_type,\n                children : item.children,\n            }));\n            console.log('newInterventionList' , newInterventionList);\n\n\n            this.setState({\n                interventionList : newInterventionList,\n            });\n        });\n\n    }\n    componentWillUnmount(){\n        this.props.socket.off('intervention history');\n        this.props.socket.off('oldest intervention date');\n    }\n\n    render(){\n        let {\n            tech_main,\n            statut,\n            date_debut,\n            date_fin,\n            interventionList,\n            num_intervention,\n            num_intervention_type,\n        } = this.state;\n        return (\n            <div className=\"interventionHistory\">\n                <div className=\"side-InterventionHistory\">\n                    <InterventionHistoryControl\n                        socket={this.props.socket}\n                        tech_main={tech_main}\n                        setTechMain={this.setTechMain}\n                        date_debut={date_debut}\n                        date_fin={date_fin}\n                        setDateDebut={this.setDateDebut}\n                        setDateFin={this.setDateFin}\n                        statut={statut}\n                        setStatut={this.setStatut}\n                        num_intervention = {this.state.num_intervention}\n                        setNumIntervention = {this.setNumIntervention}\n                        num_intervention_type = {num_intervention_type} \n                        setNumInterventionType = {this.setNumInterventionType}\n                        />\n                        \n                </div>\n                <InterventionHistoryAffichage \n                    tech_main_username = {tech_main.username}\n                    date_debut = {date_debut.toLocaleDateString()}\n                    date_fin = {date_fin.toLocaleDateString()}\n                    interventions = {interventionList}\n                    statut={statut}\n                    showSub={this.props.showSub}\n                    />\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React, {Component} from 'react';\n\n/*\n * props:\n * - socket\n * - setSelectedUser\n * - selectedUser\n */\n\nexport default class ActiveUsers extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            connectedList : [],\n            allUserList : [],\n        };\n    }\n\n    updateSelectedNumUser = (user) => {\n        console.log('updateSelectedNumUser' , user);\n        this.props.setSelectedUser(user);\n    }\n\n    componentDidMount () {\n        console.log('ActiveUsers mounted');\n        this.props.socket.emit('get tech_mains list');\n        this.props.socket.emit('get list tech_main connected');\n\n        this.props.socket.on('tech_mains list -activeUsers',(tech_mains)=>{\n            console.log('tech_mains list -activeUsers', tech_mains);\n            // { num_user , username , num_type_user}\n            tech_mains.sort((a,b) => {\n                if ( a.num_user === this.props.session.num_user ) return -1;\n            });\n            this.setState({\n                allUserList : tech_mains,\n            });\n        });\n\n        this.props.socket.on('tech_main connected list -activeUsers', (connected_tech_mains) => {\n            console.log('tech_main connected list -activeUsers', connected_tech_mains);\n            //connected_tech_mains [num_app_user]\n            this.setState({\n                connectedList : connected_tech_mains,\n            });\n            //update the active of the selectedUser\n            let newSelectedUser = { ... this.props.selectedUser};\n            newSelectedUser.active = connected_tech_mains.includes(this.props.selectedUser.num_user);\n            this.updateSelectedNumUser(newSelectedUser);\n        });\n\n        this.props.socket.on('new message -activeUsers', (newMs) => {\n            console.log('new message -activeUsers');\n            this.props.socket.emit('get tech_mains list');\n        });\n    }\n\n    componentWillUnmount () {\n        console.log('ActiveUsers unmounted');\n        this.props.socket.off('tech_mains list -activeUsers');\n        this.props.socket.off('tech_main connected list -activeUsers');\n    }\n\n\n    render () {\n        let {\n            allUserList ,\n            connectedList,\n        } = this.state;\n        let {\n            session,\n            selectedUser,\n        } = this.props;\n        let elements = allUserList.map( user =>{\n            let active = connectedList.includes( user.num_user );\n            let selected = ( user.num_user === selectedUser.num_user );\n            user.active = active;\n            console.log( user.username , active);\n            return(\n                <UserListItem  \n                    isSelf = { session.num_user === user.num_user }\n                    key={user.num_user} \n                    username={user.username} \n                    nbNewMessage = {user.nbNewMessage}\n                    active={user.active}\n                    selected = {selected}\n                    onClick={()=> this.updateSelectedNumUser(user) }/>\n            );\n        });\n        return (\n            <div className=\"activeUsers\">\n                <div className = \"scroll_list\">\n                    {elements}\n                </div>\n            </div>\n        );\n    }\n}\n                //<div className=\"header-activeUsers\">\n                //    <p> Moi : {session.username} </p>\n                //</div>\n\nfunction UserListItem (props) {\n    let {\n        username ,\n        active ,\n        selected ,\n        isSelf,\n        nbNewMessage,\n    } = props;\n    /*\n     * props:\n     * - username\n     * - onClick\n     * - active : if online or not\n     * - selected :\n     */\n    let style;\n    let pStyle;\n    if(selected){\n        style = {\n            borderBottom : '1px solid red',\n            background : 'white',\n        };\n    }else{\n        style = {\n        };\n    }\n    if(active){\n        pStyle = {\n            borderRight : '5px solid green',\n        };\n    }else{\n        pStyle = {\n            borderRight : '5px solid red',\n        }\n    }\n    return(\n        <div className=\"userListItem\" style={style}>\n            <p onClick={props.onClick} style={pStyle}> \n                {username} {(nbNewMessage > 0) ? `(${nbNewMessage})` : ''}\n                {(isSelf) ? `(moi)`:'' } <span className=\"statut-userListItem\">{(active) ? 'connecté' : 'non-connecté'}</span>\n            </p>\n        </div>\n    );\n}\n","import './index.css';\nimport React , { Component } from 'react';\nimport { v4 as uuidV4 } from 'uuid';\n\n/*\n * props:\n * - socket\n * - selectedUser(num_user, username , num_type_user)\n * - session\n * - setNbNewMessageToZero\n */\n\nexport default class MessageRoom extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            messages : [{ id : 'abab' ,\n                            sent : true,\n                            time_sent : new Date().toLocaleString(),\n                            contenu : 'contenu',\n                            to : 'destinataire',\n                            from : 'envoyeur',\n                          },],\n            newContenu : '',\n            active : this.props.selectedUser.active,\n        };\n        this.myScroll = React.createRef();\n    }\n\n    updateContenu = (e) => {\n        //console.log('updateContenu', e.target.value);\n        this.setState({\n            newContenu : e.target.value,\n        });\n    }\n\n    sendMessage = (e) => {\n        console.log('send message');\n        e.preventDefault();\n        let {\n            session,\n            selectedUser,\n        } = this.props;\n        let {\n            newContenu,\n            messages,\n        } = this.state;\n        if( this.state.newContenu && this.props.session && this.props.selectedUser.num_user){\n            let id = uuidV4();\n            console.log('id' , id)\n            let newMessageDisplay = {\n                id : id,\n                sent : false,\n                time_sent : '',\n                contenu : newContenu,\n                to : selectedUser.username,\n                from : session.username,\n            };\n            let newMessage = {\n                id : newMessageDisplay.id,\n                contenu : newContenu,\n                num_sender : session.num_user,\n                receivers : [ selectedUser.num_user ],\n            };\n            console.log('emit(send message)', newMessage);\n            \n            this.props.socket.emit('send message' , newMessage);\n            let newMessages = messages.slice();\n            newMessages.push(newMessageDisplay);\n            this.setState({\n                messages : newMessages,\n\n            });\n\n        }\n    }\n\n    scrollDown = () => {\n        const scroll = this.myScroll.current;\n        scroll.scrollTop = scroll.scrollHeight;\n    }\n\n    componentDidUpdate (prevProps , prevState){\n        if( prevProps.selectedUser.num_user !== this.props.selectedUser.num_user ) {\n            console.log('emit again');\n            this.props.socket.emit('get messages', this.props.session.num_user , this.props.selectedUser.num_user );\n        }\n    }\n\n    componentDidMount () {\n        console.log('MessageRoom mounted');\n        \n        if( this.props.selectedUser.num_user ) this.props.socket.emit('get messages', this.props.session.num_user , this.props.selectedUser.num_user );\n\n        \n        this.props.socket.on('message sent -messageRoom', (ms) => {\n            console.log('message sent -messageRoom', ms);\n            this.props.socket.emit('get tech_mains list');//update nb new message in activeUsers\n            let newMessages = this.state.messages.map(item => {\n                if (item.id === ms.num_message ) return { ... item , sent : true ,time_sent : new Date(ms.date_envoie).toLocaleString() };\n                else return item;\n            });\n            //if no ms yet in messages\n            if( !this.state.messages.find( msIn => msIn.id === ms.num_message) ) {\n                newMessages.push({ \n                    id : ms.num_message , \n                    sent : true,\n                    time_sent : new Date(ms.date_envoie).toLocaleString() ,\n                    contenu : ms.contenu_message ,\n                    from : ms.envoyeur_username ,\n                    to : ms.recepteur_username,\n                });\n            } \n            //console.log('newMessages',newMessages);\n            this.setState({\n                messages : newMessages,\n                newContenu : '',\n            });\n            this.scrollDown();\n        });\n\n        this.props.socket.on('messages -messageRoom', (messages)=>{\n            console.log('messages -messageRoom',messages);\n            if(messages){\n                let newMessages = messages.map( ms => {\n                    let seen = false;\n                    if( ms.date_reception ) {\n                        ms.date_reception = new Date( ms.date_reception ).toLocaleString('FR-fr');\n                        seen = true;\n                    }\n                    return ({\n                        id : ms.num_message ,\n                        sent : true,\n                        time_sent : new Date(ms.date_envoie).toLocaleString(),\n                        time_seen : ms.date_reception,\n                        seen,\n                        contenu : ms.contenu_message,\n                        to : ms.recepteur_username,\n                        from : ms.envoyeur_username,\n                    });\n                });\n                console.log('newMessages +' , newMessages);\n                this.setState({\n                    messages : newMessages,\n                });\n                this.scrollDown();\n                this.clickOnMessageRoom();\n            }\n\n        });\n\n        this.props.socket.on('new message -messageRoom' , (ms) => {\n            console.log('new message -messageRoom', ms);\n            let {\n                selectedUser,\n                session,\n            } = this.props;\n            this.props.socket.emit('get tech_mains list');//update nb new message in activeUsers\n            \n            if( this.props.selectedUser.num_user === ms.num_app_user_envoyeur){\n                let newMs = {\n                    id : ms.num_message,\n                    time_sent : new Date(ms.date_envoie).toLocaleString(),\n                    contenu : ms.contenu_message,\n                    sent : true,\n                    tim_seen : ms.date_reception,\n                    seen : false,\n                    from : ms.envoyeur_username,\n                    to : ms.recepteur_username,\n                };\n                console.log(newMs);\n                let newMessages = this.state.messages.slice();\n                newMessages.push(newMs);\n                this.setState({\n                    messages : newMessages,\n                });\n                this.scrollDown();\n            }\n        });\n\n        this.props.socket.on('updateMessages -messageRoom', (updatedMessages) => {\n            console.log('updateMessage -messageRoom' , updatedMessages);\n            let newMessages = this.state.messages.slice();\n            let updatedMessagesId = updatedMessages.map( ms => ms.num_message);\n            console.log('updatedMessagesId' , updatedMessagesId);\n            //update the message with the id = num_message\n            newMessages = newMessages.map( ms =>{\n                let indexInUpdateMessage = updatedMessagesId.findIndex(id => id === ms.id);//assuming that updateMessagesId maps perfectly updateMessage\n                console.log('indexInUpdateMessage', indexInUpdateMessage);\n                if( indexInUpdateMessage !== -1 ){\n                    let seen = !!(updatedMessages[indexInUpdateMessage].date_reception);\n                    return ({\n                        ... ms,\n                        time_seen : new Date(updatedMessages[indexInUpdateMessage].date_reception).toLocaleString('fr-FR'),\n                        seen,\n                    });\n                }else{\n                    return ms;\n                }\n            });\n\n            console.log('newMessages' , newMessages);\n            this.props.socket.emit('get nb new message', this.props.session.num_user);//update nb new message of main\n            this.props.socket.emit('get tech_mains list');\n            this.setState({\n                messages : newMessages,\n            });\n        });\n    }\n\n    \n\n    componentWillUnmount () {\n        console.log('MessageRoom unmount');\n        this.props.socket.off('message sent -messageRoom');\n        this.props.socket.off('messages -messageRoom');\n        this.props.socket.off('new message -messageRoom');\n        this.props.socket.off('updateMessages -messageRoom');\n    }\n\n    clickOnMessageRoom = () => {\n        console.log('clickOnMessageRoom');\n        //make all message seen;\n        console.log('clickOnMessageRoom state.message', this.state.messages);\n        let unseenMessagesByMe = this.state.messages.filter( ms => !ms.seen && !ms.time_seen && ms.to === this.props.session.username );\n        console.log('unseenMessagesByMe', unseenMessagesByMe);\n        if( unseenMessagesByMe.length > 0) this.props.socket.emit('tech_main saw messages', unseenMessagesByMe);\n    };\n\n    render () {\n        let {\n            messages,\n            newContenu,\n        } = this.state;\n        let {\n            selectedUser,\n            session,\n        } = this.props;\n\n        let messagesElements = messages.map( ms => \n            <MessageElement key={ms.id}\n                message = {ms}\n                session = {session}\n                />\n        );\n        let display;\n        if(selectedUser.num_user){\n            display = (\n                <>\n                    <div className= \"header-messageRoom\">\n                        <p> {selectedUser.username} {(selectedUser.active) ? '[connecté]' : '[non-connecté]' } </p>\n                    </div>\n                    <div className= \"main-messageRoom\">\n                        <div className=\"scroll_list\" ref={this.myScroll}>\n                            {messagesElements}\n                        </div>\n                        <div className=\"input-messageRoom\">\n                            <form onSubmit={this.sendMessage}>\n                                <input value = {newContenu} type=\"text\" placeholder=\"Ecrire ici\" onChange={this.updateContenu} />\n                                <button onClick={this.sendMessage}> envoyer </button>\n                            </form>\n                        </div>\n                    </div>\n                </>\n            );\n\n        }else{\n            display = (\n                    <div className= \"header-messageRoom\">\n                        <p> aucun technicien selectionné </p>\n                    </div>\n            );\n        }\n        \n        return (\n            <div className= \"messageRoom\" onClick={this.clickOnMessageRoom}>\n                { display }\n            </div>\n        );\n    }\n}\n\nfunction MessageElement (props) {\n    /*\n     * props:\n     * - ms { id , contenu , to , from ,sent , time_sent }\n     * - session\n     */\n    let {\n        message,\n        session,\n    } = props;\n    let isSelf = (session.username === message.from);\n    let style ;\n    let divStyle ;\n    let display;\n    let fromDisplay = (\n            <p className=\"from-message\"> {message.from} : </p>\n    );\n    let indication = (\n        <div className=\"indication-message\">\n            <p> { (message.sent) ? `envoyé le ${message.time_sent}` : '' } </p>\n            <p> { (message.seen) ? `reçue le ${message.time_seen}` : 'non-reçue' } </p>\n        </div>\n    );\n    let contenu = (diStyle) => (\n        <div  className=\"contenu-message\" style={divStyle}>\n            {fromDisplay}\n            <p> {message.contenu}  </p>\n        </div>\n    );\n    if(isSelf){\n        //is Me\n        style = {\n            color : 'red',\n            justifyContent : 'flex-end',\n        };\n        divStyle = {\n            margin : '5px 0 5px 5px',\n            borderLeft : '1px solid grey',\n        }\n        display = (\n            <>\n                {indication}\n                {contenu(divStyle)}\n            </>\n        );\n\n    }else{\n        //not Me\n        style = {\n            color : 'black',\n            justifyContent : 'flex-start',\n        };\n        divStyle = {\n            margin : '5px 5px 5px 0',\n            borderRight : '1px solid grey',\n        }\n        display = (\n            <>\n                {contenu(divStyle)}\n                {indication}\n            </>\n        );\n    }\n    return (\n        <div className =\"messageElement\" style={style}>\n            {display}\n        </div>\n    );\n}\n","import './index.css';\nimport React , {useState} from 'react';\nimport ActiveUsers from './../activeUsers';\nimport MessageRoom from './../messageRoom';\n/*\n * props :\n * - socket : for getting data\n * - session: to identify self\n * - setNbNewMessageToZero :\n */\n\nexport default function MessagePage(props) {\n    let selectedUserFromState;\n    if( props.location.state && props.location.state.num_user && props.location.state.username ){\n        //setSelected_app_user_recepteur(props.match.location\n        //setSelected_app_user_recepteur({ ... props.location.state , active : true });\n        selectedUserFromState = { ... props.location.state , active : true};\n    }else{\n        selectedUserFromState = {};\n    }\n    let [selected_app_user_recepteur, setSelected_app_user_recepteur] = useState(selectedUserFromState);\n\n    return(\n        <div className=\"messagePage\">\n            <div className =\"side-messagePage\">\n                <ActiveUsers \n                    socket = {props.socket} \n                    session = {props.session}\n                    setSelectedUser = {setSelected_app_user_recepteur}\n                    selectedUser = {selected_app_user_recepteur}/>\n            </div>\n            <div className=\"main-messagePage\">\n                <MessageRoom \n                    socket={props.socket}\n                    selectedUser = {selected_app_user_recepteur}\n                    session={props.session}\n                    setNbNewMessageToZero={props.setNbNewMessageToZero}/>\n            </div>\n        </div>\n    );\n}\n","import './index.css';\r\nimport React from 'react';\r\nimport {  Switch , Route , Redirect, NavLink   } from 'react-router-dom'; \r\nimport { mySocket } from './../../socket_io/socket_io';\r\nimport Dashboard from './../dashboard';\r\nimport NotifsHistory from './../notifsHistory';\r\nimport ToDoList from './../toDoList';\r\nimport InterventionPage from './../interventionPage';\r\nimport InterventionHistory from './../interventionHistory';\r\nimport MessagePage from './../messagePage';\r\n\r\n\r\nexport default class Main extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            newNotifs : [\r\n                //{\r\n                    //num_notification : 'dede',\r\n                    //date_envoie : new Date().toLocaleString(),\r\n                    //probleme_type : 'prb_type',\r\n                    //probleme_statut : 'xxx',\r\n                    //probleme_statut_code : 'MAX',\r\n                    //lieu :'salle xxx',\r\n                //},\r\n            ],\r\n            nbNewNotification : 0,\r\n            nbNewMessage :0,\r\n            showSub : false,\r\n            numSelectedIntervention : null,\r\n            newMessageNotifs : [\r\n                //{\r\n                //    date_envoie: 'date_envoie',\r\n                //    envoyeur_username : 'from',\r\n                //    num_app_user_envoyeur : 'num_from',\r\n                //    num_message : 'num',\r\n                //},\r\n            ],\r\n        };\r\n        this.socket = mySocket.socket;\r\n        this.popUp = React.createRef();\r\n        this.popUpMessage = React.createRef();\r\n    }\r\n\r\n    showSub  = (num_intervention) => {\r\n        let newShowSub;\r\n        if( this.state.numSelectedIntervention === num_intervention ){\r\n            //selected intervention hasn't change\r\n            newShowSub = !(this.state.showSub);\r\n            num_intervention = null;\r\n\r\n        }else newShowSub = true;\r\n        this.setState({\r\n            showSub : newShowSub,\r\n            numSelectedIntervention : num_intervention,\r\n        });\r\n    }\r\n    closeSub = () => {\r\n        this.setState({\r\n            showSub : false,\r\n        });\r\n    }\r\n    nbNewNotificationPlus = (nb) => {\r\n        let newNb = nb || this.state.nbNewNotification + 1;\r\n        newNb = parseInt(newNb);\r\n        this.setState({\r\n            nbNewNotification : newNb,\r\n        });\r\n    }\r\n\r\n    setNbNewMessage = (nb) => {\r\n        let newNb = parseInt(nb)\r\n        this.setState({\r\n            nbNewMessage : newNb,\r\n        });\r\n    }\r\n\r\n    showPopUp = (ref) => {\r\n        ref.current.style.top = \"10px\";\r\n        setTimeout( () => {\r\n            ref.current.style.top = \"-1000px\";\r\n        }, 10000);\r\n\r\n    }\r\n\r\n    onClickNotif = () => {\r\n        let { url } = this.props.match;\r\n        //hide notif , and got to notification\r\n        this.popUp.current.style.top = \"-1000px\";\r\n        this.props.history.push(`${url}/dashboard/notifs`);\r\n        \r\n    }\r\n\r\n    logOut = () => {\r\n        this.props.logOut();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //connect socket\r\n        console.log(' MAIN component did mount');\r\n        mySocket.connect( this.props.session.username , this.props.session.type_user, this.props.session.num_user);\r\n        this.socket.on('new notif' , (createdNotif) => {\r\n            console.log('new notif received on main' , createdNotif);\r\n            //keep in newNotifs , last 5 notifs of less than two hours\r\n            let newNewNotifs = this.state.newNotifs.slice();\r\n            if(newNewNotifs.length > 4) newNewNotifs.pop();\r\n            newNewNotifs.unshift(createdNotif);\r\n            console.log('newNewNotifs' , newNewNotifs);\r\n            newNewNotifs = newNewNotifs.filter( (newNotif) => {\r\n                let now_2 = new Date().getTime() - (10*60*1000);\r\n                let date_notif = new Date(newNotif.date_envoie).getTime();\r\n                console.log('now_2' , now_2 );\r\n                console.log( 'date_notif' ,date_notif); \r\n                console.log ( ' date_notif is more than 10 minutes old ' , date_notif < now_2 );\r\n                if( date_notif < now_2 ) return false;\r\n                else return true;\r\n            });\r\n            console.log('newNewNotifs' , newNewNotifs);\r\n            this.showPopUp(this.popUp);\r\n            let newNbNewNotification = this.state.nbNewNotification + 1;\r\n            this.setState({\r\n                newNotifs : newNewNotifs,\r\n                nbNewNotification : newNbNewNotification,\r\n            })\r\n        });\r\n\r\n        this.socket.on('new message -main', (newMessage)=>{\r\n            console.log('new message -main', newMessage);\r\n            this.socket.emit('get nb new message', this.props.session.num_user);\r\n            let newNewMessageNotifs = this.state.newMessageNotifs.slice(); \r\n            if( this.props.location.pathname !== '/acim/message'){\r\n                newNewMessageNotifs.unshift(newMessage);\r\n                console.log('newNewMessageNotifs' , newNewMessageNotifs);\r\n                newNewMessageNotifs = newNewMessageNotifs.filter( (newNotif) => {\r\n                    let now_2 = new Date().getTime() - (10*60*1000);\r\n                    let date_notif = new Date(newNotif.date_envoie).getTime();\r\n                    console.log('now_2' , now_2 );\r\n                    console.log( 'date_notif' ,date_notif); \r\n                    console.log ( ' date_notif is more than 10 minutes old ' , date_notif < now_2 );\r\n                    if( date_notif < now_2 ) return false;\r\n                    else return true;\r\n                });\r\n                console.log('newNewMessageNotifs' , newNewMessageNotifs);\r\n                this.showPopUp(this.popUpMessage);\r\n            }\r\n            //let newNbNewMessage = this.state.nbNewMessage + 1;\r\n            this.socket.emit('get nb new message', this.props.session.num_user);\r\n            this.setState({\r\n                newMessageNotifs : newNewMessageNotifs,\r\n                //nbNewMessage : newNbNewMessage,\r\n            });\r\n        });\r\n\r\n        this.socket.emit('get notifs list unanswered');\r\n        this.socket.on('unanswered notifs nb', (nb) => {\r\n            console.log('unanswered notifs nb',nb);\r\n            this.nbNewNotificationPlus(nb);\r\n        });\r\n\r\n        this.socket.emit('get nb new message', this.props.session.num_user);\r\n        this.socket.on('nb new message -main', (nbNewMessage) =>{\r\n            console.log('nb new message -main', nbNewMessage);\r\n            this.setState({\r\n                nbNewMessage : nbNewMessage,\r\n            });\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        //close socket connection\r\n        console.log('UNMOUNT main');\r\n        this.socket.off('new notif');\r\n        this.socket.off('nb tache undone');\r\n        this.socket.off('unanswered notifs nb');\r\n        this.socket.off('new message -main');\r\n        this.socket.off('nb new message -main');\r\n        this.socket.offAny();\r\n        mySocket.socket.disconnect();\r\n    }\r\n\r\n    showNewNotifs = () => {\r\n        return (\r\n            this.state.newNotifs.map( notif => {\r\n                let statutStyle ;\r\n                switch (notif.probleme_statut_code){\r\n                    case 'MAX':\r\n                        statutStyle = {\r\n                            color : 'red',\r\n                        }\r\n                        break;\r\n                    case 'MID':\r\n                        statutStyle = {\r\n                            color : 'yellow',\r\n                        }\r\n                        break;\r\n                    case 'MIN':\r\n                        statutStyle = {\r\n                            color : 'blue',\r\n                        }\r\n                        break;\r\n                     default :\r\n                        break;\r\n                }\r\n                return (\r\n                    <div className = \"notif_pop_notif\" key={notif.num_notification} onClick={this.onClickNotif}>\r\n                        <p id=\"notif_time\">{new Date(notif.date_envoie).toLocaleTimeString('fr-FR')}</p>\r\n                        <p style={statutStyle}> {notif.probleme_statut} </p>\r\n                        <p> {notif.probleme_type} </p>\r\n                        <p> {notif.lieu} </p>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    onClickMessageNotif = (sender) => {\r\n        console.log('open message' , sender);\r\n        let { url } = this.props.match;\r\n        //hide notif , and got to notification\r\n        this.popUpMessage.current.style.top = \"-1000px\";\r\n        this.props.history.push(`${url}/message`, sender );\r\n    }\r\n\r\n    showNewMessageNotifs = () => {\r\n        return(\r\n            this.state.newMessageNotifs.map( msNotif => {\r\n                let userFrom = {\r\n                    num_user : msNotif.num_app_user_envoyeur,\r\n                    username : msNotif.envoyeur_username,\r\n                }\r\n                return (\r\n                    <div className = \"notif_pop_notif\" onClick={()=>this.onClickMessageNotif(userFrom)} key={msNotif.num_message}>\r\n                        <p> Nouveau message de {userFrom.username} </p>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\t\r\n\r\n    render(){\r\n\r\n        let { path, url } = this.props.match;\r\n        let {\r\n            session,\r\n        } = this.props;\r\n        let { showSub,\r\n                numSelectedIntervention ,\r\n                nbNewMessage,\r\n        } = this.state;\r\n        let displayStyle ;\r\n        let subStyle ;\r\n        let subDisplayChildrenStyle;\r\n        if(showSub){\r\n            displayStyle = {\r\n                ...displayStyle,\r\n                display : 'none',\r\n            };\r\n            subStyle = {\r\n                ...subStyle,\r\n                width : '100%',\r\n            };\r\n        }else{\r\n            subStyle = {\r\n                ...subStyle,\r\n                width : '0px',\r\n            };\r\n            subDisplayChildrenStyle = {\r\n                ...subDisplayChildrenStyle,\r\n                display : 'none',\r\n            };\r\n        }\r\n            return (\r\n                <div className=\"main_layout\">\r\n                    <div className=\"notif_pop\" ref={this.popUp}>\r\n                        {this.showNewNotifs()}\r\n                    </div>\r\n                    <div className=\"notif_pop\" ref={this.popUpMessage}>\r\n                        {this.showNewMessageNotifs()}\r\n                    </div>\r\n                    <div className=\"header\">\r\n                        <h1>mptdn_acim</h1>\r\n                        <p> {this.props.session.username} </p>\r\n                        <button onClick={()=> this.showPopUp(this.popUp) }> show pop </button>\r\n                        <button onClick={()=> this.showPopUp(this.popUpMessage) }> show pop message </button>\r\n                        <button onClick={this.logOut}> se deconnecter </button>\r\n                    </div>\r\n                    <div className=\"main_display\">\r\n                        <nav className=\"side_nav\">\r\n                            <NavLink activeClassName=\"active_navLink\"  to={`${url}/dashboard`} onClick={this.closeSub}>tableau de bord</NavLink>\r\n                            <NavLink activeClassName=\"active_navLink\"  to={`${url}/mytask`} onClick={this.closeSub}>Mes taches</NavLink>\r\n                            <NavLink activeClassName=\"active_navLink\"  to={`${url}/message`} onClick={this.closeSub}>Messages {(nbNewMessage>0) ? `(${nbNewMessage})` : ''}</NavLink>\r\n                            <NavLink activeClassName=\"active_navLink\"  to={`${url}/notifsHistory`} onClick={this.closeSub}>Historiques des notifications</NavLink>\r\n                            <NavLink activeClassName=\"active_navLink\"  to={`${url}/interventionHistory`} onClick={this.closeSub}>Historiques des interventions</NavLink>\r\n                        </nav>\r\n                            <div className=\"main-tabDisplay\" >\r\n                                <div className=\"display\" style={displayStyle}>\r\n                                    <Switch>\r\n                                        <Route exact path={path}> \r\n                                            <Redirect to={`${path}/dashboard`}/>\r\n                                        </Route>\r\n\r\n                                        <Route path={`${path}/dashboard`} render= {\r\n                                            (routeProps) => <Dashboard \r\n                                                                {...routeProps} \r\n                                                                socket={this.socket} \r\n                                                                session={this.props.session} \r\n                                                                nbNewNotification = {this.state.nbNewNotification}  \r\n                                                                nbNewNotificationToZero = {() => this.nbNewNotificationPlus('0')} \r\n                                                                showSub={this.showSub}\r\n                                                                closeSub ={()=> this.showSub(numSelectedIntervention)} \r\n                                                                />\r\n                                        }/>\r\n\r\n                                        <Route path={`${path}/mytask`} \r\n                                                render = {\r\n                                                    (routeProps) => <ToDoList {...routeProps} \r\n                                                                        {...this.props} \r\n                                                                        showSub={this.showSub} \r\n                                                                        socket={this.socket} \r\n                                                                        num_tech_main={session.num_user} \r\n                                                                        topText={`Listes des taches a faire par ${session.username} :`}\r\n                                                                        closeSub ={()=> this.showSub(numSelectedIntervention)} \r\n                                                                        />\r\n\r\n                                        }/>\r\n\r\n                                        <Route path={`${path}/notifsHistory`} \r\n                                                render = { (routeProps) => \r\n                                                    <NotifsHistory  \r\n                                                        {...routeProps} \r\n                                                        session={this.props.session} \r\n                                                        socket={this.socket}\r\n                                                        closeSub ={()=> this.showSub(numSelectedIntervention)} \r\n                                                        />\r\n                                        }/>\r\n\r\n                                        <Route path={`${path}/interventionHistory`} \r\n                                                render = { (routeProps) => \r\n                                                    <InterventionHistory  {...routeProps} \r\n                                                        session={this.props.session} \r\n                                                        socket={this.socket} \r\n                                                        showSub={this.showSub}\r\n                                                        closeSub ={()=> this.showSub(numSelectedIntervention)} \r\n                                                        />\r\n                                        }/>\r\n\r\n                                        <Route path={`${path}/message`}\r\n                                                render = { (routeProps) =>\r\n                                                    <MessagePage \r\n                                                        session = {this.props.session}\r\n                                                        socket={this.socket}\r\n                                                        { ... routeProps}\r\n                                                        setNbNewMessageToZero = { () => this.setNbNewMessage(0) }\r\n                                                    />\r\n\r\n                                                }/>\r\n\r\n                                    </Switch>\r\n                                </div>\r\n                                <div className=\"sub-display\" style={subStyle}>\r\n                                    <InterventionPage \r\n                                        num_intervention ={this.state.numSelectedIntervention} \r\n                                        {...this.props}  \r\n                                        style={subDisplayChildrenStyle} \r\n                                        closeSub ={()=> this.showSub(numSelectedIntervention)} \r\n                                        showSub = {this.showSub}\r\n                                        socket={this.socket}\r\n                                        />\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            );\r\n    }\r\n}\r\n","import './index.css';\nimport React from 'react';\n\nexport default class Notify_header extends React.Component {\n    render () {\n        return (\n            <div className=\"notify_header header\">\n                <h1>mptdn_acim</h1>\n                <p> {this.props.session.username} </p>\n                <button onClick={this.props.showNotif} > showNotif </button>\n                <button onClick={this.props.logOut}> se deconnecter </button>\n            </div>\n        );\n    }\n}\n","import './index.css';\r\nimport React from 'react';\r\nimport Dropdown from './../../utils/dropDown';\r\n\r\n\r\nexport default class Ask extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            listProblem : [],\r\n            listProblemStatut : [],\r\n            listLieu : [],\r\n            session : this.props.session,\r\n            problem : '',\r\n            num_probleme_type : '',\r\n            num_probleme_statut : '',\r\n            num_lieu : '',\r\n            remarque : '',\r\n            indication : ''\r\n        }\r\n    }\r\n    updateProblem = (e) => {\r\n       this.setState({\r\n           problem : e.target.value,\r\n       });\r\n    }\r\n    updateProblemType = (e) => {\r\n       this.setState({\r\n           num_probleme_type : e.target.value,\r\n       });\r\n    }\r\n    updateProblemStatut = (e) => {\r\n       this.setState({\r\n           num_probleme_statut : e.target.value,\r\n       });\r\n    }\r\n    updateLieu = (e) => {\r\n       this.setState({\r\n           num_lieu : e.target.value,\r\n       });\r\n    }\r\n    updateRemarque = (e) => {\r\n       this.setState({\r\n           remarque : e.target.value,\r\n       });\r\n    }\r\n    componentDidMount = () => {\r\n        console.log('ask mount');\r\n        //console.log(this.props.session);\r\n        //get the problems\r\n        if( this.props.socket ){\r\n            //get probleme spec : get listProbleme , statut , Lieu\r\n            this.props.socket.on('list problem', (listProblem) => {\r\n                console.log('list problem in ask' , listProblem );\r\n                let newListProblem = listProblem.map( item => {\r\n                    return { \r\n                        key : item.num_probleme_type,\r\n                        value : item.num_probleme_type,\r\n                        libelle : item.libelle,\r\n                        code: item.code,\r\n                    }\r\n                });\r\n                this.setState({\r\n                    listProblem : newListProblem,\r\n                    num_probleme_type : newListProblem[0].value,\r\n                });\r\n            });\r\n\r\n            this.props.socket.on('list problem_statut', (listProblemStatut) => {\r\n                console.log(' getting list problem_statut');\r\n                let newListProblemStatut = listProblemStatut.map( item => ({\r\n                    key : item.num_probleme_statut,\r\n                    value : item.num_probleme_statut,\r\n                    libelle : item.libelle,\r\n                }));\r\n\r\n                this.setState({\r\n                    listProblemStatut : newListProblemStatut,\r\n                    num_probleme_statut : newListProblemStatut[0].value,\r\n                });\r\n\r\n            });\r\n\r\n            this.props.socket.on('list lieu', (listLieu) => {\r\n                console.log(' getting list lieu');\r\n                let newListLieu = listLieu.map( item => ({\r\n                    key : item.num_lieu,\r\n                    value : item.num_lieu,\r\n                    libelle : item.libelle,\r\n                }));\r\n\r\n                this.setState({\r\n                    listLieu : newListLieu,\r\n                    num_lieu : newListLieu[0].value,\r\n                });\r\n            });\r\n\r\n            this.props.socket.on('I sent a notif', (createdNotif) => {\r\n                //alert('notification sent', createdNotif );\r\n                createdNotif.date_envoie = new Date(createdNotif.date_envoie).toLocaleString('fr-FR');\r\n                console.log('new notif in history');\r\n                this.props.nbNewNotifsPlus();\r\n                this.setState({\r\n                    indication : `Demande envoyee #${createdNotif.date_envoie}`,\r\n                });\r\n            });\r\n\r\n\r\n            this.props.socket.emit('get problem definition');\r\n        }else{\r\n            console.log( ' no socket in ask');\r\n        }\r\n\r\n    }\r\n\r\n    componentDidupdate = () => {\r\n        console.log('componentDidUpdate ask');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        console.log('unmount ask');\r\n        this.props.socket.off('list problem');\r\n        this.props.socket.off('list problem_statut');\r\n        this.props.socket.off('list lieu');\r\n        this.props.socket.off('I sent a notif');\r\n    }\r\n\r\n    sendNotifs = () => {\r\n        //console.log('send notifs based on ' , this.state );\r\n        let selectedProblemTypeCode;\r\n        console.log('listProblem' , this.state.listProblem );\r\n        if ( this.state.listProblem.length !== 0 ) selectedProblemTypeCode = this.state.listProblem.find( problem => problem.key === this.state.num_probleme_type).code;\r\n        console.log(' selected problem type is ' + selectedProblemTypeCode );\r\n        //if code is OTH , remarque is required\r\n        if ( selectedProblemTypeCode === 'OTH' && !this.state.remarque ) {\r\n            //alert(' Vous devez ecrire une remarque');\r\n            this.setState({\r\n                indication : 'Vous devez ecrire une remarque',\r\n            });\r\n            return;\r\n        }\r\n        if(this.props.session && this.state.num_lieu && this.state.num_probleme_type && this.state.num_probleme_statut ){\r\n            //create the problem first\r\n            let newProblem = {\r\n                num_probleme_type : this.state.num_probleme_type,\r\n                num_probleme_statut : this.state.num_probleme_statut,\r\n                num_lieu : this.state.num_lieu,\r\n                remarque : this.state.remarque,\r\n            }\r\n            let newNotif = {\r\n                num_app_user_user : this.state.session.num_user,\r\n                newProblem,\r\n            }\r\n            console.log('send notif ' , newNotif );\r\n            this.props.socket.emit('notif' , newNotif );\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let indicationStyle ;\r\n        if( this.state.indication ){\r\n            //show indication\r\n            indicationStyle = {\r\n                opacity : 1,\r\n                right : 0,\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"ask\">\r\n                <p>{ `Demande d'assistance`}</p>\r\n                <div className=\"dropdown-zone\">\r\n                    <p> Probleme  : </p>\r\n                    <Dropdown value={this.state.num_probleme_type} onChange={this.updateProblemType}  objArray={this.state.listProblem}/>\r\n                </div>\r\n                <div className=\"remarque-problem\">\r\n                    <p> remarque : </p>\r\n                    <textarea value= {this.state.remarque} onChange={this.updateRemarque} placeholder=\"remarque ici\" />\r\n                </div>\r\n                <div className=\"double-dropdown\">\r\n                    <div className=\"dropdown-zone\">\r\n                        <p> Urgence : </p>\r\n                        <Dropdown defaultValue=\"xx\" value={this.state.num_probleme_statut} objArray={this.state.listProblemStatut} onChange={this.updateProblemStatut}/>\r\n                    </div>\r\n                    <div className=\"dropdown-zone\">\r\n                        <p> Lieu : </p>\r\n                        <Dropdown  value={this.state.num_lieu} objArray={this.state.listLieu} onChange={this.updateLieu} />\r\n                    </div>\r\n                </div>\r\n                <button className=\"my-button\" onClick={ this.sendNotifs }> Envoyer </button>\r\n                <div className=\"indication\" style={indicationStyle}> { this.state.indication } </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import './index.css';\nimport React from 'react';\nimport { Urgent } from './../../urgent';\n\nexport default class Notif_history extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            detailsAreShown : false ,\n        }\n    }\n    showDetails = () => {\n        this.setState({\n            detailsAreShown : !(this.state.detailsAreShown),\n        });\n    }\n    showInfoOf = (num_intervention) => {\n        this.props.showSub(num_intervention);\n    }\n    render () {\n        let style;\n        let sumStyle ;\n        let statutStyle ;\n        let detailStyle ;\n        switch(this.props.notif.statut_code){\n            case Urgent.MAX.code :\n                style = {\n                    borderLeft : '3px solid red',\n                    //borderRight : '3px solid red',\n                };\n                statutStyle = {\n                    //background : 'red',\n                    color : 'red',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MID.code :\n                style = {\n                    borderLeft : '3px solid yellow',\n                    //borderRight : '3px solid yellow',\n                };\n                statutStyle = {\n                    //background : 'yellow',\n                    color : 'yellow',\n                    fontWeight : 'bold',\n                }\n                break;\n\n            case Urgent.MIN.code :\n                style = {\n                    borderLeft : '3px solid blue',\n                    //borderRight : '2px solid blue',\n                };\n                statutStyle = {\n                    //background : 'blue',\n                    color : 'blue',\n\n                }\n                break;\n             default :\n                break;\n        }\n        if(this.state.detailsAreShown){\n            detailStyle = {\n                height : \"80%\",\n            };\n            sumStyle = {\n                height : \"15%\",\n            };\n            style = {\n                ...style,\n                height : \"300px\",\n            }\n\n        }\n        if(this.props.notif.num_app_user_tech_main && this.props.notif.date_reponse){\n            style = {\n                ...style,\n                background : '#a9c8f7',\n            }\n        }\n        let {\n            probleme_type ,\n            code,\n            statut_libelle,\n            lieu,\n            date_envoie,\n            remarque,\n            tech_main_username,\n            date_reponse,\n            num_notification,\n            num_intervention ,\n        } = this.props.notif;\n        return (\n            <div className=\"notif_history\" style={style} >\n                <div className=\"notif_history-sum\" style={sumStyle}>\n                    <div className=\"date_envoie\">\n                        <p> Date d'envoie : </p>\n                        <p> {date_envoie} </p>\n                    </div>\n                    <div className=\"probleme_type\" >\n                        <p> {probleme_type} </p>\n                        <p> {code} </p>\n                    </div>\n                    <div className=\"probleme_statut\" style={statutStyle}>\n                        <p> {statut_libelle} </p>\n                        <p> {lieu} </p>\n                    </div>\n                    <button onClick={this.showDetails}> Details </button>\n                </div>\n                { this.state.detailsAreShown &&\n                    <div className=\"notif-details\" style={detailStyle}>\n                        <p> remarque: {remarque} </p>\n                        <p> prise en charge par : {tech_main_username}  </p>\n                        <p> repondue le : {date_reponse} </p>\n                        <p> ID notification : {num_notification} </p>\n                        <p> ID intervention : \n                            { (num_intervention !== 'nd') &&\n                                <button href=\"#\" onClick={() => this.showInfoOf(num_intervention)}> {num_intervention} </button>\n                            }\n                        </p>\n                        <p> Details 1 </p>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React from 'react';\nimport NotifHistory from './../notifHistory';\nimport { Urgent } from './../../urgent';\n\n\nexport default class History extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            notifsTab : [],\n        }\n    }\n    componentDidMount = () => {\n        //get all history :3 or a part of it \n        this.props.socket.emit('get notifs history', this.props.session.num_user);\n        this.props.socket.on('notifs history', (notifsTab) => {\n            console.log('notification history', notifsTab);\n            const newNotifsTab = notifsTab.map( item => ({\n                num_notification : item.num_notification,\n                probleme_type : item.probleme_type,\n                probleme_code : item.code,\n                statut_code : item.statut,\n                statut_libelle : item.statut_libelle,\n                lieu : item.lieu,\n                remarque : item.remarque || '-',\n                date_envoie : new Date(item.date_envoie).toLocaleString('fr-FR'),\n                num_app_user_tech_main : item.num_app_user_tech_main,\n                tech_main_username : item.tech_main_username || '-',\n                date_reponse : (item.date_reponse)? new Date(item.date_reponse).toLocaleString('fr-FR'): '-',\n                num_intervention : item.num_intervention || 'nd',\n            }));\n            this.setState({\n                notifsTab : newNotifsTab,\n            });\n        });\n\n        this.props.socket.on('notif from tech_main' , () => {\n            //tech_main has taken charge of something\n            console.log('notif from tech_main in history js');\n            setTimeout( () => {\n                console.log('notif from tech_main');\n                this.props.socket.emit('get notifs history', this.props.session.num_user);\n            } , 5000);\n        });\n\n        \n        //get the nb of new notfis to zero\n        this.props.nbNewNotifsToZero();\n    }\n    displayNotif  = (list) => {\n        return list.map( notif => <NotifHistory showSub={this.props.showSub} notif={notif} key={notif.num_notification}/> );\n    }\n\n    componentWillUnmount = () => {\n        this.props.socket.off('notifs history');\n    }\n    render(){\n        return (\n            <div id=\"notifsList\">\n                <p> Historiques des notifications envoyees par {this.props.session.username}:  </p>\n                <div id=\"scroll_list-notifsList\">\n                    {this.displayNotif(this.state.notifsTab)}\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css';\nimport React from 'react';\nimport Intervention from './../intervention';\n\n\nexport default class Intervention_notification extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            interventionTab : [],\n        }\n    }\n    componentDidMount = () => {\n        console.log('component did mount intervention_notification');\n        this.props.socket.emit('get list intervention_notification',this.props.session.num_user);\n        this.props.socket.on('list intervention_notification',(notifList) => {\n            console.log('list intervention' , notifList);\n            let new_interventionTab = notifList.map( (item,index) => ({\n                num_intervention : item.num_intervention ,\n                code_intervention_type : item.code_intervention_type,\n                date_programme : item.date_programme,\n                lieu_libelle : item.lieu,\n                intervention_type : item.libelle_intervention_type,\n                tech_main_username : item.tech_main_username,\n                motif : item.motif,\n                numero : index + 1,\n                done : item.done,\n                children : item.children,\n                probleme_resolu : item.probleme_resolu,\n            }));\n            this.setState({\n                interventionTab : new_interventionTab,\n            });\n        });\n        this.props.socket.on('ended intervention', () => {\n            this.props.socket.emit('get list intervention_notification',this.props.session.num_user);\n        });\n\n    }\n\n    componentWillUnmount = () => {\n        console.log('intervention_notification will unmount');\n        this.props.socket.off('list intervention_notification');\n        //this.props.socket.off('ended intervention'); better in interventionPage as it is always mounted until we unmmount all\n    }\n    displayListInterevention = (list) => {\n        return list.map( intervention => {\n            \n            if ( intervention.num_intervention === this.props.numSelectedIntervention ){\n                return <Intervention {...this.props} intervention={intervention} key={intervention.num_intervention} selected={true}/>;\n            }else{\n                return <Intervention {...this.props} intervention={intervention} key={intervention.num_intervention} selected={false}/>;\n            }\n        });\n    }\n    render () {\n        return (\n            <div className=\"intervention_notification\">\n                <p> Interventions provenant des notifactions de {this.props.session.username} </p>\n                <div className=\"scroll_list\">\n                    {this.displayListInterevention(this.state.interventionTab)}\n                </div>\n            </div>\n        );\n    }\n}\n","import './index.css';\r\nimport React from 'react';\r\nimport {  Switch , Route , Redirect, NavLink , useRouteMatch  } from 'react-router-dom'; \r\nimport NotifyHeader from './../notifyHeader';\r\nimport Ask from './../ask';\r\nimport History from './../history';\r\nimport InterventionNotification from './../interventionNotification';\r\nimport InterventionPage from './../interventionPage';\r\nimport { mySocket } from './../../socket_io/socket_io';\r\n\r\nexport default class Notify extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            nbNewNotifs : 0,\r\n            notifsList : [\r\n                \r\n            ],\r\n            showSub : false,\r\n            numSelectedIntervention : null ,\r\n        }\r\n        this.socket = mySocket.socket;\r\n        this.notify_notif_pop = React.createRef();\r\n        //this.sub_display = React.createRef();\r\n\r\n    }\r\n\r\n    nbNewNotifsPlus = (nb) => {\r\n        console.log('new notifs ++');\r\n        \r\n        let newNb = nb || this.state.nbNewNotifs + 1;\r\n        //nb if defined to be 0 needs to be a string , !('0') is true so nbNewNotifs becomes a string and may lead to some strange behaviour so parseInt is used\r\n        newNb = parseInt(newNb);\r\n        console.log('new notifs ', newNb);\r\n        this.setState({\r\n            nbNewNotifs : newNb,\r\n        });\r\n    }\r\n    logOut = () => {\r\n        this.props.logOut();\r\n    }\r\n\r\n    showNotif = () => {\r\n        console.log('show Notif');\r\n        this.notify_notif_pop.current.style.top = '157px';\r\n        setTimeout( ()=> {\r\n            this.notify_notif_pop.current.style.top = '-1000px'\r\n        }, 10000);\r\n    }\r\n\r\n    hideNotif = () => {\r\n        this.notify_notif_pop.current.style.top = '-1000px';\r\n    }\r\n\r\n    showSubWithInfo = (num_intervention) => {\r\n        let newShowSub;\r\n        if( this.state.numSelectedIntervention === num_intervention ) {\r\n            newShowSub = !(this.state.showSub);\r\n            num_intervention = null;\r\n        }\r\n        else newShowSub = true;\r\n        this.setState({\r\n            showSub : newShowSub,\r\n            numSelectedIntervention : num_intervention ,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //initialize a client socket io\r\n        mySocket.connect( this.props.session.username , this.props.session.type_user , this.props.session.num_user );\r\n\r\n        this.socket.on('notif from tech_main' , ({tech_main_username , probleme_type , date_envoie , delai ,lieu ,num_notification}) => {\r\n            console.log('notif from tech_main' , tech_main_username , probleme_type , date_envoie , delai );\r\n            let date_envoie_formatted = new Date(date_envoie).toLocaleString('fr-FR');\r\n            //show notif saying a sentence\r\n            const notif = {\r\n                tech_main_username,\r\n                probleme_type,\r\n                lieu,\r\n                date_envoie_formatted : date_envoie_formatted,\r\n                date_envoie,\r\n                delai,\r\n                text : `${tech_main_username} arrive pour le probleme : \" ${probleme_type} \" lieu : ${lieu} - notifie le ${date_envoie_formatted} -- \r\n                delai : ${delai}`,\r\n                key : num_notification,\r\n            }\r\n            let newNotifsList = this.state.notifsList.slice();\r\n            if(newNotifsList.length > 4) newNotifsList.pop();\r\n            newNotifsList.unshift(notif);\r\n            newNotifsList = newNotifsList.filter( item => {\r\n                let now_10 = new Date().getTime() - (10*60*1000);\r\n                let date_notif = new Date(item.date_envoie).getTime();\r\n                if(date_notif < now_10 ) return false;\r\n                else return true;\r\n            });\r\n            console.log('newNotifsList', newNotifsList );\r\n            this.showNotif();\r\n            this.setState({\r\n                notifsList : newNotifsList,\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        console.log('unmount notify');\r\n        this.socket.off('list problem');\r\n        this.socket.off('list problem_statut');\r\n        this.socket.off('list lieu');\r\n        this.socket.off('notif from tech_main');\r\n        this.socket.offAny();\r\n        mySocket.disconnect();\r\n    }\r\n\r\n    formatNotifsList = (notifsList) => {\r\n        return (\r\n            notifsList.map( item => \r\n                <div className=\"notify_notif\" key={item.key} onClick={this.hideNotif}>\r\n                    <p> {item.tech_main_username} arrive </p>\r\n                    <p> probleme : {item.probleme_type} -- {item.lieu} </p>\r\n                    <p> notifiee le : {item.date_envoie_formatted} </p>\r\n                    <p> delai : {item.delai} </p>\r\n                </div>\r\n            )\r\n        );\r\n\r\n    }\r\n\r\n    render () {\r\n        let {\r\n            numSelectedIntervention,\r\n        } = this.state;\r\n        let subStyle ;\r\n        let subDisplayChildrenStyle;\r\n        if ( this.state.showSub ) {\r\n            subStyle = {\r\n                width : '45%',\r\n            }\r\n           \r\n        }else{\r\n            subStyle = {\r\n                background : 'black',\r\n                width : '0px',\r\n            };\r\n            subDisplayChildrenStyle = {\r\n                display : 'none',\r\n            };\r\n        }\r\n        \r\n        return (\r\n            <div className=\"notify_layout\">\r\n                <NotifyHeader {...this.props} showNotif={this.showNotif}/>\r\n                <div className=\"notify_display\">\r\n                    <TabDisplay {...this.state} {...this.props} socket = {this.socket} nbNewNotifsPlus={this.nbNewNotifsPlus} showSub={this.showSubWithInfo} numSelectedIntervention={this.state.numSelectedIntervention}>\r\n                    </TabDisplay>\r\n                    <div className=\"sub-display\" style={subStyle}>\r\n                        <InterventionPage num_intervention ={this.state.numSelectedIntervention} {...this.props} socket={this.socket} style={subDisplayChildrenStyle} closeSub={()=> this.showSubWithInfo(numSelectedIntervention)}/>\r\n                    </div>\r\n                    <div className=\"notify_notif_pop\" ref={this.notify_notif_pop} >\r\n                        {this.formatNotifsList(this.state.notifsList)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction TabDisplay(props){\r\n    let { path, url } = props.match;\r\n    return (\r\n            <div className=\"tab-display\">\r\n                <nav className=\"notify_nav\">\r\n                    <NavLink activeClassName=\"active_navLink_notify\" to={`${url}/ask`}>{ `Demande d'assistance`}</NavLink>\r\n                    <NavLink activeClassName=\"active_navLink_notify\" to={`${url}/history`}>Historiques des demandes{(props.nbNewNotifs>0) ? `(${props.nbNewNotifs})`: ``}</NavLink>\r\n                    <NavLink activeClassName=\"active_navLink_notify\" to={`${url}/intervention`}>Interventions</NavLink>\r\n                </nav>\r\n                <div className=\"display\">\r\n                        {props.children}\r\n                        <Switch>\r\n                            <Route path={`${path}/ask`} render= {\r\n                                (routeProps) =>  <Ask {...routeProps} session={props.session} socket={props.socket} nbNewNotifsPlus={props.nbNewNotifsPlus} />\r\n                            }/>\r\n                            <Route path={`${path}/history`} render= {\r\n                                (routeProps) => <History {...routeProps} session={props.session} socket={props.socket} nbNewNotifsToZero={() => props.nbNewNotifsPlus('0') } showSub={props.showSub} numSelectedIntervention={props.numSelectedIntervention}/>\r\n                            }/>\r\n                            <Route path={`${path}/intervention`} render= {\r\n                                (routeProps) => <InterventionNotification {...routeProps} {...props} socket={props.socket} showSub={props.showSub} numSelectedIntervention={props.numSelectedIntervention}/> \r\n                            }/>\r\n                            <Redirect exact from={path} to={`${path}/ask`} />\r\n                        </Switch>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n\r\n}\r\n","/*protected route component\r\n * path : the path\r\n * takes conditionIn : a function that determines wether the condition to access the route is verified\r\n * render : the render function of the route component \r\n * redirectRender : the redirect in case the conditionIn is false\r\n *\r\n */\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport default class ProtectedRoute extends React.Component {\r\n\r\n    determineRender = () => {\r\n        if(this.props.conditionIn()) return this.props.render;\r\n        else return this.props.redirectRender;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Route  path={this.props.path}\r\n                    render={this.determineRender()}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n","import './App.css';\r\nimport React from 'react';\r\nimport Login from './components/login';\r\nimport Layout from './components/layout';\r\nimport Main from './components/main';\r\nimport Notify from './components/notify';\r\nimport ProtectedRoute from './components/protectedRoute';\r\nimport {  Switch , Route , Redirect  } from 'react-router-dom'; \r\nimport { User, computeHmac } from './userTypes.js'\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log('======== APP constructor');\r\n        this.state = {\r\n            logged : (localStorage.getItem('logged') === 'true') || false,\r\n            num_user : localStorage.getItem('num_user') || '',\r\n            username : localStorage.getItem('username') || '',\r\n            type_user : localStorage.getItem('type_user')|| null,\r\n            t_u: null,\r\n            t_t: null,\r\n        }\r\n        this.computedHash_USER = null;\r\n        this.computedHash_TECH_MAIN = null;\r\n        console.log('constructor', this.state);\r\n    }\r\n\r\n\r\n    setCredentials = (cred) => {\r\n        this.computedHash_TECH_MAIN = null;\r\n        this.computedHash_USER = null;\r\n        this.setState({\r\n            logged : cred.logged,\r\n            num_user : cred.num_user,\r\n            username : cred.username,\r\n            type_user : cred.type_user,\r\n        });\r\n    }\r\n\r\n    logOut = () => {\r\n        this.setCredentials ( { \r\n            logged : false,\r\n            num_user : '',\r\n            username : '' ,\r\n            type_user : null,\r\n        });\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        //computing t_u , t_t ,\r\n        //session is ini in constructor\r\n        console.log('======= APP component did mount , state ' , this.state);\r\n        let computedHash_USER;\r\n        let computedHash_TECH_MAIN;\r\n        let lastLogged = (localStorage.getItem('logged') === 'true');\r\n        if( lastLogged ) {\r\n            console.log('compute hmac for user , tech_main');\r\n            computedHash_USER       = await computeHmac(User.USER.code, this.state.username);\r\n            computedHash_TECH_MAIN  = await computeHmac(User.TECH_MAIN.code, this.state.username);\r\n            console.log(' after compute ' , computedHash_USER , computedHash_TECH_MAIN);\r\n            this.setState({\r\n                t_u : computedHash_USER,\r\n                t_t : computedHash_TECH_MAIN,\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    async shouldComponentUpdate(nextProps,nextState){\r\n        console.log('==== APP shouldComponentUpdate  state',nextState);\r\n        //if we go from no logged to logged , need to re-compute t_u and t_t\r\n        if( this.state.logged !== nextState.logged ){\r\n            console.log('compute hmac for user , tech_main');\r\n            let computedHash_USER;\r\n            let computedHash_TECH_MAIN;\r\n            if( !nextState.logged ) {\r\n                //nextState is not logged , we are disconnecting\r\n                //no need to compute just nullify\r\n                computedHash_USER = null;\r\n                computedHash_TECH_MAIN = null;\r\n\r\n            }else{\r\n                computedHash_USER       = await computeHmac(User.USER.code,nextState.username);\r\n                computedHash_TECH_MAIN  = await computeHmac(User.TECH_MAIN.code, nextState.username);\r\n            }\r\n            console.log(' after compute ' , computedHash_USER , computedHash_TECH_MAIN);\r\n            this.setState({\r\n                t_u : computedHash_USER,\r\n                t_t : computedHash_TECH_MAIN,\r\n            });\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('==== APP componentDidUpdate ');\r\n        localStorage.setItem('logged',this.state.logged);\r\n        localStorage.setItem('num_user',this.state.num_user);\r\n        localStorage.setItem('username', this.state.username);\r\n        localStorage.setItem('type_user',this.state.type_user);\r\n    }\r\n    \r\n    render(){\r\n        console.log('===== APP render');\r\n        console.log('state ', this.state);\r\n\r\n        //function for changing redirect according to type_ser and logged\r\n        const determineRootRedirect = () => { \r\n            console.log('==== determineRootRedirect function ');\r\n            console.log( 'state in determineRootRedirect ', this.state);\r\n            console.log(' computedhash ' , this.state.t_u , this.state.t_t);\r\n            \r\n            if(this.state.logged){\r\n                console.log(' logged');\r\n                if(this.state.type_user === this.state.t_u) return '/notify';\r\n                if(this.state.type_user === this.state.t_t) return '/acim';\r\n            }\r\n            console.log('no logged');\r\n            console.log('==== end determineRootRedirect ');\r\n            return '/login';\r\n        }\r\n        const redirectTo = determineRootRedirect();\r\n        console.log('redirectTo ' , redirectTo);\r\n\r\n        let session;\r\n        if(this.state.logged){\r\n            //configure session\r\n            session = {\r\n                num_user : this.state.num_user,\r\n                username : this.state.username,\r\n                type_user : this.state.type_user,\r\n             }\r\n        }\r\n        console.log('=== end of render appp');\r\n\r\n        return (\r\n        <Layout>\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <ProtectedRoute path=\"/login\"\r\n                                    conditionIn={ () => {\r\n                                        if( !this.state.logged ) return true;\r\n                                        else return false;\r\n                                    }}\r\n                                    render={ (routeProps) => \r\n                                        <Login { ... routeProps} setCredentials={this.setCredentials} />\r\n                                    }\r\n                                    redirectRender={ (routeProps) =>\r\n                                        <Redirect to={redirectTo}/>\r\n                                    }\r\n                    />\r\n\r\n\r\n                    <ProtectedRoute path=\"/acim\"\r\n                                    conditionIn={ () => {\r\n                                        if(this.state.logged && this.state.type_user === this.state.t_t) return true ;\r\n                                        else return false;\r\n                                    }}\r\n                                    render={ (routeProps) => \r\n                                        <Main { ... routeProps } session={session} logOut={this.logOut} />\r\n                                    }\r\n                                    redirectRender={ (routeProps) =>\r\n                                        <Redirect to={redirectTo} />\r\n                                    }\r\n                    /> \r\n                    \r\n                    <ProtectedRoute path=\"/notify\"\r\n                        conditionIn={ () => {\r\n                            if(this.state.logged && this.state.type_user === this.state.t_u ) return true;\r\n                            else return false;\r\n                        }}\r\n                        render={ (routeProps) =>\r\n                            <Notify {... routeProps} session={session} logOut = {this.logOut}/>\r\n                        }\r\n                        redirectRender={ (routeProps) =>\r\n                            <Redirect to={redirectTo} />\r\n                        }\r\n                    />\r\n                    \r\n\r\n                    <Route path=\"/info\">\r\n                        <dl>\r\n                            <dt> a.c.i.m </dt>\r\n                            <dd> Application de Coordination des Interventions de Maintenance </dd>\r\n                        </dl>\r\n                    </Route>\r\n\r\n                    <Redirect   from=\"/\" \r\n                                to= \"/login\"/> \r\n                    \r\n                </Switch>\r\n            </div>\r\n        </Layout>\r\n        );\r\n    }\r\n}\r\n                    //<Route path=\"/notify\" render={ (routeProps) => <Notify {... routeProps} session={session} logOut = {this.logOut} /> }/>\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}